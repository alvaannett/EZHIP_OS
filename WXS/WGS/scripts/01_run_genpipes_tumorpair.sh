#!/bin/bash
# Exit immediately on error

set -eu -o pipefail

#-------------------------------------------------------------------------------
# TumorPair SLURM Job Submission Bash script
# Version: 4.3.0
# Created on: 2022-11-04T18:48:50
# Steps:
#   picard_sam_to_fastq: 0 job... skipping
#   skewer_trimming: 5 jobs
#   bwa_mem_sambamba_sort_sam: 5 jobs
#   sambamba_merge_sam_files: 4 jobs
#   gatk_indel_realigner: 46 jobs
#   sambamba_merge_realigned: 4 jobs
#   sambamba_mark_duplicates: 4 jobs
#   recalibration: 8 jobs
#   conpair_concordance_contamination: 6 jobs
#   metrics_dna_picard_metrics: 16 jobs
#   metrics_dna_sample_qualimap: 4 jobs
#   metrics_dna_fastqc: 4 jobs
#   sequenza: 54 jobs
#   manta_sv_calls: 2 jobs
#   strelka2_paired_somatic: 4 jobs
#   strelka2_paired_germline: 4 jobs
#   strelka2_paired_germline_snpeff: 6 jobs
#   purple: 8 jobs
#   rawmpileup: 50 jobs
#   paired_varscan2: 50 jobs
#   merge_varscan2: 2 jobs
#   paired_mutect2: 46 jobs
#   merge_mutect2: 2 jobs
#   vardict_paired: 46 jobs
#   merge_filter_paired_vardict: 2 jobs
#   ensemble_somatic: 2 jobs
#   gatk_variant_annotator_somatic: 40 jobs
#   merge_gatk_variant_annotator_somatic: 2 jobs
#   ensemble_germline_loh: 2 jobs
#   gatk_variant_annotator_germline: 40 jobs
#   merge_gatk_variant_annotator_germline: 2 jobs
#   cnvkit_batch: 8 jobs
#   filter_ensemble_germline: 2 jobs
#   filter_ensemble_somatic: 2 jobs
#   report_cpsr: 2 jobs
#   report_pcgr: 2 jobs
#   run_pair_multiqc: 2 jobs
#   sym_link_fastq_pair: 8 jobs
#   sym_link_final_bam: 8 jobs
#   sym_link_report: 2 jobs
#   sym_link_ensemble: 2 jobs
#   TOTAL: 508 jobs
#-------------------------------------------------------------------------------

OUTPUT_DIR=/lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair
JOB_OUTPUT_DIR=$OUTPUT_DIR/job_output
TIMESTAMP=`date +%FT%H.%M.%S`
JOB_LIST=$JOB_OUTPUT_DIR/TumorPair_job_list_$TIMESTAMP
export CONFIG_FILES="/cvmfs/soft.mugqic/CentOS6/software/genpipes/genpipes-4.3.0/pipelines/tumor_pair/tumor_pair.base.ini,/cvmfs/soft.mugqic/CentOS6/software/genpipes/genpipes-4.3.0/pipelines/common_ini/narval.ini,/cvmfs/soft.mugqic/CentOS6/software/genpipes/genpipes-4.3.0/pipelines/tumor_pair/tumor_pair.extras.ini,files/genpipes_files_batch1/user.config.ini"
mkdir -p $OUTPUT_DIR
cd $OUTPUT_DIR

#-------------------------------------------------------------------------------
# STEP: skewer_trimming
#-------------------------------------------------------------------------------
STEP=skewer_trimming
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: skewer_trimming_1_JOB_ID: skewer_trimming.PRO-00089_BLOOD_1
#-------------------------------------------------------------------------------
JOB_NAME=skewer_trimming.PRO-00089_BLOOD_1
JOB_DEPENDENCIES=
JOB_DONE=job_output/skewer_trimming/skewer_trimming.PRO-00089_BLOOD_1.11f220ea4976d2e0671135d0780276a7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'skewer_trimming.PRO-00089_BLOOD_1.11f220ea4976d2e0671135d0780276a7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/skewer/0.2.2 && \
mkdir -p trim/PRO-00089_BLOOD && \
touch trim/PRO-00089_BLOOD && \
`cat > trim/PRO-00089_BLOOD/adapter.tsv << END
>Adapter1
AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2
AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
$SKEWER_HOME/./skewer --threads 16 --min 25 -q 25 --compress -f sanger \
  -x trim/PRO-00089_BLOOD/adapter.tsv \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair1.fastq.gz \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair2.fastq.gz \
  -o trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1-trimmed-pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1.trim.pair1.fastq.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1-trimmed-pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1.trim.pair2.fastq.gz
skewer_trimming.PRO-00089_BLOOD_1.11f220ea4976d2e0671135d0780276a7.mugqic.done
chmod 755 $COMMAND
skewer_trimming_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 16 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$skewer_trimming_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$skewer_trimming_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: skewer_trimming_2_JOB_ID: skewer_trimming.PRO-00089_OS_T_1
#-------------------------------------------------------------------------------
JOB_NAME=skewer_trimming.PRO-00089_OS_T_1
JOB_DEPENDENCIES=
JOB_DONE=job_output/skewer_trimming/skewer_trimming.PRO-00089_OS_T_1.a0986d00afe128dfae91688ad4d45aea.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'skewer_trimming.PRO-00089_OS_T_1.a0986d00afe128dfae91688ad4d45aea.mugqic.done' > $COMMAND
module purge && \
module load mugqic/skewer/0.2.2 && \
mkdir -p trim/PRO-00089_OS_T && \
touch trim/PRO-00089_OS_T && \
`cat > trim/PRO-00089_OS_T/adapter.tsv << END
>Adapter1
AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2
AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
$SKEWER_HOME/./skewer --threads 16 --min 25 -q 25 --compress -f sanger \
  -x trim/PRO-00089_OS_T/adapter.tsv \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair1.fastq.gz \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair2.fastq.gz \
  -o trim/PRO-00089_OS_T/PRO-00089_OS_T_1 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_OS_T/PRO-00089_OS_T_1-trimmed-pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_OS_T/PRO-00089_OS_T_1.trim.pair1.fastq.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_OS_T/PRO-00089_OS_T_1-trimmed-pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00089_OS_T/PRO-00089_OS_T_1.trim.pair2.fastq.gz
skewer_trimming.PRO-00089_OS_T_1.a0986d00afe128dfae91688ad4d45aea.mugqic.done
chmod 755 $COMMAND
skewer_trimming_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 16 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$skewer_trimming_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$skewer_trimming_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: skewer_trimming_3_JOB_ID: skewer_trimming.PRO-00035_BLOOD_1
#-------------------------------------------------------------------------------
JOB_NAME=skewer_trimming.PRO-00035_BLOOD_1
JOB_DEPENDENCIES=
JOB_DONE=job_output/skewer_trimming/skewer_trimming.PRO-00035_BLOOD_1.316aae0907762b749ef29c9346313c0c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'skewer_trimming.PRO-00035_BLOOD_1.316aae0907762b749ef29c9346313c0c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/skewer/0.2.2 && \
mkdir -p trim/PRO-00035_BLOOD && \
touch trim/PRO-00035_BLOOD && \
`cat > trim/PRO-00035_BLOOD/adapter.tsv << END
>Adapter1
AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2
AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
$SKEWER_HOME/./skewer --threads 16 --min 25 -q 25 --compress -f sanger \
  -x trim/PRO-00035_BLOOD/adapter.tsv \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair1.fastq.gz \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair2.fastq.gz \
  -o trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1-trimmed-pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1.trim.pair1.fastq.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1-trimmed-pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1.trim.pair2.fastq.gz
skewer_trimming.PRO-00035_BLOOD_1.316aae0907762b749ef29c9346313c0c.mugqic.done
chmod 755 $COMMAND
skewer_trimming_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 16 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$skewer_trimming_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$skewer_trimming_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: skewer_trimming_4_JOB_ID: skewer_trimming.PRO-00035_OS_T_1
#-------------------------------------------------------------------------------
JOB_NAME=skewer_trimming.PRO-00035_OS_T_1
JOB_DEPENDENCIES=
JOB_DONE=job_output/skewer_trimming/skewer_trimming.PRO-00035_OS_T_1.e0493f88d8ed4f8874fd7d356e9d02c0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'skewer_trimming.PRO-00035_OS_T_1.e0493f88d8ed4f8874fd7d356e9d02c0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/skewer/0.2.2 && \
mkdir -p trim/PRO-00035_OS_T && \
touch trim/PRO-00035_OS_T && \
`cat > trim/PRO-00035_OS_T/adapter.tsv << END
>Adapter1
AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2
AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
$SKEWER_HOME/./skewer --threads 16 --min 25 -q 25 --compress -f sanger \
  -x trim/PRO-00035_OS_T/adapter.tsv \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair1.fastq.gz \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair2.fastq.gz \
  -o trim/PRO-00035_OS_T/PRO-00035_OS_T_1 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_1-trimmed-pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_1.trim.pair1.fastq.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_1-trimmed-pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_1.trim.pair2.fastq.gz
skewer_trimming.PRO-00035_OS_T_1.e0493f88d8ed4f8874fd7d356e9d02c0.mugqic.done
chmod 755 $COMMAND
skewer_trimming_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 16 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$skewer_trimming_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$skewer_trimming_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: skewer_trimming_5_JOB_ID: skewer_trimming.PRO-00035_OS_T_2
#-------------------------------------------------------------------------------
JOB_NAME=skewer_trimming.PRO-00035_OS_T_2
JOB_DEPENDENCIES=
JOB_DONE=job_output/skewer_trimming/skewer_trimming.PRO-00035_OS_T_2.e4c933d9b681a8a3b2c2f8a60dc02f07.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'skewer_trimming.PRO-00035_OS_T_2.e4c933d9b681a8a3b2c2f8a60dc02f07.mugqic.done' > $COMMAND
module purge && \
module load mugqic/skewer/0.2.2 && \
mkdir -p trim/PRO-00035_OS_T && \
touch trim/PRO-00035_OS_T && \
`cat > trim/PRO-00035_OS_T/adapter.tsv << END
>Adapter1
AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2
AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
$SKEWER_HOME/./skewer --threads 16 --min 25 -q 25 --compress -f sanger \
  -x trim/PRO-00035_OS_T/adapter.tsv \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.8.pair1.fastq.gz \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.8.pair2.fastq.gz \
  -o trim/PRO-00035_OS_T/PRO-00035_OS_T_2 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_2-trimmed-pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_2.trim.pair1.fastq.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_2-trimmed-pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/trim/PRO-00035_OS_T/PRO-00035_OS_T_2.trim.pair2.fastq.gz
skewer_trimming.PRO-00035_OS_T_2.e4c933d9b681a8a3b2c2f8a60dc02f07.mugqic.done
chmod 755 $COMMAND
skewer_trimming_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 16 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$skewer_trimming_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$skewer_trimming_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: bwa_mem_sambamba_sort_sam
#-------------------------------------------------------------------------------
STEP=bwa_mem_sambamba_sort_sam
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: bwa_mem_sambamba_sort_sam_1_JOB_ID: bwa_mem_sambamba_sort_sam.PRO-00089_BLOOD_1
#-------------------------------------------------------------------------------
JOB_NAME=bwa_mem_sambamba_sort_sam.PRO-00089_BLOOD_1
JOB_DEPENDENCIES=$skewer_trimming_1_JOB_ID
JOB_DONE=job_output/bwa_mem_sambamba_sort_sam/bwa_mem_sambamba_sort_sam.PRO-00089_BLOOD_1.aac24a620a24d6971c632ba7c6c9f8e9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bwa_mem_sambamba_sort_sam.PRO-00089_BLOOD_1.aac24a620a24d6971c632ba7c6c9f8e9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bwa/0.7.17 mugqic/sambamba/0.8.0 && \
mkdir -p alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1 && \
touch alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1 && \
bwa mem -t 32 -K 100000000 -Y \
   \
  -R '@RG\tID:PRO-00089_BLOOD_1\tSM:PRO-00089_BLOOD\tLB:PRO-00089_BLOOD\tPU:PRO-00089_BLOOD.1.1\tCN:McGill University and Genome Quebec Innovation Centre\tPL:Illumina' \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/bwa_index/Homo_sapiens.GRCh37.fa \
  trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1.trim.pair1.fastq.gz \
  trim/PRO-00089_BLOOD/PRO-00089_BLOOD_1.trim.pair2.fastq.gz | \
sambamba view -S -f bam \
  /dev/stdin \
    | \
sambamba sort -m 10G \
  /dev/stdin \
  --tmpdir ${SLURM_TMPDIR} \
  --out alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1/PRO-00089_BLOOD_1.sorted.bam && \
sambamba index  \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1/PRO-00089_BLOOD_1.sorted.bam \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1/PRO-00089_BLOOD_1.sorted.bam.bai
bwa_mem_sambamba_sort_sam.PRO-00089_BLOOD_1.aac24a620a24d6971c632ba7c6c9f8e9.mugqic.done
chmod 755 $COMMAND
bwa_mem_sambamba_sort_sam_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 60G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$bwa_mem_sambamba_sort_sam_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$bwa_mem_sambamba_sort_sam_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: bwa_mem_sambamba_sort_sam_2_JOB_ID: bwa_mem_sambamba_sort_sam.PRO-00089_OS_T_1
#-------------------------------------------------------------------------------
JOB_NAME=bwa_mem_sambamba_sort_sam.PRO-00089_OS_T_1
JOB_DEPENDENCIES=$skewer_trimming_2_JOB_ID
JOB_DONE=job_output/bwa_mem_sambamba_sort_sam/bwa_mem_sambamba_sort_sam.PRO-00089_OS_T_1.44bcbb9d1746e5a453746b1d0a9e326e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bwa_mem_sambamba_sort_sam.PRO-00089_OS_T_1.44bcbb9d1746e5a453746b1d0a9e326e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bwa/0.7.17 mugqic/sambamba/0.8.0 && \
mkdir -p alignment/PRO-00089_OS_T/PRO-00089_OS_T_1 && \
touch alignment/PRO-00089_OS_T/PRO-00089_OS_T_1 && \
bwa mem -t 32 -K 100000000 -Y \
   \
  -R '@RG\tID:PRO-00089_OS_T_1\tSM:PRO-00089_OS_T\tLB:PRO-00089_OS_T\tPU:PRO-00089_OS_T.2.1\tCN:McGill University and Genome Quebec Innovation Centre\tPL:Illumina' \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/bwa_index/Homo_sapiens.GRCh37.fa \
  trim/PRO-00089_OS_T/PRO-00089_OS_T_1.trim.pair1.fastq.gz \
  trim/PRO-00089_OS_T/PRO-00089_OS_T_1.trim.pair2.fastq.gz | \
sambamba view -S -f bam \
  /dev/stdin \
    | \
sambamba sort -m 10G \
  /dev/stdin \
  --tmpdir ${SLURM_TMPDIR} \
  --out alignment/PRO-00089_OS_T/PRO-00089_OS_T_1/PRO-00089_OS_T_1.sorted.bam && \
sambamba index  \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T_1/PRO-00089_OS_T_1.sorted.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T_1/PRO-00089_OS_T_1.sorted.bam.bai
bwa_mem_sambamba_sort_sam.PRO-00089_OS_T_1.44bcbb9d1746e5a453746b1d0a9e326e.mugqic.done
chmod 755 $COMMAND
bwa_mem_sambamba_sort_sam_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 60G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$bwa_mem_sambamba_sort_sam_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$bwa_mem_sambamba_sort_sam_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: bwa_mem_sambamba_sort_sam_3_JOB_ID: bwa_mem_sambamba_sort_sam.PRO-00035_BLOOD_1
#-------------------------------------------------------------------------------
JOB_NAME=bwa_mem_sambamba_sort_sam.PRO-00035_BLOOD_1
JOB_DEPENDENCIES=$skewer_trimming_3_JOB_ID
JOB_DONE=job_output/bwa_mem_sambamba_sort_sam/bwa_mem_sambamba_sort_sam.PRO-00035_BLOOD_1.b7ac6a79a753b74186c0613df18011b6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bwa_mem_sambamba_sort_sam.PRO-00035_BLOOD_1.b7ac6a79a753b74186c0613df18011b6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bwa/0.7.17 mugqic/sambamba/0.8.0 && \
mkdir -p alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1 && \
touch alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1 && \
bwa mem -t 32 -K 100000000 -Y \
   \
  -R '@RG\tID:PRO-00035_BLOOD_1\tSM:PRO-00035_BLOOD\tLB:PRO-00035_BLOOD\tPU:PRO-00035_BLOOD.3.1\tCN:McGill University and Genome Quebec Innovation Centre\tPL:Illumina' \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/bwa_index/Homo_sapiens.GRCh37.fa \
  trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1.trim.pair1.fastq.gz \
  trim/PRO-00035_BLOOD/PRO-00035_BLOOD_1.trim.pair2.fastq.gz | \
sambamba view -S -f bam \
  /dev/stdin \
    | \
sambamba sort -m 10G \
  /dev/stdin \
  --tmpdir ${SLURM_TMPDIR} \
  --out alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1/PRO-00035_BLOOD_1.sorted.bam && \
sambamba index  \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1/PRO-00035_BLOOD_1.sorted.bam \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1/PRO-00035_BLOOD_1.sorted.bam.bai
bwa_mem_sambamba_sort_sam.PRO-00035_BLOOD_1.b7ac6a79a753b74186c0613df18011b6.mugqic.done
chmod 755 $COMMAND
bwa_mem_sambamba_sort_sam_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 60G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$bwa_mem_sambamba_sort_sam_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$bwa_mem_sambamba_sort_sam_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: bwa_mem_sambamba_sort_sam_4_JOB_ID: bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_1
#-------------------------------------------------------------------------------
JOB_NAME=bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_1
JOB_DEPENDENCIES=$skewer_trimming_4_JOB_ID
JOB_DONE=job_output/bwa_mem_sambamba_sort_sam/bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_1.9a7178d257530ab851a00984a2ff877f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_1.9a7178d257530ab851a00984a2ff877f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bwa/0.7.17 mugqic/sambamba/0.8.0 && \
mkdir -p alignment/PRO-00035_OS_T/PRO-00035_OS_T_1 && \
touch alignment/PRO-00035_OS_T/PRO-00035_OS_T_1 && \
bwa mem -t 32 -K 100000000 -Y \
   \
  -R '@RG\tID:PRO-00035_OS_T_1\tSM:PRO-00035_OS_T\tLB:PRO-00035_OS_T\tPU:PRO-00035_OS_T.4.1\tCN:McGill University and Genome Quebec Innovation Centre\tPL:Illumina' \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/bwa_index/Homo_sapiens.GRCh37.fa \
  trim/PRO-00035_OS_T/PRO-00035_OS_T_1.trim.pair1.fastq.gz \
  trim/PRO-00035_OS_T/PRO-00035_OS_T_1.trim.pair2.fastq.gz | \
sambamba view -S -f bam \
  /dev/stdin \
    | \
sambamba sort -m 10G \
  /dev/stdin \
  --tmpdir ${SLURM_TMPDIR} \
  --out alignment/PRO-00035_OS_T/PRO-00035_OS_T_1/PRO-00035_OS_T_1.sorted.bam && \
sambamba index  \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T_1/PRO-00035_OS_T_1.sorted.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T_1/PRO-00035_OS_T_1.sorted.bam.bai
bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_1.9a7178d257530ab851a00984a2ff877f.mugqic.done
chmod 755 $COMMAND
bwa_mem_sambamba_sort_sam_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 60G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$bwa_mem_sambamba_sort_sam_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$bwa_mem_sambamba_sort_sam_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: bwa_mem_sambamba_sort_sam_5_JOB_ID: bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_2
#-------------------------------------------------------------------------------
JOB_NAME=bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_2
JOB_DEPENDENCIES=$skewer_trimming_5_JOB_ID
JOB_DONE=job_output/bwa_mem_sambamba_sort_sam/bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_2.f1a5100be35d41c2bc3bf966b293a4ad.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_2.f1a5100be35d41c2bc3bf966b293a4ad.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bwa/0.7.17 mugqic/sambamba/0.8.0 && \
mkdir -p alignment/PRO-00035_OS_T/PRO-00035_OS_T_2 && \
touch alignment/PRO-00035_OS_T/PRO-00035_OS_T_2 && \
bwa mem -t 32 -K 100000000 -Y \
   \
  -R '@RG\tID:PRO-00035_OS_T_2\tSM:PRO-00035_OS_T\tLB:PRO-00035_OS_T\tPU:PRO-00035_OS_T.4.2\tCN:McGill University and Genome Quebec Innovation Centre\tPL:Illumina' \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/bwa_index/Homo_sapiens.GRCh37.fa \
  trim/PRO-00035_OS_T/PRO-00035_OS_T_2.trim.pair1.fastq.gz \
  trim/PRO-00035_OS_T/PRO-00035_OS_T_2.trim.pair2.fastq.gz | \
sambamba view -S -f bam \
  /dev/stdin \
    | \
sambamba sort -m 10G \
  /dev/stdin \
  --tmpdir ${SLURM_TMPDIR} \
  --out alignment/PRO-00035_OS_T/PRO-00035_OS_T_2/PRO-00035_OS_T_2.sorted.bam && \
sambamba index  \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T_2/PRO-00035_OS_T_2.sorted.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T_2/PRO-00035_OS_T_2.sorted.bam.bai
bwa_mem_sambamba_sort_sam.PRO-00035_OS_T_2.f1a5100be35d41c2bc3bf966b293a4ad.mugqic.done
chmod 755 $COMMAND
bwa_mem_sambamba_sort_sam_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 60G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$bwa_mem_sambamba_sort_sam_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$bwa_mem_sambamba_sort_sam_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sambamba_merge_sam_files
#-------------------------------------------------------------------------------
STEP=sambamba_merge_sam_files
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_sam_files_1_JOB_ID: symlink_readset_sample_bam.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=symlink_readset_sample_bam.PRO-00089_BLOOD
JOB_DEPENDENCIES=$bwa_mem_sambamba_sort_sam_1_JOB_ID
JOB_DONE=job_output/sambamba_merge_sam_files/symlink_readset_sample_bam.PRO-00089_BLOOD.13228592ad9378120165018135debeb9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'symlink_readset_sample_bam.PRO-00089_BLOOD.13228592ad9378120165018135debeb9.mugqic.done' > $COMMAND
mkdir -p alignment/PRO-00089_BLOOD && \
touch alignment/PRO-00089_BLOOD && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1/PRO-00089_BLOOD_1.sorted.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD_1/PRO-00089_BLOOD_1.sorted.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam.bai
symlink_readset_sample_bam.PRO-00089_BLOOD.13228592ad9378120165018135debeb9.mugqic.done
chmod 755 $COMMAND
sambamba_merge_sam_files_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_sam_files_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_sam_files_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_sam_files_2_JOB_ID: symlink_readset_sample_bam.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=symlink_readset_sample_bam.PRO-00089_OS_T
JOB_DEPENDENCIES=$bwa_mem_sambamba_sort_sam_2_JOB_ID
JOB_DONE=job_output/sambamba_merge_sam_files/symlink_readset_sample_bam.PRO-00089_OS_T.3f65b5452e21b9baecf596031183dc5e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'symlink_readset_sample_bam.PRO-00089_OS_T.3f65b5452e21b9baecf596031183dc5e.mugqic.done' > $COMMAND
mkdir -p alignment/PRO-00089_OS_T && \
touch alignment/PRO-00089_OS_T && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T_1/PRO-00089_OS_T_1.sorted.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T_1/PRO-00089_OS_T_1.sorted.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam.bai
symlink_readset_sample_bam.PRO-00089_OS_T.3f65b5452e21b9baecf596031183dc5e.mugqic.done
chmod 755 $COMMAND
sambamba_merge_sam_files_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_sam_files_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_sam_files_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_sam_files_3_JOB_ID: symlink_readset_sample_bam.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=symlink_readset_sample_bam.PRO-00035_BLOOD
JOB_DEPENDENCIES=$bwa_mem_sambamba_sort_sam_3_JOB_ID
JOB_DONE=job_output/sambamba_merge_sam_files/symlink_readset_sample_bam.PRO-00035_BLOOD.a76e3001061b233a766f1681b4fe277a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'symlink_readset_sample_bam.PRO-00035_BLOOD.a76e3001061b233a766f1681b4fe277a.mugqic.done' > $COMMAND
mkdir -p alignment/PRO-00035_BLOOD && \
touch alignment/PRO-00035_BLOOD && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1/PRO-00035_BLOOD_1.sorted.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD_1/PRO-00035_BLOOD_1.sorted.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam.bai
symlink_readset_sample_bam.PRO-00035_BLOOD.a76e3001061b233a766f1681b4fe277a.mugqic.done
chmod 755 $COMMAND
sambamba_merge_sam_files_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_sam_files_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_sam_files_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_sam_files_4_JOB_ID: sambamba_merge_sam_files.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_merge_sam_files.PRO-00035_OS_T
JOB_DEPENDENCIES=$bwa_mem_sambamba_sort_sam_4_JOB_ID:$bwa_mem_sambamba_sort_sam_5_JOB_ID
JOB_DONE=job_output/sambamba_merge_sam_files/sambamba_merge_sam_files.PRO-00035_OS_T.bf98095a541d0e7ca39a81ee6c5731ad.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_merge_sam_files.PRO-00035_OS_T.bf98095a541d0e7ca39a81ee6c5731ad.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
mkdir -p alignment/PRO-00035_OS_T && \
touch alignment/PRO-00035_OS_T && \
sambamba merge -t 16 \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
   \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T_1/PRO-00035_OS_T_1.sorted.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T_2/PRO-00035_OS_T_2.sorted.bam
sambamba_merge_sam_files.PRO-00035_OS_T.bf98095a541d0e7ca39a81ee6c5731ad.mugqic.done
chmod 755 $COMMAND
sambamba_merge_sam_files_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_sam_files_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_sam_files_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: gatk_indel_realigner
#-------------------------------------------------------------------------------
STEP=gatk_indel_realigner
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_1_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.0
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.0
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.0.4cfb773eecfdeeb54e94a648ab4a8db1.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.0.4cfb773eecfdeeb54e94a648ab4a8db1.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/0.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 1 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.0.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/0.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 1 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.0.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.0.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.0.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.0.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.0.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.0.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.0.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.0.bai
gatk_indel_realigner.PRO-00089_OS_T.0.4cfb773eecfdeeb54e94a648ab4a8db1.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_2_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.1
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.1.e27becde964cb47007b235e86cc77552.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.1.e27becde964cb47007b235e86cc77552.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/1.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.1.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/1.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 2 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.1.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.1.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.1.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.1.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.1.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.1.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.1.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.1.bai
gatk_indel_realigner.PRO-00089_OS_T.1.e27becde964cb47007b235e86cc77552.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_3_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.2
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.2.91d16c4038241253ef897c2abe6c89bf.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.2.91d16c4038241253ef897c2abe6c89bf.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/2.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 3 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.2.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/2.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 3 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.2.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.2.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.2.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.2.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.2.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.2.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.2.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.2.bai
gatk_indel_realigner.PRO-00089_OS_T.2.91d16c4038241253ef897c2abe6c89bf.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_4_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.3
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.3.f0f387669bade165a6e3bd0b2f2ccd00.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.3.f0f387669bade165a6e3bd0b2f2ccd00.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/3.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 4 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.3.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/3.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 4 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.3.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.3.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.3.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.3.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.3.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.3.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.3.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.3.bai
gatk_indel_realigner.PRO-00089_OS_T.3.f0f387669bade165a6e3bd0b2f2ccd00.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_5_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.4
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.4.7656dfbcd208cb5ae748c6cb5320424e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.4.7656dfbcd208cb5ae748c6cb5320424e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/4.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 5 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.4.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/4.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 5 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.4.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.4.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.4.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.4.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.4.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.4.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.4.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.4.bai
gatk_indel_realigner.PRO-00089_OS_T.4.7656dfbcd208cb5ae748c6cb5320424e.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_6_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.5
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.5.ba1b2260c9aeb6e125a06de0d051bf51.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.5.ba1b2260c9aeb6e125a06de0d051bf51.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/5.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 6 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.5.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/5.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 6 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.5.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.5.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.5.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.5.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.5.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.5.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.5.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.5.bai
gatk_indel_realigner.PRO-00089_OS_T.5.ba1b2260c9aeb6e125a06de0d051bf51.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_7_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.6
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.6.c02b735083e0de822a7ca46e55124949.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.6.c02b735083e0de822a7ca46e55124949.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/6.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 7 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.6.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/6.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 7 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.6.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.6.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.6.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.6.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.6.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.6.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.6.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.6.bai
gatk_indel_realigner.PRO-00089_OS_T.6.c02b735083e0de822a7ca46e55124949.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_8_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.7
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.7.8c41576587561ba3ec091162d4199392.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.7.8c41576587561ba3ec091162d4199392.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/7.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 8 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.7.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/7.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 8 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.7.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.7.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.7.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.7.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.7.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.7.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.7.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.7.bai
gatk_indel_realigner.PRO-00089_OS_T.7.8c41576587561ba3ec091162d4199392.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_9_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.8
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.8.ddd99e2a3a8773e660d91a3dece98b94.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.8.ddd99e2a3a8773e660d91a3dece98b94.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/8.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 9 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.8.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/8.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 9 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.8.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.8.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.8.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.8.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.8.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.8.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.8.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.8.bai
gatk_indel_realigner.PRO-00089_OS_T.8.ddd99e2a3a8773e660d91a3dece98b94.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_10_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.9
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.9.1847e1f9c415ab5e8c5ce2b5ddd55f2e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.9.1847e1f9c415ab5e8c5ce2b5ddd55f2e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/9.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 10 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.9.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/9.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 10 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.9.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.9.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.9.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.9.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.9.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.9.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.9.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.9.bai
gatk_indel_realigner.PRO-00089_OS_T.9.1847e1f9c415ab5e8c5ce2b5ddd55f2e.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_11_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.10
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.10.ecdc62dcb3654ab76b2aa6a4d4cf5c4a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.10.ecdc62dcb3654ab76b2aa6a4d4cf5c4a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/10.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 11 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.10.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/10.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 11 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.10.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.10.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.10.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.10.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.10.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.10.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.10.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.10.bai
gatk_indel_realigner.PRO-00089_OS_T.10.ecdc62dcb3654ab76b2aa6a4d4cf5c4a.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_12_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.11
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.11.4f46dd9859ca1b80b2a0b0e7b0bd2d91.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.11.4f46dd9859ca1b80b2a0b0e7b0bd2d91.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/11.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 12 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.11.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/11.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 12 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.11.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.11.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.11.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.11.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.11.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.11.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.11.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.11.bai
gatk_indel_realigner.PRO-00089_OS_T.11.4f46dd9859ca1b80b2a0b0e7b0bd2d91.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_13_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.12
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.12.c8d8f7e6cf8e1cf6f269f4cf7643c35b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.12.c8d8f7e6cf8e1cf6f269f4cf7643c35b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/12.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 13 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.12.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/12.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 13 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.12.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.12.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.12.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.12.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.12.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.12.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.12.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.12.bai
gatk_indel_realigner.PRO-00089_OS_T.12.c8d8f7e6cf8e1cf6f269f4cf7643c35b.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_14_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.13
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.13.8a68ef9c0ddd262b577c97d7dd292313.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.13.8a68ef9c0ddd262b577c97d7dd292313.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/13.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 14 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.13.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/13.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 14 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.13.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.13.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.13.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.13.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.13.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.13.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.13.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.13.bai
gatk_indel_realigner.PRO-00089_OS_T.13.8a68ef9c0ddd262b577c97d7dd292313.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_15_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.14
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.14.9304db18c17f7d1bce60e60868743bb2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.14.9304db18c17f7d1bce60e60868743bb2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/14.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 15 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.14.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/14.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 15 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.14.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.14.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.14.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.14.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.14.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.14.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.14.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.14.bai
gatk_indel_realigner.PRO-00089_OS_T.14.9304db18c17f7d1bce60e60868743bb2.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_16_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.15
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.15.4dbb7a24d30950f5a5a08d96ac2253de.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.15.4dbb7a24d30950f5a5a08d96ac2253de.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/15.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 16 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.15.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/15.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 16 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.15.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.15.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.15.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.15.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.15.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.15.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.15.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.15.bai
gatk_indel_realigner.PRO-00089_OS_T.15.4dbb7a24d30950f5a5a08d96ac2253de.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_17_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.16
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.16.b6d006a4029ae9ee34ad1ec9e9c5a7f6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.16.b6d006a4029ae9ee34ad1ec9e9c5a7f6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/16.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 17 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.16.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/16.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 17 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.16.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.16.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.16.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.16.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.16.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.16.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.16.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.16.bai
gatk_indel_realigner.PRO-00089_OS_T.16.b6d006a4029ae9ee34ad1ec9e9c5a7f6.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_18_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.17
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.17.c1355d0dab1d6e2936620638c37e62b7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.17.c1355d0dab1d6e2936620638c37e62b7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/17.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 18 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.17.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/17.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 18 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.17.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.17.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.17.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.17.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.17.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.17.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.17.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.17.bai
gatk_indel_realigner.PRO-00089_OS_T.17.c1355d0dab1d6e2936620638c37e62b7.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_19_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.18
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.18.fae21cdc84771e8e7b003a95f2f70f04.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.18.fae21cdc84771e8e7b003a95f2f70f04.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/18.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 19 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.18.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/18.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 19 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.18.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.18.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.18.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.18.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.18.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.18.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.18.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.18.bai
gatk_indel_realigner.PRO-00089_OS_T.18.fae21cdc84771e8e7b003a95f2f70f04.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_20_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.19
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.19.7bde15e971df925f9f6c0d55c1fd750a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.19.7bde15e971df925f9f6c0d55c1fd750a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/19.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 20 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.19.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/19.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 20 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.19.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.19.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.19.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.19.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.19.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.19.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.19.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.19.bai
gatk_indel_realigner.PRO-00089_OS_T.19.7bde15e971df925f9f6c0d55c1fd750a.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_21_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.20
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.20.6be1ed9bdd3ad2e07d0c222dff7f4a5b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.20.6be1ed9bdd3ad2e07d0c222dff7f4a5b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/20.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 21 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.20.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/20.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 21 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.20.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.20.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.20.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.20.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.20.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.20.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.20.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.20.bai
gatk_indel_realigner.PRO-00089_OS_T.20.6be1ed9bdd3ad2e07d0c222dff7f4a5b.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_22_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.21
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.21.6d10eea05aa179c7693918c04ea84cc0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.21.6d10eea05aa179c7693918c04ea84cc0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/21.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 22 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.21.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/21.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 22 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.21.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.21.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.21.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.21.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.21.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.21.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.21.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.21.bai
gatk_indel_realigner.PRO-00089_OS_T.21.6d10eea05aa179c7693918c04ea84cc0.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_23_JOB_ID: gatk_indel_realigner.PRO-00089_OS_T.others
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00089_OS_T.others
JOB_DEPENDENCIES=$sambamba_merge_sam_files_1_JOB_ID:$sambamba_merge_sam_files_2_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00089_OS_T.others.a24e81d5517b144057961611003a25e3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00089_OS_T.others.a24e81d5517b144057961611003a25e3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00089_OS_T && \
touch alignment/realign/PRO-00089_OS_T && \
mkdir -p alignment/PRO-00089_BLOOD/realign && \
touch alignment/PRO-00089_BLOOD/realign && \
mkdir -p alignment/PRO-00089_OS_T/realign && \
touch alignment/PRO-00089_OS_T/realign && \
cd alignment/realign/PRO-00089_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/others.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals 20 \
  --excludeIntervals 21 \
  --excludeIntervals 22 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.others.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/others.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals 20 \
  --excludeIntervals 21 \
  --excludeIntervals 22 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.others.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.others.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_BLOOD.sorted.realigned.others.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.others.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.others.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.others.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.others.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.others.bai
gatk_indel_realigner.PRO-00089_OS_T.others.a24e81d5517b144057961611003a25e3.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_24_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.0
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.0
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.0.cbf639dbd806ce460045f94bd1c0f004.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.0.cbf639dbd806ce460045f94bd1c0f004.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/0.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 1 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.0.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/0.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 1 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.0.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.0.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.0.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.0.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.0.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.0.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.0.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.0.bai
gatk_indel_realigner.PRO-00035_OS_T.0.cbf639dbd806ce460045f94bd1c0f004.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_25_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.1
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.1.3bfcfb63c15870e86631a4ea13fe0460.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.1.3bfcfb63c15870e86631a4ea13fe0460.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/1.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.1.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/1.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 2 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.1.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.1.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.1.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.1.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.1.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.1.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.1.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.1.bai
gatk_indel_realigner.PRO-00035_OS_T.1.3bfcfb63c15870e86631a4ea13fe0460.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_26_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.2
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.2.4ca49e939d8d5840e14e3827bda5bb40.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.2.4ca49e939d8d5840e14e3827bda5bb40.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/2.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 3 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.2.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/2.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 3 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.2.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.2.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.2.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.2.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.2.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.2.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.2.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.2.bai
gatk_indel_realigner.PRO-00035_OS_T.2.4ca49e939d8d5840e14e3827bda5bb40.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_27_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.3
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.3.2b7ad37131536dc013ad092663eb8497.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.3.2b7ad37131536dc013ad092663eb8497.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/3.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 4 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.3.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/3.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 4 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.3.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.3.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.3.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.3.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.3.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.3.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.3.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.3.bai
gatk_indel_realigner.PRO-00035_OS_T.3.2b7ad37131536dc013ad092663eb8497.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_28_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.4
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.4.f3abba6c523e62aff70bb8bee82eb998.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.4.f3abba6c523e62aff70bb8bee82eb998.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/4.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 5 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.4.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/4.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 5 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.4.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.4.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.4.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.4.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.4.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.4.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.4.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.4.bai
gatk_indel_realigner.PRO-00035_OS_T.4.f3abba6c523e62aff70bb8bee82eb998.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_29_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.5
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.5.329df1e5f553392b9c429b1ced06ea6d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.5.329df1e5f553392b9c429b1ced06ea6d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/5.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 6 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.5.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/5.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 6 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.5.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.5.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.5.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.5.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.5.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.5.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.5.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.5.bai
gatk_indel_realigner.PRO-00035_OS_T.5.329df1e5f553392b9c429b1ced06ea6d.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_30_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.6
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.6.91c5d8641f351947a46c2603c4c5915d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.6.91c5d8641f351947a46c2603c4c5915d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/6.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 7 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.6.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/6.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 7 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.6.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.6.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.6.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.6.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.6.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.6.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.6.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.6.bai
gatk_indel_realigner.PRO-00035_OS_T.6.91c5d8641f351947a46c2603c4c5915d.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_31_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.7
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.7.37bec2e2b3a37769e5eede19daccdcb2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.7.37bec2e2b3a37769e5eede19daccdcb2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/7.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 8 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.7.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/7.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 8 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.7.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.7.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.7.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.7.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.7.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.7.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.7.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.7.bai
gatk_indel_realigner.PRO-00035_OS_T.7.37bec2e2b3a37769e5eede19daccdcb2.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_32_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.8
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.8.de4866d58f391d0bfe6a7aee30c84ee2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.8.de4866d58f391d0bfe6a7aee30c84ee2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/8.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 9 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.8.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/8.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 9 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.8.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.8.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.8.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.8.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.8.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.8.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.8.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.8.bai
gatk_indel_realigner.PRO-00035_OS_T.8.de4866d58f391d0bfe6a7aee30c84ee2.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_33_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.9
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.9.1e019a39c68b400d66a8e524a919a556.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.9.1e019a39c68b400d66a8e524a919a556.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/9.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 10 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.9.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/9.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 10 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.9.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.9.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.9.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.9.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.9.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.9.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.9.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.9.bai
gatk_indel_realigner.PRO-00035_OS_T.9.1e019a39c68b400d66a8e524a919a556.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_34_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.10
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.10.384461bcb4dc324d726a4875f0b38f24.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.10.384461bcb4dc324d726a4875f0b38f24.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/10.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 11 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.10.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/10.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 11 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.10.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.10.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.10.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.10.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.10.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.10.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.10.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.10.bai
gatk_indel_realigner.PRO-00035_OS_T.10.384461bcb4dc324d726a4875f0b38f24.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_35_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.11
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.11.63a25b7e3dde453a552354406096d780.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.11.63a25b7e3dde453a552354406096d780.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/11.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 12 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.11.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/11.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 12 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.11.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.11.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.11.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.11.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.11.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.11.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.11.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.11.bai
gatk_indel_realigner.PRO-00035_OS_T.11.63a25b7e3dde453a552354406096d780.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_36_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.12
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.12.06bdabdef0d7970dfd58cabd71b43053.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.12.06bdabdef0d7970dfd58cabd71b43053.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/12.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 13 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.12.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/12.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 13 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.12.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.12.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.12.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.12.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.12.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.12.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.12.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.12.bai
gatk_indel_realigner.PRO-00035_OS_T.12.06bdabdef0d7970dfd58cabd71b43053.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_37_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.13
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.13.84bc02146cfc0bb73d917dbfdd192454.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.13.84bc02146cfc0bb73d917dbfdd192454.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/13.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 14 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.13.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/13.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 14 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.13.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.13.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.13.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.13.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.13.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.13.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.13.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.13.bai
gatk_indel_realigner.PRO-00035_OS_T.13.84bc02146cfc0bb73d917dbfdd192454.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_38_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.14
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.14.940c23d86ff4b03c46453a57a4fd93ca.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.14.940c23d86ff4b03c46453a57a4fd93ca.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/14.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 15 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.14.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/14.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 15 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.14.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.14.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.14.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.14.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.14.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.14.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.14.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.14.bai
gatk_indel_realigner.PRO-00035_OS_T.14.940c23d86ff4b03c46453a57a4fd93ca.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_39_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.15
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.15.062d9467a99a0733d1eb7c8e14a5612d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.15.062d9467a99a0733d1eb7c8e14a5612d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/15.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 16 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.15.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/15.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 16 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.15.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.15.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.15.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.15.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.15.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.15.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.15.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.15.bai
gatk_indel_realigner.PRO-00035_OS_T.15.062d9467a99a0733d1eb7c8e14a5612d.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_40_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.16
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.16.d58e57c1547421bf0e9adaa10cc475a8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.16.d58e57c1547421bf0e9adaa10cc475a8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/16.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 17 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.16.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/16.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 17 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.16.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.16.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.16.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.16.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.16.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.16.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.16.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.16.bai
gatk_indel_realigner.PRO-00035_OS_T.16.d58e57c1547421bf0e9adaa10cc475a8.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_41_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.17
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.17.3cfc30431e7fb66ff5831e2668e66aea.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.17.3cfc30431e7fb66ff5831e2668e66aea.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/17.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 18 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.17.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/17.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 18 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.17.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.17.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.17.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.17.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.17.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.17.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.17.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.17.bai
gatk_indel_realigner.PRO-00035_OS_T.17.3cfc30431e7fb66ff5831e2668e66aea.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_41_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_41_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_41_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_42_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.18
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.18.1c8c325e30e7516a74b907af0576a9b5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.18.1c8c325e30e7516a74b907af0576a9b5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/18.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 19 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.18.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/18.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 19 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.18.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.18.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.18.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.18.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.18.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.18.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.18.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.18.bai
gatk_indel_realigner.PRO-00035_OS_T.18.1c8c325e30e7516a74b907af0576a9b5.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_42_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_42_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_42_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_43_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.19
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.19.15643f13ec95c7ea9b5c890d9ec838d5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.19.15643f13ec95c7ea9b5c890d9ec838d5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/19.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 20 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.19.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/19.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 20 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.19.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.19.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.19.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.19.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.19.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.19.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.19.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.19.bai
gatk_indel_realigner.PRO-00035_OS_T.19.15643f13ec95c7ea9b5c890d9ec838d5.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_43_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_43_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_43_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_44_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.20
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.20.c1f4f1ad9787e1cacb45b171e820b83a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.20.c1f4f1ad9787e1cacb45b171e820b83a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/20.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 21 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.20.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/20.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 21 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.20.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.20.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.20.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.20.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.20.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.20.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.20.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.20.bai
gatk_indel_realigner.PRO-00035_OS_T.20.c1f4f1ad9787e1cacb45b171e820b83a.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_44_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_44_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_44_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_45_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.21
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.21.3f357e53cb4e73c63fedff96a2319a6e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.21.3f357e53cb4e73c63fedff96a2319a6e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/21.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 22 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.21.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/21.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --intervals 22 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.21.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.21.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.21.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.21.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.21.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.21.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.21.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.21.bai
gatk_indel_realigner.PRO-00035_OS_T.21.3f357e53cb4e73c63fedff96a2319a6e.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_45_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_45_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_45_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_indel_realigner_46_JOB_ID: gatk_indel_realigner.PRO-00035_OS_T.others
#-------------------------------------------------------------------------------
JOB_NAME=gatk_indel_realigner.PRO-00035_OS_T.others
JOB_DEPENDENCIES=$sambamba_merge_sam_files_3_JOB_ID:$sambamba_merge_sam_files_4_JOB_ID
JOB_DONE=job_output/gatk_indel_realigner/gatk_indel_realigner.PRO-00035_OS_T.others.b924b3d6c345273268e5969c2da787db.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_indel_realigner.PRO-00035_OS_T.others.b924b3d6c345273268e5969c2da787db.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.8 && \
mkdir -p alignment/realign/PRO-00035_OS_T && \
touch alignment/realign/PRO-00035_OS_T && \
mkdir -p alignment/PRO-00035_BLOOD/realign && \
touch alignment/PRO-00035_BLOOD/realign && \
mkdir -p alignment/PRO-00035_OS_T/realign && \
touch alignment/PRO-00035_OS_T/realign && \
cd alignment/realign/PRO-00035_OS_T && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type RealignerTargetCreator -nt 1 \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --out /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/others.intervals \
  --known /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals 20 \
  --excludeIntervals 21 \
  --excludeIntervals 22 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12G -jar $GATK_JAR \
  --analysis_type IndelRealigner  \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --nWayOut .realigned.others.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.bam \
  --input_file /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.bam \
  --targetIntervals /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/others.intervals \
   \
  --knownAlleles /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals 20 \
  --excludeIntervals 21 \
  --excludeIntervals 22 \
  --maxReadsInMemory 500000 && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.others.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.others.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_BLOOD.sorted.realigned.others.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.others.bai && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.others.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.others.bam && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/realign/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.others.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.others.bai
gatk_indel_realigner.PRO-00035_OS_T.others.b924b3d6c345273268e5969c2da787db.mugqic.done
chmod 755 $COMMAND
gatk_indel_realigner_46_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_indel_realigner_46_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_indel_realigner_46_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sambamba_merge_realigned
#-------------------------------------------------------------------------------
STEP=sambamba_merge_realigned
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_realigned_1_JOB_ID: sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$gatk_indel_realigner_1_JOB_ID:$gatk_indel_realigner_2_JOB_ID:$gatk_indel_realigner_3_JOB_ID:$gatk_indel_realigner_4_JOB_ID:$gatk_indel_realigner_5_JOB_ID:$gatk_indel_realigner_6_JOB_ID:$gatk_indel_realigner_7_JOB_ID:$gatk_indel_realigner_8_JOB_ID:$gatk_indel_realigner_9_JOB_ID:$gatk_indel_realigner_10_JOB_ID:$gatk_indel_realigner_11_JOB_ID:$gatk_indel_realigner_12_JOB_ID:$gatk_indel_realigner_13_JOB_ID:$gatk_indel_realigner_14_JOB_ID:$gatk_indel_realigner_15_JOB_ID:$gatk_indel_realigner_16_JOB_ID:$gatk_indel_realigner_17_JOB_ID:$gatk_indel_realigner_18_JOB_ID:$gatk_indel_realigner_19_JOB_ID:$gatk_indel_realigner_20_JOB_ID:$gatk_indel_realigner_21_JOB_ID:$gatk_indel_realigner_22_JOB_ID:$gatk_indel_realigner_23_JOB_ID
JOB_DONE=job_output/sambamba_merge_realigned/sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_BLOOD.93508d51c233886e1890492504c16ef6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_BLOOD.93508d51c233886e1890492504c16ef6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba merge -t 16 \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.realigned.bam \
   \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.0.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.1.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.2.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.3.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.4.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.5.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.6.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.7.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.8.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.9.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.10.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.11.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.12.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.13.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.14.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.15.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.16.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.17.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.18.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.19.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.20.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.21.bam \
  alignment/PRO-00089_BLOOD/realign/PRO-00089_BLOOD.sorted.realigned.others.bam
sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_BLOOD.93508d51c233886e1890492504c16ef6.mugqic.done
chmod 755 $COMMAND
sambamba_merge_realigned_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 48G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_realigned_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_realigned_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_realigned_2_JOB_ID: sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$gatk_indel_realigner_1_JOB_ID:$gatk_indel_realigner_2_JOB_ID:$gatk_indel_realigner_3_JOB_ID:$gatk_indel_realigner_4_JOB_ID:$gatk_indel_realigner_5_JOB_ID:$gatk_indel_realigner_6_JOB_ID:$gatk_indel_realigner_7_JOB_ID:$gatk_indel_realigner_8_JOB_ID:$gatk_indel_realigner_9_JOB_ID:$gatk_indel_realigner_10_JOB_ID:$gatk_indel_realigner_11_JOB_ID:$gatk_indel_realigner_12_JOB_ID:$gatk_indel_realigner_13_JOB_ID:$gatk_indel_realigner_14_JOB_ID:$gatk_indel_realigner_15_JOB_ID:$gatk_indel_realigner_16_JOB_ID:$gatk_indel_realigner_17_JOB_ID:$gatk_indel_realigner_18_JOB_ID:$gatk_indel_realigner_19_JOB_ID:$gatk_indel_realigner_20_JOB_ID:$gatk_indel_realigner_21_JOB_ID:$gatk_indel_realigner_22_JOB_ID:$gatk_indel_realigner_23_JOB_ID
JOB_DONE=job_output/sambamba_merge_realigned/sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_OS_T.eb28f96cf07a1fc0ba69c9479eaf7d1f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_OS_T.eb28f96cf07a1fc0ba69c9479eaf7d1f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba merge -t 16 \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.bam \
   \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.0.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.1.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.2.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.3.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.4.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.5.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.6.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.7.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.8.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.9.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.10.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.11.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.12.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.13.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.14.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.15.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.16.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.17.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.18.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.19.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.20.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.21.bam \
  alignment/PRO-00089_OS_T/realign/PRO-00089_OS_T.sorted.realigned.others.bam
sambamba_merge_realigned.PRO-00089_OS_T.PRO-00089_OS_T.eb28f96cf07a1fc0ba69c9479eaf7d1f.mugqic.done
chmod 755 $COMMAND
sambamba_merge_realigned_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 48G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_realigned_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_realigned_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_realigned_3_JOB_ID: sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$gatk_indel_realigner_24_JOB_ID:$gatk_indel_realigner_25_JOB_ID:$gatk_indel_realigner_26_JOB_ID:$gatk_indel_realigner_27_JOB_ID:$gatk_indel_realigner_28_JOB_ID:$gatk_indel_realigner_29_JOB_ID:$gatk_indel_realigner_30_JOB_ID:$gatk_indel_realigner_31_JOB_ID:$gatk_indel_realigner_32_JOB_ID:$gatk_indel_realigner_33_JOB_ID:$gatk_indel_realigner_34_JOB_ID:$gatk_indel_realigner_35_JOB_ID:$gatk_indel_realigner_36_JOB_ID:$gatk_indel_realigner_37_JOB_ID:$gatk_indel_realigner_38_JOB_ID:$gatk_indel_realigner_39_JOB_ID:$gatk_indel_realigner_40_JOB_ID:$gatk_indel_realigner_41_JOB_ID:$gatk_indel_realigner_42_JOB_ID:$gatk_indel_realigner_43_JOB_ID:$gatk_indel_realigner_44_JOB_ID:$gatk_indel_realigner_45_JOB_ID:$gatk_indel_realigner_46_JOB_ID
JOB_DONE=job_output/sambamba_merge_realigned/sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_BLOOD.3874d0daf28df02659df800a959db372.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_BLOOD.3874d0daf28df02659df800a959db372.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba merge -t 16 \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.realigned.bam \
   \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.0.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.1.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.2.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.3.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.4.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.5.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.6.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.7.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.8.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.9.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.10.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.11.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.12.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.13.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.14.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.15.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.16.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.17.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.18.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.19.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.20.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.21.bam \
  alignment/PRO-00035_BLOOD/realign/PRO-00035_BLOOD.sorted.realigned.others.bam
sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_BLOOD.3874d0daf28df02659df800a959db372.mugqic.done
chmod 755 $COMMAND
sambamba_merge_realigned_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 48G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_realigned_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_realigned_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_merge_realigned_4_JOB_ID: sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$gatk_indel_realigner_24_JOB_ID:$gatk_indel_realigner_25_JOB_ID:$gatk_indel_realigner_26_JOB_ID:$gatk_indel_realigner_27_JOB_ID:$gatk_indel_realigner_28_JOB_ID:$gatk_indel_realigner_29_JOB_ID:$gatk_indel_realigner_30_JOB_ID:$gatk_indel_realigner_31_JOB_ID:$gatk_indel_realigner_32_JOB_ID:$gatk_indel_realigner_33_JOB_ID:$gatk_indel_realigner_34_JOB_ID:$gatk_indel_realigner_35_JOB_ID:$gatk_indel_realigner_36_JOB_ID:$gatk_indel_realigner_37_JOB_ID:$gatk_indel_realigner_38_JOB_ID:$gatk_indel_realigner_39_JOB_ID:$gatk_indel_realigner_40_JOB_ID:$gatk_indel_realigner_41_JOB_ID:$gatk_indel_realigner_42_JOB_ID:$gatk_indel_realigner_43_JOB_ID:$gatk_indel_realigner_44_JOB_ID:$gatk_indel_realigner_45_JOB_ID:$gatk_indel_realigner_46_JOB_ID
JOB_DONE=job_output/sambamba_merge_realigned/sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_OS_T.522e48c11db0cdb94f0e594f37d68487.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_OS_T.522e48c11db0cdb94f0e594f37d68487.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba merge -t 16 \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.bam \
   \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.0.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.1.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.2.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.3.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.4.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.5.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.6.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.7.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.8.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.9.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.10.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.11.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.12.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.13.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.14.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.15.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.16.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.17.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.18.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.19.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.20.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.21.bam \
  alignment/PRO-00035_OS_T/realign/PRO-00035_OS_T.sorted.realigned.others.bam
sambamba_merge_realigned.PRO-00035_OS_T.PRO-00035_OS_T.522e48c11db0cdb94f0e594f37d68487.mugqic.done
chmod 755 $COMMAND
sambamba_merge_realigned_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 48G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_merge_realigned_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_merge_realigned_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sambamba_mark_duplicates
#-------------------------------------------------------------------------------
STEP=sambamba_mark_duplicates
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sambamba_mark_duplicates_1_JOB_ID: sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$sambamba_merge_realigned_1_JOB_ID
JOB_DONE=job_output/sambamba_mark_duplicates/sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_BLOOD.06ac0546fe7c1e6f292fb6315d75a152.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_BLOOD.06ac0546fe7c1e6f292fb6315d75a152.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba markdup -t 16 \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.realigned.bam \
  --tmpdir tmp_dir \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.bam
sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_BLOOD.06ac0546fe7c1e6f292fb6315d75a152.mugqic.done
chmod 755 $COMMAND
sambamba_mark_duplicates_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_mark_duplicates_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_mark_duplicates_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_mark_duplicates_2_JOB_ID: sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$sambamba_merge_realigned_2_JOB_ID
JOB_DONE=job_output/sambamba_mark_duplicates/sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_OS_T.08243d1245f8c10259bdd94bddd9496f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_OS_T.08243d1245f8c10259bdd94bddd9496f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba markdup -t 16 \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.realigned.bam \
  --tmpdir tmp_dir \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.bam
sambamba_mark_duplicates.PRO-00089_OS_T.PRO-00089_OS_T.08243d1245f8c10259bdd94bddd9496f.mugqic.done
chmod 755 $COMMAND
sambamba_mark_duplicates_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_mark_duplicates_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_mark_duplicates_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_mark_duplicates_3_JOB_ID: sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$sambamba_merge_realigned_3_JOB_ID
JOB_DONE=job_output/sambamba_mark_duplicates/sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_BLOOD.65c8defd0d13f2717295fde76e0a199b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_BLOOD.65c8defd0d13f2717295fde76e0a199b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba markdup -t 16 \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.realigned.bam \
  --tmpdir tmp_dir \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.bam
sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_BLOOD.65c8defd0d13f2717295fde76e0a199b.mugqic.done
chmod 755 $COMMAND
sambamba_mark_duplicates_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_mark_duplicates_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_mark_duplicates_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sambamba_mark_duplicates_4_JOB_ID: sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$sambamba_merge_realigned_4_JOB_ID
JOB_DONE=job_output/sambamba_mark_duplicates/sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_OS_T.de2d0cf761ec572fcab22196b6098709.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_OS_T.de2d0cf761ec572fcab22196b6098709.mugqic.done' > $COMMAND
module purge && \
module load mugqic/sambamba/0.8.0 && \
sambamba markdup -t 16 \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.realigned.bam \
  --tmpdir tmp_dir \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.bam
sambamba_mark_duplicates.PRO-00035_OS_T.PRO-00035_OS_T.de2d0cf761ec572fcab22196b6098709.mugqic.done
chmod 755 $COMMAND
sambamba_mark_duplicates_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sambamba_mark_duplicates_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sambamba_mark_duplicates_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: recalibration
#-------------------------------------------------------------------------------
STEP=recalibration
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: recalibration_1_JOB_ID: gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_1_JOB_ID
JOB_DONE=job_output/recalibration/gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_BLOOD.41c8ad52209b1f131f596dc97f71a01b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_BLOOD.41c8ad52209b1f131f596dc97f71a01b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx55G" \
  BaseRecalibratorSpark --bqsr-baq-gap-open-penalty 30 \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.bam \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa  \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gnomad.exomes.r2.0.1.sites.no-VEP.nohist.tidy.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --spark-master local[32] \
  --output alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recalibration_report.grp
gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_BLOOD.41c8ad52209b1f131f596dc97f71a01b.mugqic.done
chmod 755 $COMMAND
recalibration_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_2_JOB_ID: gatk_print_reads.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=gatk_print_reads.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_1_JOB_ID:$recalibration_1_JOB_ID
JOB_DONE=job_output/recalibration/gatk_print_reads.PRO-00089_OS_T.PRO-00089_BLOOD.e9059b22f798e631f21b3d86b22cec33.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_print_reads.PRO-00089_OS_T.PRO-00089_BLOOD.e9059b22f798e631f21b3d86b22cec33.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
rm -rf alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam* && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  ApplyBQSRSpark  --create-output-bam-index true \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.bam \
  --bqsr-recal-file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recalibration_report.grp \
  --spark-master local[6] \
  --output alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam
gatk_print_reads.PRO-00089_OS_T.PRO-00089_BLOOD.e9059b22f798e631f21b3d86b22cec33.mugqic.done
chmod 755 $COMMAND
recalibration_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=96:00:00 --mem 36G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_3_JOB_ID: gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_2_JOB_ID
JOB_DONE=job_output/recalibration/gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_OS_T.17b20db35470ef5f9146297471b6aa13.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_OS_T.17b20db35470ef5f9146297471b6aa13.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx55G" \
  BaseRecalibratorSpark --bqsr-baq-gap-open-penalty 30 \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.bam \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa  \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gnomad.exomes.r2.0.1.sites.no-VEP.nohist.tidy.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --spark-master local[32] \
  --output alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recalibration_report.grp
gatk_base_recalibrator.PRO-00089_OS_T.PRO-00089_OS_T.17b20db35470ef5f9146297471b6aa13.mugqic.done
chmod 755 $COMMAND
recalibration_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_4_JOB_ID: gatk_print_reads.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_print_reads.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_2_JOB_ID:$recalibration_3_JOB_ID
JOB_DONE=job_output/recalibration/gatk_print_reads.PRO-00089_OS_T.PRO-00089_OS_T.92a3c263038ca79d3a0269db4d60e463.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_print_reads.PRO-00089_OS_T.PRO-00089_OS_T.92a3c263038ca79d3a0269db4d60e463.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
rm -rf alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam* && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  ApplyBQSRSpark  --create-output-bam-index true \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.bam \
  --bqsr-recal-file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recalibration_report.grp \
  --spark-master local[6] \
  --output alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam
gatk_print_reads.PRO-00089_OS_T.PRO-00089_OS_T.92a3c263038ca79d3a0269db4d60e463.mugqic.done
chmod 755 $COMMAND
recalibration_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=96:00:00 --mem 36G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_5_JOB_ID: gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_3_JOB_ID
JOB_DONE=job_output/recalibration/gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_BLOOD.1f3338e65fa657cda7ea391318509c08.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_BLOOD.1f3338e65fa657cda7ea391318509c08.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx55G" \
  BaseRecalibratorSpark --bqsr-baq-gap-open-penalty 30 \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.bam \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa  \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gnomad.exomes.r2.0.1.sites.no-VEP.nohist.tidy.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --spark-master local[32] \
  --output alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recalibration_report.grp
gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_BLOOD.1f3338e65fa657cda7ea391318509c08.mugqic.done
chmod 755 $COMMAND
recalibration_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_6_JOB_ID: gatk_print_reads.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=gatk_print_reads.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_3_JOB_ID:$recalibration_5_JOB_ID
JOB_DONE=job_output/recalibration/gatk_print_reads.PRO-00035_OS_T.PRO-00035_BLOOD.d1e1962e6e64416bb91b9805fea593b1.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_print_reads.PRO-00035_OS_T.PRO-00035_BLOOD.d1e1962e6e64416bb91b9805fea593b1.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
rm -rf alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam* && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  ApplyBQSRSpark  --create-output-bam-index true \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.bam \
  --bqsr-recal-file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recalibration_report.grp \
  --spark-master local[6] \
  --output alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam
gatk_print_reads.PRO-00035_OS_T.PRO-00035_BLOOD.d1e1962e6e64416bb91b9805fea593b1.mugqic.done
chmod 755 $COMMAND
recalibration_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=96:00:00 --mem 36G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_7_JOB_ID: gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_4_JOB_ID
JOB_DONE=job_output/recalibration/gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_OS_T.50eb038dbf511f6ef356cfa54eb29381.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_OS_T.50eb038dbf511f6ef356cfa54eb29381.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx55G" \
  BaseRecalibratorSpark --bqsr-baq-gap-open-penalty 30 \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.bam \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa  \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gnomad.exomes.r2.0.1.sites.no-VEP.nohist.tidy.vcf.gz \
  --known-sites /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Mills_and_1000G_gold_standard.indels.vcf.gz \
  --spark-master local[32] \
  --output alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recalibration_report.grp
gatk_base_recalibrator.PRO-00035_OS_T.PRO-00035_OS_T.50eb038dbf511f6ef356cfa54eb29381.mugqic.done
chmod 755 $COMMAND
recalibration_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: recalibration_8_JOB_ID: gatk_print_reads.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_print_reads.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_4_JOB_ID:$recalibration_7_JOB_ID
JOB_DONE=job_output/recalibration/gatk_print_reads.PRO-00035_OS_T.PRO-00035_OS_T.4f518d93174d5b1963f54ac5e3ac48e9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_print_reads.PRO-00035_OS_T.PRO-00035_OS_T.4f518d93174d5b1963f54ac5e3ac48e9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
rm -rf alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam* && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  ApplyBQSRSpark  --create-output-bam-index true \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.bam \
  --bqsr-recal-file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recalibration_report.grp \
  --spark-master local[6] \
  --output alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam
gatk_print_reads.PRO-00035_OS_T.PRO-00035_OS_T.4f518d93174d5b1963f54ac5e3ac48e9.mugqic.done
chmod 755 $COMMAND
recalibration_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=96:00:00 --mem 36G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$recalibration_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$recalibration_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: conpair_concordance_contamination
#-------------------------------------------------------------------------------
STEP=conpair_concordance_contamination
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: conpair_concordance_contamination_1_JOB_ID: conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_1_JOB_ID
JOB_DONE=job_output/conpair_concordance_contamination/conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_BLOOD.3b9c4b57c182679f7b165a195ae32629.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_BLOOD.3b9c4b57c182679f7b165a195ae32629.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/python/3.9.1 mugqic/GenomeAnalysisTK/3.8 mugqic/Conpair/0.2 && \
python3 $CONPAIR_SCRIPTS/run_gatk_pileup_for_sample.py -t ${SLURM_TMPDIR} \
  -m 6G \
  -G $GATK_JAR \
  -D $CONPAIR_DIR \
  -R /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -M ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.bed \
  -B alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.bam \
  -O alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.gatkPileup 
conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_BLOOD.3b9c4b57c182679f7b165a195ae32629.mugqic.done
chmod 755 $COMMAND
conpair_concordance_contamination_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 6G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$conpair_concordance_contamination_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$conpair_concordance_contamination_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: conpair_concordance_contamination_2_JOB_ID: conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_2_JOB_ID
JOB_DONE=job_output/conpair_concordance_contamination/conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_OS_T.0dd7b4c9746b5e94177ab8f5df0125f8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_OS_T.0dd7b4c9746b5e94177ab8f5df0125f8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/python/3.9.1 mugqic/GenomeAnalysisTK/3.8 mugqic/Conpair/0.2 && \
python3 $CONPAIR_SCRIPTS/run_gatk_pileup_for_sample.py -t ${SLURM_TMPDIR} \
  -m 6G \
  -G $GATK_JAR \
  -D $CONPAIR_DIR \
  -R /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -M ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.bed \
  -B alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.bam \
  -O alignment/PRO-00089_OS_T/PRO-00089_OS_T.gatkPileup 
conpair_concordance_contamination.pileup.PRO-00089_OS_T.PRO-00089_OS_T.0dd7b4c9746b5e94177ab8f5df0125f8.mugqic.done
chmod 755 $COMMAND
conpair_concordance_contamination_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 6G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$conpair_concordance_contamination_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$conpair_concordance_contamination_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: conpair_concordance_contamination_3_JOB_ID: conpair_concordance_contamination.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=conpair_concordance_contamination.PRO-00089_OS_T
JOB_DEPENDENCIES=$conpair_concordance_contamination_1_JOB_ID:$conpair_concordance_contamination_2_JOB_ID
JOB_DONE=job_output/conpair_concordance_contamination/conpair_concordance_contamination.PRO-00089_OS_T.f33157356fadc1203e3c1be0ddf73e6e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'conpair_concordance_contamination.PRO-00089_OS_T.f33157356fadc1203e3c1be0ddf73e6e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/3.9.1 mugqic/Conpair/0.2 && \
mkdir -p metrics && \
touch metrics && \
python3 $CONPAIR_SCRIPTS/verify_concordance.py --normal_homozygous_markers_only \
  --markers ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.txt \
  --normal_pileup alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.gatkPileup \
  --tumor_pileup alignment/PRO-00089_OS_T/PRO-00089_OS_T.gatkPileup \
  --outfile metrics/PRO-00089_OS_T.concordance.tsv && \
python3 $CONPAIR_SCRIPTS/estimate_tumor_normal_contamination.py  \
  --markers ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.txt \
  --normal_pileup alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.gatkPileup \
  --tumor_pileup alignment/PRO-00089_OS_T/PRO-00089_OS_T.gatkPileup \
  --outfile metrics/PRO-00089_OS_T.contamination.tsv
conpair_concordance_contamination.PRO-00089_OS_T.f33157356fadc1203e3c1be0ddf73e6e.mugqic.done
chmod 755 $COMMAND
conpair_concordance_contamination_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 6G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$conpair_concordance_contamination_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$conpair_concordance_contamination_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: conpair_concordance_contamination_4_JOB_ID: conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_3_JOB_ID
JOB_DONE=job_output/conpair_concordance_contamination/conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_BLOOD.e7492bb94afd443ca637e3c8d1f545aa.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_BLOOD.e7492bb94afd443ca637e3c8d1f545aa.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/python/3.9.1 mugqic/GenomeAnalysisTK/3.8 mugqic/Conpair/0.2 && \
python3 $CONPAIR_SCRIPTS/run_gatk_pileup_for_sample.py -t ${SLURM_TMPDIR} \
  -m 6G \
  -G $GATK_JAR \
  -D $CONPAIR_DIR \
  -R /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -M ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.bed \
  -B alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.bam \
  -O alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.gatkPileup 
conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_BLOOD.e7492bb94afd443ca637e3c8d1f545aa.mugqic.done
chmod 755 $COMMAND
conpair_concordance_contamination_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 6G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$conpair_concordance_contamination_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$conpair_concordance_contamination_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: conpair_concordance_contamination_5_JOB_ID: conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_4_JOB_ID
JOB_DONE=job_output/conpair_concordance_contamination/conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_OS_T.8dc18cc40eb412c381112d4fd35e891f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_OS_T.8dc18cc40eb412c381112d4fd35e891f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/python/3.9.1 mugqic/GenomeAnalysisTK/3.8 mugqic/Conpair/0.2 && \
python3 $CONPAIR_SCRIPTS/run_gatk_pileup_for_sample.py -t ${SLURM_TMPDIR} \
  -m 6G \
  -G $GATK_JAR \
  -D $CONPAIR_DIR \
  -R /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -M ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.bed \
  -B alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.bam \
  -O alignment/PRO-00035_OS_T/PRO-00035_OS_T.gatkPileup 
conpair_concordance_contamination.pileup.PRO-00035_OS_T.PRO-00035_OS_T.8dc18cc40eb412c381112d4fd35e891f.mugqic.done
chmod 755 $COMMAND
conpair_concordance_contamination_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 6G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$conpair_concordance_contamination_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$conpair_concordance_contamination_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: conpair_concordance_contamination_6_JOB_ID: conpair_concordance_contamination.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=conpair_concordance_contamination.PRO-00035_OS_T
JOB_DEPENDENCIES=$conpair_concordance_contamination_4_JOB_ID:$conpair_concordance_contamination_5_JOB_ID
JOB_DONE=job_output/conpair_concordance_contamination/conpair_concordance_contamination.PRO-00035_OS_T.601c881b1ee704858e65dbbc45e8d863.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'conpair_concordance_contamination.PRO-00035_OS_T.601c881b1ee704858e65dbbc45e8d863.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/3.9.1 mugqic/Conpair/0.2 && \
mkdir -p metrics && \
touch metrics && \
python3 $CONPAIR_SCRIPTS/verify_concordance.py --normal_homozygous_markers_only \
  --markers ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.txt \
  --normal_pileup alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.gatkPileup \
  --tumor_pileup alignment/PRO-00035_OS_T/PRO-00035_OS_T.gatkPileup \
  --outfile metrics/PRO-00035_OS_T.concordance.tsv && \
python3 $CONPAIR_SCRIPTS/estimate_tumor_normal_contamination.py  \
  --markers ${CONPAIR_DATA}/markers/GRCh37.autosomes.phase3_shapeit2_mvncall_integrated.20130502.SNV.genotype.sselect_v4_MAF_0.4_LD_0.8.txt \
  --normal_pileup alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.gatkPileup \
  --tumor_pileup alignment/PRO-00035_OS_T/PRO-00035_OS_T.gatkPileup \
  --outfile metrics/PRO-00035_OS_T.contamination.tsv
conpair_concordance_contamination.PRO-00035_OS_T.601c881b1ee704858e65dbbc45e8d863.mugqic.done
chmod 755 $COMMAND
conpair_concordance_contamination_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 6G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$conpair_concordance_contamination_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$conpair_concordance_contamination_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: metrics_dna_picard_metrics
#-------------------------------------------------------------------------------
STEP=metrics_dna_picard_metrics
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_1_JOB_ID: picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.1202de7f964dc5205891b90d4fe1ce06.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.1202de7f964dc5205891b90d4fe1ce06.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00089_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx11G" \
  CollectMultipleMetrics \
  --PROGRAM CollectAlignmentSummaryMetrics \
  --PROGRAM CollectInsertSizeMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --TMP_DIR ${SLURM_TMPDIR} \
  --REFERENCE_SEQUENCE /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --INPUT alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.all.metrics \
  --MAX_RECORDS_IN_RAM 1000000
picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.1202de7f964dc5205891b90d4fe1ce06.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_2_JOB_ID: picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.abeb3c09cf404cd3b87fcd6dbcc3c921.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.abeb3c09cf404cd3b87fcd6dbcc3c921.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00089_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectOxoGMetrics \
  --VALIDATION_STRINGENCY SILENT  \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.oxog_metrics.txt \
  --DB_SNP $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.abeb3c09cf404cd3b87fcd6dbcc3c921.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_3_JOB_ID: picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.9880227835ad9454e41bc33a15910aad.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.9880227835ad9454e41bc33a15910aad.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00089_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectGcBiasMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --ALSO_IGNORE_DUPLICATES TRUE \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.qcbias_metrics.txt \
  --CHART metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.qcbias_metrics.pdf \
  --SUMMARY_OUTPUT metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.qcbias_summary_metrics.txt \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.9880227835ad9454e41bc33a15910aad.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_4_JOB_ID: picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_OS_T.ebf49ce10d215b4d06cc32a4d4f46c21.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_OS_T.ebf49ce10d215b4d06cc32a4d4f46c21.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_OS_T/picard_metrics && \
touch metrics/dna/PRO-00089_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx11G" \
  CollectMultipleMetrics \
  --PROGRAM CollectAlignmentSummaryMetrics \
  --PROGRAM CollectInsertSizeMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --TMP_DIR ${SLURM_TMPDIR} \
  --REFERENCE_SEQUENCE /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --INPUT alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.all.metrics \
  --MAX_RECORDS_IN_RAM 1000000
picard_collect_multiple_metrics.PRO-00089_OS_T.PRO-00089_OS_T.ebf49ce10d215b4d06cc32a4d4f46c21.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_5_JOB_ID: picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_OS_T.8b18f9c70fca3152948bce0fee17ff3c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_OS_T.8b18f9c70fca3152948bce0fee17ff3c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_OS_T/picard_metrics && \
touch metrics/dna/PRO-00089_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectOxoGMetrics \
  --VALIDATION_STRINGENCY SILENT  \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.oxog_metrics.txt \
  --DB_SNP $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_oxog_metrics.PRO-00089_OS_T.PRO-00089_OS_T.8b18f9c70fca3152948bce0fee17ff3c.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_6_JOB_ID: picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_OS_T.e15c1b68cad7133ab17f117ed706a398.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_OS_T.e15c1b68cad7133ab17f117ed706a398.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_OS_T/picard_metrics && \
touch metrics/dna/PRO-00089_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectGcBiasMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --ALSO_IGNORE_DUPLICATES TRUE \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.qcbias_metrics.txt \
  --CHART metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.qcbias_metrics.pdf \
  --SUMMARY_OUTPUT metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.qcbias_summary_metrics.txt \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_gcbias_metrics.PRO-00089_OS_T.PRO-00089_OS_T.e15c1b68cad7133ab17f117ed706a398.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_7_JOB_ID: picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.42760d9a0e1d292122e83081d6fc93cf.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.42760d9a0e1d292122e83081d6fc93cf.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00089_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12000M" \
 CollectSequencingArtifactMetrics \
  --VALIDATION_STRINGENCY SILENT --FILE_EXTENSION ".txt" \
  --INPUT alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_BLOOD.42760d9a0e1d292122e83081d6fc93cf.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_8_JOB_ID: picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_OS_T.1211752d07f92e7be32a37f2871aef93.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_OS_T.1211752d07f92e7be32a37f2871aef93.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00089_OS_T/picard_metrics && \
touch metrics/dna/PRO-00089_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12000M" \
 CollectSequencingArtifactMetrics \
  --VALIDATION_STRINGENCY SILENT --FILE_EXTENSION ".txt" \
  --INPUT alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_sequencing_artifacts_metrics.PRO-00089_OS_T.PRO-00089_OS_T.1211752d07f92e7be32a37f2871aef93.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_9_JOB_ID: picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.8f91ff137300547b03dd71936d1fa889.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.8f91ff137300547b03dd71936d1fa889.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00035_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx11G" \
  CollectMultipleMetrics \
  --PROGRAM CollectAlignmentSummaryMetrics \
  --PROGRAM CollectInsertSizeMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --TMP_DIR ${SLURM_TMPDIR} \
  --REFERENCE_SEQUENCE /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --INPUT alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.all.metrics \
  --MAX_RECORDS_IN_RAM 1000000
picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.8f91ff137300547b03dd71936d1fa889.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_10_JOB_ID: picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.481185344d617d5cb64350370dfa86c9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.481185344d617d5cb64350370dfa86c9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00035_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectOxoGMetrics \
  --VALIDATION_STRINGENCY SILENT  \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.oxog_metrics.txt \
  --DB_SNP $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.481185344d617d5cb64350370dfa86c9.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_11_JOB_ID: picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.ccfc19fd0b488e18192c0972ce4dcbf1.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.ccfc19fd0b488e18192c0972ce4dcbf1.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00035_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectGcBiasMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --ALSO_IGNORE_DUPLICATES TRUE \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.qcbias_metrics.txt \
  --CHART metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.qcbias_metrics.pdf \
  --SUMMARY_OUTPUT metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.qcbias_summary_metrics.txt \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.ccfc19fd0b488e18192c0972ce4dcbf1.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_12_JOB_ID: picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_OS_T.996966dcfee2c600438d2d7094601ee0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_OS_T.996966dcfee2c600438d2d7094601ee0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_OS_T/picard_metrics && \
touch metrics/dna/PRO-00035_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx11G" \
  CollectMultipleMetrics \
  --PROGRAM CollectAlignmentSummaryMetrics \
  --PROGRAM CollectInsertSizeMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --TMP_DIR ${SLURM_TMPDIR} \
  --REFERENCE_SEQUENCE /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --INPUT alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.all.metrics \
  --MAX_RECORDS_IN_RAM 1000000
picard_collect_multiple_metrics.PRO-00035_OS_T.PRO-00035_OS_T.996966dcfee2c600438d2d7094601ee0.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_13_JOB_ID: picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_OS_T.e3eed174d981f7e52f614c1534b75e8e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_OS_T.e3eed174d981f7e52f614c1534b75e8e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_OS_T/picard_metrics && \
touch metrics/dna/PRO-00035_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectOxoGMetrics \
  --VALIDATION_STRINGENCY SILENT  \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.oxog_metrics.txt \
  --DB_SNP $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_oxog_metrics.PRO-00035_OS_T.PRO-00035_OS_T.e3eed174d981f7e52f614c1534b75e8e.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_14_JOB_ID: picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_OS_T.19a18ff286d41b3ec51f3ff78625dad3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_OS_T.19a18ff286d41b3ec51f3ff78625dad3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.2.2.0 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_OS_T/picard_metrics && \
touch metrics/dna/PRO-00035_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12G" \
  CollectGcBiasMetrics \
  --VALIDATION_STRINGENCY SILENT \
  --ALSO_IGNORE_DUPLICATES TRUE \
  --TMP_DIR ${SLURM_TMPDIR} \
  --INPUT alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.qcbias_metrics.txt \
  --CHART metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.qcbias_metrics.pdf \
  --SUMMARY_OUTPUT metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.qcbias_summary_metrics.txt \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_gcbias_metrics.PRO-00035_OS_T.PRO-00035_OS_T.19a18ff286d41b3ec51f3ff78625dad3.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 13G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_15_JOB_ID: picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.3ef7a9b9ddd0476b2f504c8f39ed0ce3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.3ef7a9b9ddd0476b2f504c8f39ed0ce3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_BLOOD/picard_metrics && \
touch metrics/dna/PRO-00035_BLOOD/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12000M" \
 CollectSequencingArtifactMetrics \
  --VALIDATION_STRINGENCY SILENT --FILE_EXTENSION ".txt" \
  --INPUT alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_BLOOD.3ef7a9b9ddd0476b2f504c8f39ed0ce3.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_picard_metrics_16_JOB_ID: picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/metrics_dna_picard_metrics/picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_OS_T.47827dce473404e92ac7a6a6374ecc49.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_OS_T.47827dce473404e92ac7a6a6374ecc49.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p metrics/dna/PRO-00035_OS_T/picard_metrics && \
touch metrics/dna/PRO-00035_OS_T/picard_metrics && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx12000M" \
 CollectSequencingArtifactMetrics \
  --VALIDATION_STRINGENCY SILENT --FILE_EXTENSION ".txt" \
  --INPUT alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --OUTPUT metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T \
  --REFERENCE_SEQUENCE $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --MAX_RECORDS_IN_RAM 4000000
picard_collect_sequencing_artifacts_metrics.PRO-00035_OS_T.PRO-00035_OS_T.47827dce473404e92ac7a6a6374ecc49.mugqic.done
chmod 755 $COMMAND
metrics_dna_picard_metrics_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_picard_metrics_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_picard_metrics_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: metrics_dna_sample_qualimap
#-------------------------------------------------------------------------------
STEP=metrics_dna_sample_qualimap
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: metrics_dna_sample_qualimap_1_JOB_ID: dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/metrics_dna_sample_qualimap/dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_BLOOD.f5f48ff6c3e35c26d7318ce48c0e3452.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_BLOOD.f5f48ff6c3e35c26d7318ce48c0e3452.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/qualimap/2.2.2dev && \
mkdir -p metrics/dna/PRO-00089_BLOOD/qualimap/PRO-00089_BLOOD && \
touch metrics/dna/PRO-00089_BLOOD/qualimap/PRO-00089_BLOOD && \
qualimap bamqc --skip-duplicated -nt 1 -gd HUMAN \
  -bam alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam -outdir metrics/dna/PRO-00089_BLOOD/qualimap/PRO-00089_BLOOD \
  --java-mem-size=60G
dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_BLOOD.f5f48ff6c3e35c26d7318ce48c0e3452.mugqic.done
chmod 755 $COMMAND
metrics_dna_sample_qualimap_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 60G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_sample_qualimap_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_sample_qualimap_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_sample_qualimap_2_JOB_ID: dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/metrics_dna_sample_qualimap/dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_OS_T.5e23acb17937edfca5ff903639b56b0e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_OS_T.5e23acb17937edfca5ff903639b56b0e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/qualimap/2.2.2dev && \
mkdir -p metrics/dna/PRO-00089_OS_T/qualimap/PRO-00089_OS_T && \
touch metrics/dna/PRO-00089_OS_T/qualimap/PRO-00089_OS_T && \
qualimap bamqc --skip-duplicated -nt 1 -gd HUMAN \
  -bam alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam -outdir metrics/dna/PRO-00089_OS_T/qualimap/PRO-00089_OS_T \
  --java-mem-size=60G
dna_sample_qualimap.PRO-00089_OS_T.PRO-00089_OS_T.5e23acb17937edfca5ff903639b56b0e.mugqic.done
chmod 755 $COMMAND
metrics_dna_sample_qualimap_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 60G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_sample_qualimap_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_sample_qualimap_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_sample_qualimap_3_JOB_ID: dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/metrics_dna_sample_qualimap/dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_BLOOD.f116207d7ce4bfcf35f8223613cb1080.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_BLOOD.f116207d7ce4bfcf35f8223613cb1080.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/qualimap/2.2.2dev && \
mkdir -p metrics/dna/PRO-00035_BLOOD/qualimap/PRO-00035_BLOOD && \
touch metrics/dna/PRO-00035_BLOOD/qualimap/PRO-00035_BLOOD && \
qualimap bamqc --skip-duplicated -nt 1 -gd HUMAN \
  -bam alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam -outdir metrics/dna/PRO-00035_BLOOD/qualimap/PRO-00035_BLOOD \
  --java-mem-size=60G
dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_BLOOD.f116207d7ce4bfcf35f8223613cb1080.mugqic.done
chmod 755 $COMMAND
metrics_dna_sample_qualimap_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 60G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_sample_qualimap_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_sample_qualimap_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_sample_qualimap_4_JOB_ID: dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/metrics_dna_sample_qualimap/dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_OS_T.f07fa537392af6a68a44101d76864e6b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_OS_T.f07fa537392af6a68a44101d76864e6b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/qualimap/2.2.2dev && \
mkdir -p metrics/dna/PRO-00035_OS_T/qualimap/PRO-00035_OS_T && \
touch metrics/dna/PRO-00035_OS_T/qualimap/PRO-00035_OS_T && \
qualimap bamqc --skip-duplicated -nt 1 -gd HUMAN \
  -bam alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam -outdir metrics/dna/PRO-00035_OS_T/qualimap/PRO-00035_OS_T \
  --java-mem-size=60G
dna_sample_qualimap.PRO-00035_OS_T.PRO-00035_OS_T.f07fa537392af6a68a44101d76864e6b.mugqic.done
chmod 755 $COMMAND
metrics_dna_sample_qualimap_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem 60G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_sample_qualimap_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_sample_qualimap_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: metrics_dna_fastqc
#-------------------------------------------------------------------------------
STEP=metrics_dna_fastqc
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: metrics_dna_fastqc_1_JOB_ID: fastqc.PRO-00089_OS_T.PRO-00089_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=fastqc.PRO-00089_OS_T.PRO-00089_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_1_JOB_ID
JOB_DONE=job_output/metrics_dna_fastqc/fastqc.PRO-00089_OS_T.PRO-00089_BLOOD.7964fe3e3c615240234474e94800ca05.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'fastqc.PRO-00089_OS_T.PRO-00089_BLOOD.7964fe3e3c615240234474e94800ca05.mugqic.done' > $COMMAND
module purge && \
module load mugqic/fastqc/0.11.5 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p metrics/dna/PRO-00089_BLOOD/fastqc && \
touch metrics/dna/PRO-00089_BLOOD/fastqc && \
`cat > metrics/dna/PRO-00089_BLOOD/fastqc/adapter.tsv << END
>Adapter1	AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2	AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
fastqc \
  -o metrics/dna/PRO-00089_BLOOD/fastqc \
  -t 4 \
  -a metrics/dna/PRO-00089_BLOOD/fastqc/adapter.tsv \
  -f bam \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.bam
fastqc.PRO-00089_OS_T.PRO-00089_BLOOD.7964fe3e3c615240234474e94800ca05.mugqic.done
chmod 755 $COMMAND
metrics_dna_fastqc_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem-per-cpu 3900M -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_fastqc_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_fastqc_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_fastqc_2_JOB_ID: fastqc.PRO-00089_OS_T.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=fastqc.PRO-00089_OS_T.PRO-00089_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_2_JOB_ID
JOB_DONE=job_output/metrics_dna_fastqc/fastqc.PRO-00089_OS_T.PRO-00089_OS_T.c7ae6bb50d71670bcb269390fdd610d9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'fastqc.PRO-00089_OS_T.PRO-00089_OS_T.c7ae6bb50d71670bcb269390fdd610d9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/fastqc/0.11.5 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p metrics/dna/PRO-00089_OS_T/fastqc && \
touch metrics/dna/PRO-00089_OS_T/fastqc && \
`cat > metrics/dna/PRO-00089_OS_T/fastqc/adapter.tsv << END
>Adapter1	AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2	AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
fastqc \
  -o metrics/dna/PRO-00089_OS_T/fastqc \
  -t 4 \
  -a metrics/dna/PRO-00089_OS_T/fastqc/adapter.tsv \
  -f bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.bam
fastqc.PRO-00089_OS_T.PRO-00089_OS_T.c7ae6bb50d71670bcb269390fdd610d9.mugqic.done
chmod 755 $COMMAND
metrics_dna_fastqc_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem-per-cpu 3900M -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_fastqc_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_fastqc_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_fastqc_3_JOB_ID: fastqc.PRO-00035_OS_T.PRO-00035_BLOOD
#-------------------------------------------------------------------------------
JOB_NAME=fastqc.PRO-00035_OS_T.PRO-00035_BLOOD
JOB_DEPENDENCIES=$sambamba_mark_duplicates_3_JOB_ID
JOB_DONE=job_output/metrics_dna_fastqc/fastqc.PRO-00035_OS_T.PRO-00035_BLOOD.c5af1577f25f863228bcd7dd1438919f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'fastqc.PRO-00035_OS_T.PRO-00035_BLOOD.c5af1577f25f863228bcd7dd1438919f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/fastqc/0.11.5 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p metrics/dna/PRO-00035_BLOOD/fastqc && \
touch metrics/dna/PRO-00035_BLOOD/fastqc && \
`cat > metrics/dna/PRO-00035_BLOOD/fastqc/adapter.tsv << END
>Adapter1	AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2	AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
fastqc \
  -o metrics/dna/PRO-00035_BLOOD/fastqc \
  -t 4 \
  -a metrics/dna/PRO-00035_BLOOD/fastqc/adapter.tsv \
  -f bam \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.bam
fastqc.PRO-00035_OS_T.PRO-00035_BLOOD.c5af1577f25f863228bcd7dd1438919f.mugqic.done
chmod 755 $COMMAND
metrics_dna_fastqc_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem-per-cpu 3900M -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_fastqc_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_fastqc_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: metrics_dna_fastqc_4_JOB_ID: fastqc.PRO-00035_OS_T.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=fastqc.PRO-00035_OS_T.PRO-00035_OS_T
JOB_DEPENDENCIES=$sambamba_mark_duplicates_4_JOB_ID
JOB_DONE=job_output/metrics_dna_fastqc/fastqc.PRO-00035_OS_T.PRO-00035_OS_T.bd269e4d91a7696bc3b560b1e691a35a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'fastqc.PRO-00035_OS_T.PRO-00035_OS_T.bd269e4d91a7696bc3b560b1e691a35a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/fastqc/0.11.5 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p metrics/dna/PRO-00035_OS_T/fastqc && \
touch metrics/dna/PRO-00035_OS_T/fastqc && \
`cat > metrics/dna/PRO-00035_OS_T/fastqc/adapter.tsv << END
>Adapter1	AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC
>Adapter2	AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
END` && \
fastqc \
  -o metrics/dna/PRO-00035_OS_T/fastqc \
  -t 4 \
  -a metrics/dna/PRO-00035_OS_T/fastqc/adapter.tsv \
  -f bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.bam
fastqc.PRO-00035_OS_T.PRO-00035_OS_T.bd269e4d91a7696bc3b560b1e691a35a.mugqic.done
chmod 755 $COMMAND
metrics_dna_fastqc_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=35:00:00 --mem-per-cpu 3900M -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$metrics_dna_fastqc_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$metrics_dna_fastqc_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sequenza
#-------------------------------------------------------------------------------
STEP=sequenza
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sequenza_1_JOB_ID: sequenza.create_seqz.1.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.1.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.1.PRO-00089_OS_T.aaff28b8db087b7c6022934fd5279c29.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.1.PRO-00089_OS_T.aaff28b8db087b7c6022934fd5279c29.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 1 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.1.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.1.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.1.gz
sequenza.create_seqz.1.PRO-00089_OS_T.aaff28b8db087b7c6022934fd5279c29.mugqic.done
chmod 755 $COMMAND
sequenza_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_2_JOB_ID: sequenza.create_seqz.2.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.2.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.2.PRO-00089_OS_T.576297b8fe99f7c8b418c56f8aa14c1f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.2.PRO-00089_OS_T.576297b8fe99f7c8b418c56f8aa14c1f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 2 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.2.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.2.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.2.gz
sequenza.create_seqz.2.PRO-00089_OS_T.576297b8fe99f7c8b418c56f8aa14c1f.mugqic.done
chmod 755 $COMMAND
sequenza_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_3_JOB_ID: sequenza.create_seqz.3.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.3.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.3.PRO-00089_OS_T.1c3ed06d44fcf59d67353f050ccf9098.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.3.PRO-00089_OS_T.1c3ed06d44fcf59d67353f050ccf9098.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 3 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.3.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.3.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.3.gz
sequenza.create_seqz.3.PRO-00089_OS_T.1c3ed06d44fcf59d67353f050ccf9098.mugqic.done
chmod 755 $COMMAND
sequenza_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_4_JOB_ID: sequenza.create_seqz.4.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.4.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.4.PRO-00089_OS_T.35ad8c39fdf12e3896ea77f1ac58f438.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.4.PRO-00089_OS_T.35ad8c39fdf12e3896ea77f1ac58f438.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 4 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.4.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.4.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.4.gz
sequenza.create_seqz.4.PRO-00089_OS_T.35ad8c39fdf12e3896ea77f1ac58f438.mugqic.done
chmod 755 $COMMAND
sequenza_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_5_JOB_ID: sequenza.create_seqz.5.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.5.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.5.PRO-00089_OS_T.3f145a8d6463f1e53940fe7d0facea1e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.5.PRO-00089_OS_T.3f145a8d6463f1e53940fe7d0facea1e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 5 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.5.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.5.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.5.gz
sequenza.create_seqz.5.PRO-00089_OS_T.3f145a8d6463f1e53940fe7d0facea1e.mugqic.done
chmod 755 $COMMAND
sequenza_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_6_JOB_ID: sequenza.create_seqz.6.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.6.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.6.PRO-00089_OS_T.a489ca2cf785571ff532479a84300c8d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.6.PRO-00089_OS_T.a489ca2cf785571ff532479a84300c8d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 6 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.6.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.6.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.6.gz
sequenza.create_seqz.6.PRO-00089_OS_T.a489ca2cf785571ff532479a84300c8d.mugqic.done
chmod 755 $COMMAND
sequenza_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_7_JOB_ID: sequenza.create_seqz.7.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.7.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.7.PRO-00089_OS_T.d7684309d0bba146dc9fa115c8cb985e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.7.PRO-00089_OS_T.d7684309d0bba146dc9fa115c8cb985e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 7 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.7.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.7.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.7.gz
sequenza.create_seqz.7.PRO-00089_OS_T.d7684309d0bba146dc9fa115c8cb985e.mugqic.done
chmod 755 $COMMAND
sequenza_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_8_JOB_ID: sequenza.create_seqz.8.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.8.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.8.PRO-00089_OS_T.bc076305138c7a947b9d76743217c17b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.8.PRO-00089_OS_T.bc076305138c7a947b9d76743217c17b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 8 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.8.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.8.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.8.gz
sequenza.create_seqz.8.PRO-00089_OS_T.bc076305138c7a947b9d76743217c17b.mugqic.done
chmod 755 $COMMAND
sequenza_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_9_JOB_ID: sequenza.create_seqz.9.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.9.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.9.PRO-00089_OS_T.07f60cbb582427f10cdda6bc6b3a0df2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.9.PRO-00089_OS_T.07f60cbb582427f10cdda6bc6b3a0df2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 9 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.9.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.9.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.9.gz
sequenza.create_seqz.9.PRO-00089_OS_T.07f60cbb582427f10cdda6bc6b3a0df2.mugqic.done
chmod 755 $COMMAND
sequenza_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_10_JOB_ID: sequenza.create_seqz.10.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.10.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.10.PRO-00089_OS_T.7f409f44a1cef9cf72d9364d82d1b3ff.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.10.PRO-00089_OS_T.7f409f44a1cef9cf72d9364d82d1b3ff.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 10 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.10.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.10.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.10.gz
sequenza.create_seqz.10.PRO-00089_OS_T.7f409f44a1cef9cf72d9364d82d1b3ff.mugqic.done
chmod 755 $COMMAND
sequenza_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_11_JOB_ID: sequenza.create_seqz.11.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.11.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.11.PRO-00089_OS_T.bc5182f879e494dc57fb86660b84892e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.11.PRO-00089_OS_T.bc5182f879e494dc57fb86660b84892e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 11 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.11.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.11.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.11.gz
sequenza.create_seqz.11.PRO-00089_OS_T.bc5182f879e494dc57fb86660b84892e.mugqic.done
chmod 755 $COMMAND
sequenza_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_12_JOB_ID: sequenza.create_seqz.12.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.12.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.12.PRO-00089_OS_T.cc08cf079f0ada4c836b014c714f58b9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.12.PRO-00089_OS_T.cc08cf079f0ada4c836b014c714f58b9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 12 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.12.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.12.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.12.gz
sequenza.create_seqz.12.PRO-00089_OS_T.cc08cf079f0ada4c836b014c714f58b9.mugqic.done
chmod 755 $COMMAND
sequenza_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_13_JOB_ID: sequenza.create_seqz.13.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.13.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.13.PRO-00089_OS_T.d568508f01dd1d31e330808d60387da4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.13.PRO-00089_OS_T.d568508f01dd1d31e330808d60387da4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 13 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.13.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.13.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.13.gz
sequenza.create_seqz.13.PRO-00089_OS_T.d568508f01dd1d31e330808d60387da4.mugqic.done
chmod 755 $COMMAND
sequenza_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_14_JOB_ID: sequenza.create_seqz.14.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.14.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.14.PRO-00089_OS_T.a9200379f38ebe5de86dac4ecbc47eac.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.14.PRO-00089_OS_T.a9200379f38ebe5de86dac4ecbc47eac.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 14 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.14.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.14.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.14.gz
sequenza.create_seqz.14.PRO-00089_OS_T.a9200379f38ebe5de86dac4ecbc47eac.mugqic.done
chmod 755 $COMMAND
sequenza_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_15_JOB_ID: sequenza.create_seqz.15.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.15.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.15.PRO-00089_OS_T.a001370febc12e5f0c75a952b12011c2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.15.PRO-00089_OS_T.a001370febc12e5f0c75a952b12011c2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 15 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.15.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.15.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.15.gz
sequenza.create_seqz.15.PRO-00089_OS_T.a001370febc12e5f0c75a952b12011c2.mugqic.done
chmod 755 $COMMAND
sequenza_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_16_JOB_ID: sequenza.create_seqz.16.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.16.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.16.PRO-00089_OS_T.da44b8bd917cfcb0076bbb1fed352e66.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.16.PRO-00089_OS_T.da44b8bd917cfcb0076bbb1fed352e66.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 16 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.16.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.16.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.16.gz
sequenza.create_seqz.16.PRO-00089_OS_T.da44b8bd917cfcb0076bbb1fed352e66.mugqic.done
chmod 755 $COMMAND
sequenza_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_17_JOB_ID: sequenza.create_seqz.17.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.17.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.17.PRO-00089_OS_T.e178f280b5d0316720cfbf7ead99296d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.17.PRO-00089_OS_T.e178f280b5d0316720cfbf7ead99296d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 17 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.17.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.17.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.17.gz
sequenza.create_seqz.17.PRO-00089_OS_T.e178f280b5d0316720cfbf7ead99296d.mugqic.done
chmod 755 $COMMAND
sequenza_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_18_JOB_ID: sequenza.create_seqz.18.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.18.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.18.PRO-00089_OS_T.b9beb0b730f4be0c6631d7ac7c803588.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.18.PRO-00089_OS_T.b9beb0b730f4be0c6631d7ac7c803588.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 18 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.18.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.18.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.18.gz
sequenza.create_seqz.18.PRO-00089_OS_T.b9beb0b730f4be0c6631d7ac7c803588.mugqic.done
chmod 755 $COMMAND
sequenza_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_19_JOB_ID: sequenza.create_seqz.19.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.19.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.19.PRO-00089_OS_T.f937e5012104a32ac9f694fd437b26cc.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.19.PRO-00089_OS_T.f937e5012104a32ac9f694fd437b26cc.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 19 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.19.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.19.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.19.gz
sequenza.create_seqz.19.PRO-00089_OS_T.f937e5012104a32ac9f694fd437b26cc.mugqic.done
chmod 755 $COMMAND
sequenza_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_20_JOB_ID: sequenza.create_seqz.20.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.20.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.20.PRO-00089_OS_T.21ef85f777bd58844578f4f991ca163e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.20.PRO-00089_OS_T.21ef85f777bd58844578f4f991ca163e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 20 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.20.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.20.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.20.gz
sequenza.create_seqz.20.PRO-00089_OS_T.21ef85f777bd58844578f4f991ca163e.mugqic.done
chmod 755 $COMMAND
sequenza_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_21_JOB_ID: sequenza.create_seqz.21.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.21.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.21.PRO-00089_OS_T.f55a6b44b929d409e05c3d2fa35ff36c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.21.PRO-00089_OS_T.f55a6b44b929d409e05c3d2fa35ff36c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 21 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.21.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.21.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.21.gz
sequenza.create_seqz.21.PRO-00089_OS_T.f55a6b44b929d409e05c3d2fa35ff36c.mugqic.done
chmod 755 $COMMAND
sequenza_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_22_JOB_ID: sequenza.create_seqz.22.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.22.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.22.PRO-00089_OS_T.97d42b07f85a1520c70ebe1bc163e8b2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.22.PRO-00089_OS_T.97d42b07f85a1520c70ebe1bc163e8b2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 22 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.22.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.22.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.22.gz
sequenza.create_seqz.22.PRO-00089_OS_T.97d42b07f85a1520c70ebe1bc163e8b2.mugqic.done
chmod 755 $COMMAND
sequenza_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_23_JOB_ID: sequenza.create_seqz.X.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.X.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.X.PRO-00089_OS_T.7db0440955166244568527c61d7d02a6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.X.PRO-00089_OS_T.7db0440955166244568527c61d7d02a6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome X \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.X.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.X.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.X.gz
sequenza.create_seqz.X.PRO-00089_OS_T.7db0440955166244568527c61d7d02a6.mugqic.done
chmod 755 $COMMAND
sequenza_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_24_JOB_ID: sequenza.create_seqz.Y.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.Y.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.Y.PRO-00089_OS_T.2eea3c36857fc49da199807d55032aef.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.Y.PRO-00089_OS_T.2eea3c36857fc49da199807d55032aef.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome Y \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.Y.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.Y.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.Y.gz
sequenza.create_seqz.Y.PRO-00089_OS_T.2eea3c36857fc49da199807d55032aef.mugqic.done
chmod 755 $COMMAND
sequenza_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_25_JOB_ID: sequenza.create_seqz.MT.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.MT.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.MT.PRO-00089_OS_T.b4a8a5eb8467dbf3eaaaba34328319fe.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.MT.PRO-00089_OS_T.b4a8a5eb8467dbf3eaaaba34328319fe.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome MT \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.MT.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.seqz.MT.gz \
    -o pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.MT.gz
sequenza.create_seqz.MT.PRO-00089_OS_T.b4a8a5eb8467dbf3eaaaba34328319fe.mugqic.done
chmod 755 $COMMAND
sequenza_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_26_JOB_ID: sequenza.merge_binned_seqz.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.merge_binned_seqz.PRO-00089_OS_T
JOB_DEPENDENCIES=$sequenza_1_JOB_ID:$sequenza_2_JOB_ID:$sequenza_3_JOB_ID:$sequenza_4_JOB_ID:$sequenza_5_JOB_ID:$sequenza_6_JOB_ID:$sequenza_7_JOB_ID:$sequenza_8_JOB_ID:$sequenza_9_JOB_ID:$sequenza_10_JOB_ID:$sequenza_11_JOB_ID:$sequenza_12_JOB_ID:$sequenza_13_JOB_ID:$sequenza_14_JOB_ID:$sequenza_15_JOB_ID:$sequenza_16_JOB_ID:$sequenza_17_JOB_ID:$sequenza_18_JOB_ID:$sequenza_19_JOB_ID:$sequenza_20_JOB_ID:$sequenza_21_JOB_ID:$sequenza_22_JOB_ID:$sequenza_23_JOB_ID:$sequenza_24_JOB_ID:$sequenza_25_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.merge_binned_seqz.PRO-00089_OS_T.7c6011b778fbd1f3b20652e26f3b747c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.merge_binned_seqz.PRO-00089_OS_T.7c6011b778fbd1f3b20652e26f3b747c.mugqic.done' > $COMMAND
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
zcat pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.1.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.2.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.3.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.4.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.5.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.6.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.7.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.8.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.9.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.10.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.11.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.12.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.13.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.14.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.15.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.16.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.17.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.18.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.19.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.20.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.21.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.22.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.X.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.Y.gz \
pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza/PRO-00089_OS_T.binned.seqz.MT.gz \
 | gawk 'FNR==1 && NR==1{print;}{ if($1!="chromosome" && $1!="MT" && $1!="chrMT" && $1!="chrM") {print $0} }' |  \
 gzip -cf > pairedVariants/PRO-00089_OS_T/sequenza/PRO-00089_OS_T.binned.merged.seqz.gz
sequenza.merge_binned_seqz.PRO-00089_OS_T.7c6011b778fbd1f3b20652e26f3b747c.mugqic.done
chmod 755 $COMMAND
sequenza_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_27_JOB_ID: sequenza.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.PRO-00089_OS_T
JOB_DEPENDENCIES=$sequenza_26_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.PRO-00089_OS_T.fb48399eb4b3062e6df3469ec42ac69c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.PRO-00089_OS_T.fb48399eb4b3062e6df3469ec42ac69c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00089_OS_T/sequenza/rawSequenza && \
\
Rscript $R_TOOLS/RunSequenza_analysis.R \
    pairedVariants/PRO-00089_OS_T/sequenza/PRO-00089_OS_T.binned.merged.seqz.gz   \
    pairedVariants/PRO-00089_OS_T/sequenza   \
    PRO-00089_OS_T
sequenza.PRO-00089_OS_T.fb48399eb4b3062e6df3469ec42ac69c.mugqic.done
chmod 755 $COMMAND
sequenza_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_28_JOB_ID: sequenza.create_seqz.1.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.1.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.1.PRO-00035_OS_T.8fd9b44aadd92822093cbd85c427fa76.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.1.PRO-00035_OS_T.8fd9b44aadd92822093cbd85c427fa76.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 1 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.1.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.1.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.1.gz
sequenza.create_seqz.1.PRO-00035_OS_T.8fd9b44aadd92822093cbd85c427fa76.mugqic.done
chmod 755 $COMMAND
sequenza_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_29_JOB_ID: sequenza.create_seqz.2.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.2.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.2.PRO-00035_OS_T.aea5cfe51512958bc099f0343bd2d2b6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.2.PRO-00035_OS_T.aea5cfe51512958bc099f0343bd2d2b6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 2 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.2.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.2.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.2.gz
sequenza.create_seqz.2.PRO-00035_OS_T.aea5cfe51512958bc099f0343bd2d2b6.mugqic.done
chmod 755 $COMMAND
sequenza_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_30_JOB_ID: sequenza.create_seqz.3.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.3.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.3.PRO-00035_OS_T.a58a4544ba5d56cad2af2e8b1491de37.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.3.PRO-00035_OS_T.a58a4544ba5d56cad2af2e8b1491de37.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 3 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.3.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.3.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.3.gz
sequenza.create_seqz.3.PRO-00035_OS_T.a58a4544ba5d56cad2af2e8b1491de37.mugqic.done
chmod 755 $COMMAND
sequenza_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_31_JOB_ID: sequenza.create_seqz.4.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.4.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.4.PRO-00035_OS_T.5438000f791e07d3be695bbcff82e3fd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.4.PRO-00035_OS_T.5438000f791e07d3be695bbcff82e3fd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 4 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.4.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.4.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.4.gz
sequenza.create_seqz.4.PRO-00035_OS_T.5438000f791e07d3be695bbcff82e3fd.mugqic.done
chmod 755 $COMMAND
sequenza_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_32_JOB_ID: sequenza.create_seqz.5.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.5.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.5.PRO-00035_OS_T.3fe74782871719a1e09e89c871cf6bb6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.5.PRO-00035_OS_T.3fe74782871719a1e09e89c871cf6bb6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 5 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.5.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.5.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.5.gz
sequenza.create_seqz.5.PRO-00035_OS_T.3fe74782871719a1e09e89c871cf6bb6.mugqic.done
chmod 755 $COMMAND
sequenza_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_33_JOB_ID: sequenza.create_seqz.6.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.6.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.6.PRO-00035_OS_T.1c8cdf4741d22bad4d71e88a79e27fae.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.6.PRO-00035_OS_T.1c8cdf4741d22bad4d71e88a79e27fae.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 6 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.6.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.6.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.6.gz
sequenza.create_seqz.6.PRO-00035_OS_T.1c8cdf4741d22bad4d71e88a79e27fae.mugqic.done
chmod 755 $COMMAND
sequenza_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_34_JOB_ID: sequenza.create_seqz.7.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.7.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.7.PRO-00035_OS_T.ee6b5dd02417ffa761d8269153659f93.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.7.PRO-00035_OS_T.ee6b5dd02417ffa761d8269153659f93.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 7 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.7.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.7.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.7.gz
sequenza.create_seqz.7.PRO-00035_OS_T.ee6b5dd02417ffa761d8269153659f93.mugqic.done
chmod 755 $COMMAND
sequenza_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_35_JOB_ID: sequenza.create_seqz.8.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.8.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.8.PRO-00035_OS_T.b2f692661aed8d9a7dcb7534877bb572.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.8.PRO-00035_OS_T.b2f692661aed8d9a7dcb7534877bb572.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 8 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.8.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.8.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.8.gz
sequenza.create_seqz.8.PRO-00035_OS_T.b2f692661aed8d9a7dcb7534877bb572.mugqic.done
chmod 755 $COMMAND
sequenza_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_36_JOB_ID: sequenza.create_seqz.9.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.9.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.9.PRO-00035_OS_T.ebcde0e24e73b92a8e47a54b721b85ab.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.9.PRO-00035_OS_T.ebcde0e24e73b92a8e47a54b721b85ab.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 9 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.9.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.9.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.9.gz
sequenza.create_seqz.9.PRO-00035_OS_T.ebcde0e24e73b92a8e47a54b721b85ab.mugqic.done
chmod 755 $COMMAND
sequenza_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_37_JOB_ID: sequenza.create_seqz.10.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.10.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.10.PRO-00035_OS_T.7cb66a18a3139b8245d790208a400763.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.10.PRO-00035_OS_T.7cb66a18a3139b8245d790208a400763.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 10 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.10.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.10.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.10.gz
sequenza.create_seqz.10.PRO-00035_OS_T.7cb66a18a3139b8245d790208a400763.mugqic.done
chmod 755 $COMMAND
sequenza_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_38_JOB_ID: sequenza.create_seqz.11.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.11.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.11.PRO-00035_OS_T.4df653ad6041ea16f07ddd27752364e3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.11.PRO-00035_OS_T.4df653ad6041ea16f07ddd27752364e3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 11 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.11.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.11.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.11.gz
sequenza.create_seqz.11.PRO-00035_OS_T.4df653ad6041ea16f07ddd27752364e3.mugqic.done
chmod 755 $COMMAND
sequenza_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_39_JOB_ID: sequenza.create_seqz.12.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.12.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.12.PRO-00035_OS_T.4010f3930f2e4da1bbd6a75a4028ef87.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.12.PRO-00035_OS_T.4010f3930f2e4da1bbd6a75a4028ef87.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 12 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.12.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.12.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.12.gz
sequenza.create_seqz.12.PRO-00035_OS_T.4010f3930f2e4da1bbd6a75a4028ef87.mugqic.done
chmod 755 $COMMAND
sequenza_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_40_JOB_ID: sequenza.create_seqz.13.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.13.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.13.PRO-00035_OS_T.8d01751329ec4bd6690f9d44e62c55da.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.13.PRO-00035_OS_T.8d01751329ec4bd6690f9d44e62c55da.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 13 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.13.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.13.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.13.gz
sequenza.create_seqz.13.PRO-00035_OS_T.8d01751329ec4bd6690f9d44e62c55da.mugqic.done
chmod 755 $COMMAND
sequenza_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_41_JOB_ID: sequenza.create_seqz.14.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.14.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.14.PRO-00035_OS_T.05d997032238c672306752421695b02b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.14.PRO-00035_OS_T.05d997032238c672306752421695b02b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 14 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.14.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.14.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.14.gz
sequenza.create_seqz.14.PRO-00035_OS_T.05d997032238c672306752421695b02b.mugqic.done
chmod 755 $COMMAND
sequenza_41_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_41_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_41_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_42_JOB_ID: sequenza.create_seqz.15.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.15.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.15.PRO-00035_OS_T.b978116e4b34494e9569ceddada7b343.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.15.PRO-00035_OS_T.b978116e4b34494e9569ceddada7b343.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 15 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.15.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.15.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.15.gz
sequenza.create_seqz.15.PRO-00035_OS_T.b978116e4b34494e9569ceddada7b343.mugqic.done
chmod 755 $COMMAND
sequenza_42_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_42_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_42_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_43_JOB_ID: sequenza.create_seqz.16.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.16.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.16.PRO-00035_OS_T.cf7f20f0068cf7e6b7bbffaf472a8e8e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.16.PRO-00035_OS_T.cf7f20f0068cf7e6b7bbffaf472a8e8e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 16 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.16.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.16.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.16.gz
sequenza.create_seqz.16.PRO-00035_OS_T.cf7f20f0068cf7e6b7bbffaf472a8e8e.mugqic.done
chmod 755 $COMMAND
sequenza_43_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_43_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_43_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_44_JOB_ID: sequenza.create_seqz.17.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.17.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.17.PRO-00035_OS_T.2b78678362a2ccf851896bf6937e1d7b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.17.PRO-00035_OS_T.2b78678362a2ccf851896bf6937e1d7b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 17 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.17.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.17.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.17.gz
sequenza.create_seqz.17.PRO-00035_OS_T.2b78678362a2ccf851896bf6937e1d7b.mugqic.done
chmod 755 $COMMAND
sequenza_44_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_44_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_44_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_45_JOB_ID: sequenza.create_seqz.18.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.18.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.18.PRO-00035_OS_T.d0c2153eec0f2d39dbf8bc0c20f3b5da.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.18.PRO-00035_OS_T.d0c2153eec0f2d39dbf8bc0c20f3b5da.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 18 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.18.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.18.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.18.gz
sequenza.create_seqz.18.PRO-00035_OS_T.d0c2153eec0f2d39dbf8bc0c20f3b5da.mugqic.done
chmod 755 $COMMAND
sequenza_45_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_45_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_45_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_46_JOB_ID: sequenza.create_seqz.19.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.19.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.19.PRO-00035_OS_T.67935a390baa81bd4643fc3395650028.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.19.PRO-00035_OS_T.67935a390baa81bd4643fc3395650028.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 19 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.19.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.19.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.19.gz
sequenza.create_seqz.19.PRO-00035_OS_T.67935a390baa81bd4643fc3395650028.mugqic.done
chmod 755 $COMMAND
sequenza_46_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_46_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_46_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_47_JOB_ID: sequenza.create_seqz.20.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.20.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.20.PRO-00035_OS_T.7a6fa7824694419968516b1620322011.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.20.PRO-00035_OS_T.7a6fa7824694419968516b1620322011.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 20 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.20.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.20.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.20.gz
sequenza.create_seqz.20.PRO-00035_OS_T.7a6fa7824694419968516b1620322011.mugqic.done
chmod 755 $COMMAND
sequenza_47_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_47_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_47_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_48_JOB_ID: sequenza.create_seqz.21.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.21.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.21.PRO-00035_OS_T.4cc5c9e0ec5dbb66ed1d118577be0126.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.21.PRO-00035_OS_T.4cc5c9e0ec5dbb66ed1d118577be0126.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 21 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.21.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.21.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.21.gz
sequenza.create_seqz.21.PRO-00035_OS_T.4cc5c9e0ec5dbb66ed1d118577be0126.mugqic.done
chmod 755 $COMMAND
sequenza_48_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_48_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_48_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_49_JOB_ID: sequenza.create_seqz.22.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.22.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.22.PRO-00035_OS_T.7c1013e45074b9f33c4860d91b2fa52c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.22.PRO-00035_OS_T.7c1013e45074b9f33c4860d91b2fa52c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome 22 \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.22.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.22.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.22.gz
sequenza.create_seqz.22.PRO-00035_OS_T.7c1013e45074b9f33c4860d91b2fa52c.mugqic.done
chmod 755 $COMMAND
sequenza_49_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_49_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_49_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_50_JOB_ID: sequenza.create_seqz.X.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.X.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.X.PRO-00035_OS_T.95d4d70f4bb899cb01747001dfc8f2e4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.X.PRO-00035_OS_T.95d4d70f4bb899cb01747001dfc8f2e4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome X \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.X.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.X.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.X.gz
sequenza.create_seqz.X.PRO-00035_OS_T.95d4d70f4bb899cb01747001dfc8f2e4.mugqic.done
chmod 755 $COMMAND
sequenza_50_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_50_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_50_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_51_JOB_ID: sequenza.create_seqz.Y.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.Y.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.Y.PRO-00035_OS_T.85aa85825cf1d9e880c344582b97cba4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.Y.PRO-00035_OS_T.85aa85825cf1d9e880c344582b97cba4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome Y \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.Y.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.Y.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.Y.gz
sequenza.create_seqz.Y.PRO-00035_OS_T.85aa85825cf1d9e880c344582b97cba4.mugqic.done
chmod 755 $COMMAND
sequenza_51_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_51_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_51_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_52_JOB_ID: sequenza.create_seqz.MT.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.create_seqz.MT.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.create_seqz.MT.PRO-00035_OS_T.6d8d2217400f8fea0b40ea3f1ca1dfce.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.create_seqz.MT.PRO-00035_OS_T.6d8d2217400f8fea0b40ea3f1ca1dfce.mugqic.done' > $COMMAND
module purge && \
module load mugqic/Sequenza-utils/3.0.0 mugqic/samtools/1.12 mugqic/htslib/1.14 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
sequenza-utils \
    bam2seqz -q 20 -N 30 --samtools samtools --tabix tabix \
    \
    --chromosome MT \
    -gc $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.gc50Base.txt \
    --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
    --tumor alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
    --output pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.MT.gz && \
\
sequenza-utils  \
    seqz_binning  \
    -w 50  \
    -s pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.seqz.MT.gz \
    -o pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.MT.gz
sequenza.create_seqz.MT.PRO-00035_OS_T.6d8d2217400f8fea0b40ea3f1ca1dfce.mugqic.done
chmod 755 $COMMAND
sequenza_52_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_52_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_52_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_53_JOB_ID: sequenza.merge_binned_seqz.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.merge_binned_seqz.PRO-00035_OS_T
JOB_DEPENDENCIES=$sequenza_28_JOB_ID:$sequenza_29_JOB_ID:$sequenza_30_JOB_ID:$sequenza_31_JOB_ID:$sequenza_32_JOB_ID:$sequenza_33_JOB_ID:$sequenza_34_JOB_ID:$sequenza_35_JOB_ID:$sequenza_36_JOB_ID:$sequenza_37_JOB_ID:$sequenza_38_JOB_ID:$sequenza_39_JOB_ID:$sequenza_40_JOB_ID:$sequenza_41_JOB_ID:$sequenza_42_JOB_ID:$sequenza_43_JOB_ID:$sequenza_44_JOB_ID:$sequenza_45_JOB_ID:$sequenza_46_JOB_ID:$sequenza_47_JOB_ID:$sequenza_48_JOB_ID:$sequenza_49_JOB_ID:$sequenza_50_JOB_ID:$sequenza_51_JOB_ID:$sequenza_52_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.merge_binned_seqz.PRO-00035_OS_T.3ecfe0b66f74df253c5e779ecf9c4953.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.merge_binned_seqz.PRO-00035_OS_T.3ecfe0b66f74df253c5e779ecf9c4953.mugqic.done' > $COMMAND
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
zcat pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.1.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.2.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.3.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.4.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.5.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.6.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.7.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.8.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.9.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.10.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.11.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.12.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.13.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.14.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.15.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.16.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.17.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.18.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.19.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.20.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.21.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.22.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.X.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.Y.gz \
pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza/PRO-00035_OS_T.binned.seqz.MT.gz \
 | gawk 'FNR==1 && NR==1{print;}{ if($1!="chromosome" && $1!="MT" && $1!="chrMT" && $1!="chrM") {print $0} }' |  \
 gzip -cf > pairedVariants/PRO-00035_OS_T/sequenza/PRO-00035_OS_T.binned.merged.seqz.gz
sequenza.merge_binned_seqz.PRO-00035_OS_T.3ecfe0b66f74df253c5e779ecf9c4953.mugqic.done
chmod 755 $COMMAND
sequenza_53_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_53_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_53_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sequenza_54_JOB_ID: sequenza.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=sequenza.PRO-00035_OS_T
JOB_DEPENDENCIES=$sequenza_53_JOB_ID
JOB_DONE=job_output/sequenza/sequenza.PRO-00035_OS_T.e25704357dc5968fff24546dc7d71631.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sequenza.PRO-00035_OS_T.e25704357dc5968fff24546dc7d71631.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/R_Bioconductor/3.5.0_3.7 && \
mkdir -p pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
touch pairedVariants/PRO-00035_OS_T/sequenza/rawSequenza && \
\
Rscript $R_TOOLS/RunSequenza_analysis.R \
    pairedVariants/PRO-00035_OS_T/sequenza/PRO-00035_OS_T.binned.merged.seqz.gz   \
    pairedVariants/PRO-00035_OS_T/sequenza   \
    PRO-00035_OS_T
sequenza.PRO-00035_OS_T.e25704357dc5968fff24546dc7d71631.mugqic.done
chmod 755 $COMMAND
sequenza_54_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sequenza_54_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sequenza_54_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: manta_sv_calls
#-------------------------------------------------------------------------------
STEP=manta_sv_calls
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: manta_sv_calls_1_JOB_ID: manta_sv.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=manta_sv.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/manta_sv_calls/manta_sv.PRO-00089_OS_T.6983faaa0c559ac622436a788719f79f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'manta_sv.PRO-00089_OS_T.6983faaa0c559ac622436a788719f79f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/2.7.14 mugqic/Manta/1.5.0 && \
rm -r -f SVariants/PRO-00089_OS_T/rawManta && \
mkdir -p SVariants/PRO-00089_OS_T/rawManta && \
touch SVariants/PRO-00089_OS_T/rawManta && \
 python $MANTA_HOME/bin/configManta.py \
        --normalBam alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
        --tumorBam alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
        --referenceFasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
          \
        --runDir SVariants/PRO-00089_OS_T/rawManta && \
python SVariants/PRO-00089_OS_T/rawManta/runWorkflow.py \
        -m local  \
        -j 32 \
        -g 55 \
        --quiet && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/rawManta/results/variants/somaticSV.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/PRO-00089_OS_T.manta.somatic.vcf.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/rawManta/results/variants/somaticSV.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/PRO-00089_OS_T.manta.somatic.vcf.gz.tbi && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/rawManta/results/variants/diploidSV.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/PRO-00089_OS_T.manta.germline.vcf.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/rawManta/results/variants/diploidSV.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00089_OS_T/PRO-00089_OS_T.manta.germline.vcf.gz.tbi
manta_sv.PRO-00089_OS_T.6983faaa0c559ac622436a788719f79f.mugqic.done
chmod 755 $COMMAND
manta_sv_calls_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$manta_sv_calls_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$manta_sv_calls_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: manta_sv_calls_2_JOB_ID: manta_sv.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=manta_sv.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/manta_sv_calls/manta_sv.PRO-00035_OS_T.2eb0802fc38dd594dc63d1a25a87d0c9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'manta_sv.PRO-00035_OS_T.2eb0802fc38dd594dc63d1a25a87d0c9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/2.7.14 mugqic/Manta/1.5.0 && \
rm -r -f SVariants/PRO-00035_OS_T/rawManta && \
mkdir -p SVariants/PRO-00035_OS_T/rawManta && \
touch SVariants/PRO-00035_OS_T/rawManta && \
 python $MANTA_HOME/bin/configManta.py \
        --normalBam alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
        --tumorBam alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
        --referenceFasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
          \
        --runDir SVariants/PRO-00035_OS_T/rawManta && \
python SVariants/PRO-00035_OS_T/rawManta/runWorkflow.py \
        -m local  \
        -j 32 \
        -g 55 \
        --quiet && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/rawManta/results/variants/somaticSV.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/PRO-00035_OS_T.manta.somatic.vcf.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/rawManta/results/variants/somaticSV.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/PRO-00035_OS_T.manta.somatic.vcf.gz.tbi && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/rawManta/results/variants/diploidSV.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/PRO-00035_OS_T.manta.germline.vcf.gz && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/rawManta/results/variants/diploidSV.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/SVariants/PRO-00035_OS_T/PRO-00035_OS_T.manta.germline.vcf.gz.tbi
manta_sv.PRO-00035_OS_T.2eb0802fc38dd594dc63d1a25a87d0c9.mugqic.done
chmod 755 $COMMAND
manta_sv_calls_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$manta_sv_calls_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$manta_sv_calls_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: strelka2_paired_somatic
#-------------------------------------------------------------------------------
STEP=strelka2_paired_somatic
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_somatic_1_JOB_ID: strelka2_paired_somatic.call.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_somatic.call.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/strelka2_paired_somatic/strelka2_paired_somatic.call.PRO-00089_OS_T.d5788e7514d55f165fd44839ba5da724.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_somatic.call.PRO-00089_OS_T.d5788e7514d55f165fd44839ba5da724.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/2.7.18 mugqic/Strelka2/2.9.10 && \
rm -r -f pairedVariants/PRO-00089_OS_T/rawStrelka2_somatic && \
rm -f pairedVariants/PRO-00089_OS_T/rawStrelka2_somatic/runWorkflow.py && \
python $STRELKA2_HOME/bin/configureStrelkaSomaticWorkflow.py \
  --normalBam alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --tumorBam alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --referenceFasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
   \
  --callRegions $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.strelka2.bed.gz  \
  --runDir pairedVariants/PRO-00089_OS_T/rawStrelka2_somatic && \
python pairedVariants/PRO-00089_OS_T/rawStrelka2_somatic/runWorkflow.py \
  -m local  \
  -j 32 \
  -g 55 \
  --quiet
strelka2_paired_somatic.call.PRO-00089_OS_T.d5788e7514d55f165fd44839ba5da724.mugqic.done
chmod 755 $COMMAND
strelka2_paired_somatic_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_somatic_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_somatic_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_somatic_2_JOB_ID: strelka2_paired_somatic.filter.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_somatic.filter.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_somatic_1_JOB_ID
JOB_DONE=job_output/strelka2_paired_somatic/strelka2_paired_somatic.filter.PRO-00089_OS_T.2ee8702484365ec33ef4da1c313e7777.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_somatic.filter.PRO-00089_OS_T.2ee8702484365ec33ef4da1c313e7777.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 mugqic/vt/0.57 mugqic/mugqic_tools/2.10.5 mugqic/python/3.9.1 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawStrelka2_somatic/results/variants/somatic.snvs.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawStrelka2_somatic/results/variants/somatic.indels.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | sed 's/Number=R/Number=./g' | grep -v 'GL00' | grep -Ev 'chrUn|random' | grep -v 'EBV' | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.vcf.gz && \
zless pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.vt.vcf.gz && \
	python3 $PYTHON_TOOLS/update_genotypes_strelka.py \
	    -i pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.vt.vcf.gz \
	    -o pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.gt.vcf.gz \
	    -n PRO-00089_BLOOD \
	    -t PRO-00089_OS_T && \
bcftools \
  view -f PASS -Oz \
   \
 -o pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.vt.vcf.gz \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.gt.vcf.gz
strelka2_paired_somatic.filter.PRO-00089_OS_T.2ee8702484365ec33ef4da1c313e7777.mugqic.done
chmod 755 $COMMAND
strelka2_paired_somatic_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_somatic_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_somatic_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_somatic_3_JOB_ID: strelka2_paired_somatic.call.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_somatic.call.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/strelka2_paired_somatic/strelka2_paired_somatic.call.PRO-00035_OS_T.e9c33b129d00f9816672714cbe7a3e51.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_somatic.call.PRO-00035_OS_T.e9c33b129d00f9816672714cbe7a3e51.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/2.7.18 mugqic/Strelka2/2.9.10 && \
rm -r -f pairedVariants/PRO-00035_OS_T/rawStrelka2_somatic && \
rm -f pairedVariants/PRO-00035_OS_T/rawStrelka2_somatic/runWorkflow.py && \
python $STRELKA2_HOME/bin/configureStrelkaSomaticWorkflow.py \
  --normalBam alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --tumorBam alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --referenceFasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
   \
  --callRegions $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.strelka2.bed.gz  \
  --runDir pairedVariants/PRO-00035_OS_T/rawStrelka2_somatic && \
python pairedVariants/PRO-00035_OS_T/rawStrelka2_somatic/runWorkflow.py \
  -m local  \
  -j 32 \
  -g 55 \
  --quiet
strelka2_paired_somatic.call.PRO-00035_OS_T.e9c33b129d00f9816672714cbe7a3e51.mugqic.done
chmod 755 $COMMAND
strelka2_paired_somatic_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_somatic_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_somatic_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_somatic_4_JOB_ID: strelka2_paired_somatic.filter.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_somatic.filter.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_somatic_3_JOB_ID
JOB_DONE=job_output/strelka2_paired_somatic/strelka2_paired_somatic.filter.PRO-00035_OS_T.4ef5dd097d66145fd9222b87d10e27f8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_somatic.filter.PRO-00035_OS_T.4ef5dd097d66145fd9222b87d10e27f8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 mugqic/vt/0.57 mugqic/mugqic_tools/2.10.5 mugqic/python/3.9.1 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawStrelka2_somatic/results/variants/somatic.snvs.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawStrelka2_somatic/results/variants/somatic.indels.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | sed 's/Number=R/Number=./g' | grep -v 'GL00' | grep -Ev 'chrUn|random' | grep -v 'EBV' | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.vcf.gz && \
zless pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.vt.vcf.gz && \
	python3 $PYTHON_TOOLS/update_genotypes_strelka.py \
	    -i pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.vt.vcf.gz \
	    -o pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.gt.vcf.gz \
	    -n PRO-00035_BLOOD \
	    -t PRO-00035_OS_T && \
bcftools \
  view -f PASS -Oz \
   \
 -o pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.vt.vcf.gz \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.gt.vcf.gz
strelka2_paired_somatic.filter.PRO-00035_OS_T.4ef5dd097d66145fd9222b87d10e27f8.mugqic.done
chmod 755 $COMMAND
strelka2_paired_somatic_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_somatic_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_somatic_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: strelka2_paired_germline
#-------------------------------------------------------------------------------
STEP=strelka2_paired_germline
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_1_JOB_ID: strelka2_paired_germline.call.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline.call.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline/strelka2_paired_germline.call.PRO-00089_OS_T.4495907003c3d101ad82a26497ddee7b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline.call.PRO-00089_OS_T.4495907003c3d101ad82a26497ddee7b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/2.7.18 mugqic/Strelka2/2.9.10 && \
rm -r -f pairedVariants/PRO-00089_OS_T/rawStrelka2_germline && \
rm -f pairedVariants/PRO-00089_OS_T/rawStrelka2_germline/runWorkflow.py && \
python $STRELKA2_HOME/bin/configureStrelkaGermlineWorkflow.py \
   \
  --bam alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --bam alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --referenceFasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
   \
  --callRegions $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.strelka2.bed.gz \
  --runDir pairedVariants/PRO-00089_OS_T/rawStrelka2_germline && \
python pairedVariants/PRO-00089_OS_T/rawStrelka2_germline/runWorkflow.py \
  -m local  \
  -j 32 \
  -g 55 \
  --quiet
strelka2_paired_germline.call.PRO-00089_OS_T.4495907003c3d101ad82a26497ddee7b.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_2_JOB_ID: strelka2_paired_germline.filter.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline.filter.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_1_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline/strelka2_paired_germline.filter.PRO-00089_OS_T.2bbc77c34b7fb2b04c7a5720cad22a94.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline.filter.PRO-00089_OS_T.2bbc77c34b7fb2b04c7a5720cad22a94.mugqic.done' > $COMMAND
module purge && \
module load mugqic/htslib/1.14 mugqic/vt/0.57 mugqic/bcftools/1.15 && \
zcat pairedVariants/PRO-00089_OS_T/rawStrelka2_germline/results/variants/variants.vcf.gz | sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | sed 's/Number=R/Number=./g' | grep -vE 'GL00|hs37d5' | grep -Ev 'chrUn|random' | grep -v 'EBV' | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.vcf.gz && \
zless pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.gt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.gt.vcf.gz && \
bcftools \
  view -f PASS -Oz -e 'GT[*]="RR"' \
   \
 -o pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.vt.vcf.gz \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.gt.vcf.gz
strelka2_paired_germline.filter.PRO-00089_OS_T.2bbc77c34b7fb2b04c7a5720cad22a94.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_3_JOB_ID: strelka2_paired_germline.call.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline.call.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline/strelka2_paired_germline.call.PRO-00035_OS_T.41d3395f18d9d568a2a43084f58a9595.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline.call.PRO-00035_OS_T.41d3395f18d9d568a2a43084f58a9595.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/2.7.18 mugqic/Strelka2/2.9.10 && \
rm -r -f pairedVariants/PRO-00035_OS_T/rawStrelka2_germline && \
rm -f pairedVariants/PRO-00035_OS_T/rawStrelka2_germline/runWorkflow.py && \
python $STRELKA2_HOME/bin/configureStrelkaGermlineWorkflow.py \
   \
  --bam alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --bam alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --referenceFasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
   \
  --callRegions $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.strelka2.bed.gz \
  --runDir pairedVariants/PRO-00035_OS_T/rawStrelka2_germline && \
python pairedVariants/PRO-00035_OS_T/rawStrelka2_germline/runWorkflow.py \
  -m local  \
  -j 32 \
  -g 55 \
  --quiet
strelka2_paired_germline.call.PRO-00035_OS_T.41d3395f18d9d568a2a43084f58a9595.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_4_JOB_ID: strelka2_paired_germline.filter.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline.filter.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_3_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline/strelka2_paired_germline.filter.PRO-00035_OS_T.1b9469a04068c1e04359e04494460414.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline.filter.PRO-00035_OS_T.1b9469a04068c1e04359e04494460414.mugqic.done' > $COMMAND
module purge && \
module load mugqic/htslib/1.14 mugqic/vt/0.57 mugqic/bcftools/1.15 && \
zcat pairedVariants/PRO-00035_OS_T/rawStrelka2_germline/results/variants/variants.vcf.gz | sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | sed 's/Number=R/Number=./g' | grep -vE 'GL00|hs37d5' | grep -Ev 'chrUn|random' | grep -v 'EBV' | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.vcf.gz && \
zless pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.gt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.gt.vcf.gz && \
bcftools \
  view -f PASS -Oz -e 'GT[*]="RR"' \
   \
 -o pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.vt.vcf.gz \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.gt.vcf.gz
strelka2_paired_germline.filter.PRO-00035_OS_T.1b9469a04068c1e04359e04494460414.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 55G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: strelka2_paired_germline_snpeff
#-------------------------------------------------------------------------------
STEP=strelka2_paired_germline_snpeff
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_snpeff_1_JOB_ID: strelka2_paired_germline_snpeff.split.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline_snpeff.split.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_2_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline_snpeff/strelka2_paired_germline_snpeff.split.PRO-00089_OS_T.62e2d87cad6d99dac47443e0a0aa4a8c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline_snpeff.split.PRO-00089_OS_T.62e2d87cad6d99dac47443e0a0aa4a8c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 && \
bcftools \
  +split -Oz -i'GT="alt"' \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.vt.vcf.gz \
  -o pairedVariants/PRO-00089_OS_T
strelka2_paired_germline_snpeff.split.PRO-00089_OS_T.62e2d87cad6d99dac47443e0a0aa4a8c.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_snpeff_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_snpeff_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_snpeff_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_snpeff_2_JOB_ID: strelka2_paired_germline_snpeff.normal.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline_snpeff.normal.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_snpeff_1_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline_snpeff/strelka2_paired_germline_snpeff.normal.PRO-00089_OS_T.1507f28c22f4e910e68ac9873aaf4c99.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline_snpeff.normal.PRO-00089_OS_T.1507f28c22f4e910e68ac9873aaf4c99.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/snpEff/4.3 mugqic/htslib/1.14 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:ParallelGCThreads=1 -Xmx12000M -jar $SNPEFF_HOME/snpEff.jar eff  \
   \
  -c $SNPEFF_HOME/snpEff.config \
  -i vcf \
  -o vcf \
  -csvStats pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.snpeff.vcf.stats.csv \
  -stats pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.snpeff.vcf.stats.html \
  hg19 \
  pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.vcf.gz \
  > pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.snpeff.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.snpeff.vcf > \
pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.snpeff.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_BLOOD.snpeff.vcf.gz
strelka2_paired_germline_snpeff.normal.PRO-00089_OS_T.1507f28c22f4e910e68ac9873aaf4c99.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_snpeff_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_snpeff_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_snpeff_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_snpeff_3_JOB_ID: strelka2_paired_germline_snpeff.tumor.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline_snpeff.tumor.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_snpeff_1_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline_snpeff/strelka2_paired_germline_snpeff.tumor.PRO-00089_OS_T.9faeee9dd038cf8400380796cab6e14f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline_snpeff.tumor.PRO-00089_OS_T.9faeee9dd038cf8400380796cab6e14f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/snpEff/4.3 mugqic/htslib/1.14 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:ParallelGCThreads=1 -Xmx12000M -jar $SNPEFF_HOME/snpEff.jar eff  \
   \
  -c $SNPEFF_HOME/snpEff.config \
  -i vcf \
  -o vcf \
  -csvStats pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.snpeff.vcf.stats.csv \
  -stats pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.snpeff.vcf.stats.html \
  hg19 \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vcf.gz \
  > pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.snpeff.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.snpeff.vcf > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.snpeff.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.snpeff.vcf.gz
strelka2_paired_germline_snpeff.tumor.PRO-00089_OS_T.9faeee9dd038cf8400380796cab6e14f.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_snpeff_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_snpeff_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_snpeff_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_snpeff_4_JOB_ID: strelka2_paired_germline_snpeff.split.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline_snpeff.split.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_4_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline_snpeff/strelka2_paired_germline_snpeff.split.PRO-00035_OS_T.d5fd547e9c88a1d6328c899f4ef3d894.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline_snpeff.split.PRO-00035_OS_T.d5fd547e9c88a1d6328c899f4ef3d894.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 && \
bcftools \
  +split -Oz -i'GT="alt"' \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.vt.vcf.gz \
  -o pairedVariants/PRO-00035_OS_T
strelka2_paired_germline_snpeff.split.PRO-00035_OS_T.d5fd547e9c88a1d6328c899f4ef3d894.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_snpeff_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_snpeff_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_snpeff_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_snpeff_5_JOB_ID: strelka2_paired_germline_snpeff.normal.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline_snpeff.normal.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_snpeff_4_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline_snpeff/strelka2_paired_germline_snpeff.normal.PRO-00035_OS_T.2c4142f24bdb2d602e2096a143a88fdd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline_snpeff.normal.PRO-00035_OS_T.2c4142f24bdb2d602e2096a143a88fdd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/snpEff/4.3 mugqic/htslib/1.14 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:ParallelGCThreads=1 -Xmx12000M -jar $SNPEFF_HOME/snpEff.jar eff  \
   \
  -c $SNPEFF_HOME/snpEff.config \
  -i vcf \
  -o vcf \
  -csvStats pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.snpeff.vcf.stats.csv \
  -stats pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.snpeff.vcf.stats.html \
  hg19 \
  pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.vcf.gz \
  > pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.snpeff.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.snpeff.vcf > \
pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.snpeff.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_BLOOD.snpeff.vcf.gz
strelka2_paired_germline_snpeff.normal.PRO-00035_OS_T.2c4142f24bdb2d602e2096a143a88fdd.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_snpeff_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_snpeff_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_snpeff_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: strelka2_paired_germline_snpeff_6_JOB_ID: strelka2_paired_germline_snpeff.tumor.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=strelka2_paired_germline_snpeff.tumor.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_snpeff_4_JOB_ID
JOB_DONE=job_output/strelka2_paired_germline_snpeff/strelka2_paired_germline_snpeff.tumor.PRO-00035_OS_T.3d358aa63ea5024c7c270a5978da36c6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'strelka2_paired_germline_snpeff.tumor.PRO-00035_OS_T.3d358aa63ea5024c7c270a5978da36c6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/snpEff/4.3 mugqic/htslib/1.14 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:ParallelGCThreads=1 -Xmx12000M -jar $SNPEFF_HOME/snpEff.jar eff  \
   \
  -c $SNPEFF_HOME/snpEff.config \
  -i vcf \
  -o vcf \
  -csvStats pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.snpeff.vcf.stats.csv \
  -stats pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.snpeff.vcf.stats.html \
  hg19 \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vcf.gz \
  > pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.snpeff.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.snpeff.vcf > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.snpeff.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.snpeff.vcf.gz
strelka2_paired_germline_snpeff.tumor.PRO-00035_OS_T.3d358aa63ea5024c7c270a5978da36c6.mugqic.done
chmod 755 $COMMAND
strelka2_paired_germline_snpeff_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$strelka2_paired_germline_snpeff_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$strelka2_paired_germline_snpeff_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: purple
#-------------------------------------------------------------------------------
STEP=purple
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: purple_1_JOB_ID: purple.convert_strelka2.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.convert_strelka2.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_somatic_2_JOB_ID
JOB_DONE=job_output/purple/purple.convert_strelka2.PRO-00089_OS_T.2caedcbf840ce59da38efc2838fdc3d9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.convert_strelka2.PRO-00089_OS_T.2caedcbf840ce59da38efc2838fdc3d9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/purple/2.53 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16G -cp $PURPLE_JAR com.hartwig.hmftools.purple.tools.AnnotateStrelkaWithAllelicDepth \
  -in pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.vt.vcf.gz \
  -out pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.purple.vcf.gz
purple.convert_strelka2.PRO-00089_OS_T.2caedcbf840ce59da38efc2838fdc3d9.mugqic.done
chmod 755 $COMMAND
purple_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_2_JOB_ID: purple.amber.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.amber.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/purple/purple.amber.PRO-00089_OS_T.a002ab40cbe9ecc1b5d2b964a1238d5a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.amber.PRO-00089_OS_T.a002ab40cbe9ecc1b5d2b964a1238d5a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/amber/3.5 && \
mkdir -p pairedVariants/PRO-00089_OS_T/purple/rawAmber && \
touch pairedVariants/PRO-00089_OS_T/purple/rawAmber && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16000M -jar $AMBER_JAR \
  -threads 8 \
  -reference PRO-00089_BLOOD \
  -reference_bam alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  -tumor PRO-00089_OS_T \
  -tumor_bam alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  -loci $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.GermlineHetPon.vcf.gz \
  -output_dir pairedVariants/PRO-00089_OS_T/purple/rawAmber
purple.amber.PRO-00089_OS_T.a002ab40cbe9ecc1b5d2b964a1238d5a.mugqic.done
chmod 755 $COMMAND
purple_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_3_JOB_ID: purple.cobalt.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.cobalt.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/purple/purple.cobalt.PRO-00089_OS_T.971448b34036724a11e0732280632143.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.cobalt.PRO-00089_OS_T.971448b34036724a11e0732280632143.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/cobalt/1.11 && \
mkdir -p pairedVariants/PRO-00089_OS_T/purple/rawCobalt && \
touch pairedVariants/PRO-00089_OS_T/purple/rawCobalt && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16000M -jar $COBALT_JAR \
  -threads 8 \
  -reference PRO-00089_BLOOD \
  -reference_bam alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  -tumor PRO-00089_OS_T \
  -tumor_bam alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  -gc_profile $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.GC_profile.1000bp.cnp \
  -output_dir pairedVariants/PRO-00089_OS_T/purple/rawCobalt
purple.cobalt.PRO-00089_OS_T.971448b34036724a11e0732280632143.mugqic.done
chmod 755 $COMMAND
purple_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_4_JOB_ID: purple.purity.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.purity.PRO-00089_OS_T
JOB_DEPENDENCIES=$purple_1_JOB_ID:$purple_2_JOB_ID:$purple_3_JOB_ID
JOB_DONE=job_output/purple/purple.purity.PRO-00089_OS_T.e2899717db07124574c7b05399825087.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.purity.PRO-00089_OS_T.e2899717db07124574c7b05399825087.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/perl/5.34.0 mugqic/circos/0.69-6 mugqic/cobalt/1.11 mugqic/purple/2.53 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16G -jar $PURPLE_JAR \
  -ref_genome /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -reference PRO-00089_BLOOD \
  -tumor PRO-00089_OS_T \
  -cobalt pairedVariants/PRO-00089_OS_T/purple/rawCobalt \
  -amber pairedVariants/PRO-00089_OS_T/purple/rawAmber \
  -gc_profile $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.GC_profile.1000bp.cnp \
  -circos circos \
  -somatic_vcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.purple.vcf.gz \
  -output_dir pairedVariants/PRO-00089_OS_T/purple
purple.purity.PRO-00089_OS_T.e2899717db07124574c7b05399825087.mugqic.done
chmod 755 $COMMAND
purple_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_5_JOB_ID: purple.convert_strelka2.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.convert_strelka2.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_somatic_4_JOB_ID
JOB_DONE=job_output/purple/purple.convert_strelka2.PRO-00035_OS_T.56238248a045820bfacab2f4dc0354f2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.convert_strelka2.PRO-00035_OS_T.56238248a045820bfacab2f4dc0354f2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/purple/2.53 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16G -cp $PURPLE_JAR com.hartwig.hmftools.purple.tools.AnnotateStrelkaWithAllelicDepth \
  -in pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.vt.vcf.gz \
  -out pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.purple.vcf.gz
purple.convert_strelka2.PRO-00035_OS_T.56238248a045820bfacab2f4dc0354f2.mugqic.done
chmod 755 $COMMAND
purple_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_6_JOB_ID: purple.amber.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.amber.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/purple/purple.amber.PRO-00035_OS_T.60bebb4c854affdbd5ced59f894246ce.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.amber.PRO-00035_OS_T.60bebb4c854affdbd5ced59f894246ce.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/amber/3.5 && \
mkdir -p pairedVariants/PRO-00035_OS_T/purple/rawAmber && \
touch pairedVariants/PRO-00035_OS_T/purple/rawAmber && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16000M -jar $AMBER_JAR \
  -threads 8 \
  -reference PRO-00035_BLOOD \
  -reference_bam alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  -tumor PRO-00035_OS_T \
  -tumor_bam alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  -loci $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.GermlineHetPon.vcf.gz \
  -output_dir pairedVariants/PRO-00035_OS_T/purple/rawAmber
purple.amber.PRO-00035_OS_T.60bebb4c854affdbd5ced59f894246ce.mugqic.done
chmod 755 $COMMAND
purple_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_7_JOB_ID: purple.cobalt.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.cobalt.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/purple/purple.cobalt.PRO-00035_OS_T.4fec46c635dd5bd68f1dfd60bf6db184.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.cobalt.PRO-00035_OS_T.4fec46c635dd5bd68f1dfd60bf6db184.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/cobalt/1.11 && \
mkdir -p pairedVariants/PRO-00035_OS_T/purple/rawCobalt && \
touch pairedVariants/PRO-00035_OS_T/purple/rawCobalt && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16000M -jar $COBALT_JAR \
  -threads 8 \
  -reference PRO-00035_BLOOD \
  -reference_bam alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  -tumor PRO-00035_OS_T \
  -tumor_bam alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  -gc_profile $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.GC_profile.1000bp.cnp \
  -output_dir pairedVariants/PRO-00035_OS_T/purple/rawCobalt
purple.cobalt.PRO-00035_OS_T.4fec46c635dd5bd68f1dfd60bf6db184.mugqic.done
chmod 755 $COMMAND
purple_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: purple_8_JOB_ID: purple.purity.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=purple.purity.PRO-00035_OS_T
JOB_DEPENDENCIES=$purple_5_JOB_ID:$purple_6_JOB_ID:$purple_7_JOB_ID
JOB_DONE=job_output/purple/purple.purity.PRO-00035_OS_T.128ee2fbc1a3d5ac64e6d9deca1d613e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'purple.purity.PRO-00035_OS_T.128ee2fbc1a3d5ac64e6d9deca1d613e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/perl/5.34.0 mugqic/circos/0.69-6 mugqic/cobalt/1.11 mugqic/purple/2.53 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx16G -jar $PURPLE_JAR \
  -ref_genome /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -reference PRO-00035_BLOOD \
  -tumor PRO-00035_OS_T \
  -cobalt pairedVariants/PRO-00035_OS_T/purple/rawCobalt \
  -amber pairedVariants/PRO-00035_OS_T/purple/rawAmber \
  -gc_profile $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.GC_profile.1000bp.cnp \
  -circos circos \
  -somatic_vcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.purple.vcf.gz \
  -output_dir pairedVariants/PRO-00035_OS_T/purple
purple.purity.PRO-00035_OS_T.128ee2fbc1a3d5ac64e6d9deca1d613e.mugqic.done
chmod 755 $COMMAND
purple_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 17G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$purple_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$purple_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: rawmpileup
#-------------------------------------------------------------------------------
STEP=rawmpileup
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: rawmpileup_1_JOB_ID: rawmpileup.PRO-00089_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.1
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.1.d5859b54c3157e57382d753736db28ff.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.1.d5859b54c3157e57382d753736db28ff.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 1 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.mpileup
rawmpileup.PRO-00089_OS_T.1.d5859b54c3157e57382d753736db28ff.mugqic.done
chmod 755 $COMMAND
rawmpileup_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_2_JOB_ID: rawmpileup.PRO-00089_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.2
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.2.09575c135304f476607df5be60da28dd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.2.09575c135304f476607df5be60da28dd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 2 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.mpileup
rawmpileup.PRO-00089_OS_T.2.09575c135304f476607df5be60da28dd.mugqic.done
chmod 755 $COMMAND
rawmpileup_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_3_JOB_ID: rawmpileup.PRO-00089_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.3
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.3.857d0d024aaacefb31886c66af81f579.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.3.857d0d024aaacefb31886c66af81f579.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 3 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.mpileup
rawmpileup.PRO-00089_OS_T.3.857d0d024aaacefb31886c66af81f579.mugqic.done
chmod 755 $COMMAND
rawmpileup_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_4_JOB_ID: rawmpileup.PRO-00089_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.4
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.4.db943ec650048e3f805f1af889c6107a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.4.db943ec650048e3f805f1af889c6107a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 4 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.mpileup
rawmpileup.PRO-00089_OS_T.4.db943ec650048e3f805f1af889c6107a.mugqic.done
chmod 755 $COMMAND
rawmpileup_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_5_JOB_ID: rawmpileup.PRO-00089_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.5
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.5.3855e25cff3fcc8b6e3e121c47f17128.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.5.3855e25cff3fcc8b6e3e121c47f17128.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 5 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.mpileup
rawmpileup.PRO-00089_OS_T.5.3855e25cff3fcc8b6e3e121c47f17128.mugqic.done
chmod 755 $COMMAND
rawmpileup_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_6_JOB_ID: rawmpileup.PRO-00089_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.6
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.6.62abe97a269a90768b3e3e67052aa1b4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.6.62abe97a269a90768b3e3e67052aa1b4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 6 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.mpileup
rawmpileup.PRO-00089_OS_T.6.62abe97a269a90768b3e3e67052aa1b4.mugqic.done
chmod 755 $COMMAND
rawmpileup_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_7_JOB_ID: rawmpileup.PRO-00089_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.7
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.7.d674d64d4cd94f5dd7988d9c6b49ab04.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.7.d674d64d4cd94f5dd7988d9c6b49ab04.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 7 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.mpileup
rawmpileup.PRO-00089_OS_T.7.d674d64d4cd94f5dd7988d9c6b49ab04.mugqic.done
chmod 755 $COMMAND
rawmpileup_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_8_JOB_ID: rawmpileup.PRO-00089_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.8
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.8.2c3cd43293eaa99ac29616db05d6dba0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.8.2c3cd43293eaa99ac29616db05d6dba0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 8 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.mpileup
rawmpileup.PRO-00089_OS_T.8.2c3cd43293eaa99ac29616db05d6dba0.mugqic.done
chmod 755 $COMMAND
rawmpileup_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_9_JOB_ID: rawmpileup.PRO-00089_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.9
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.9.5a52c3d8b0b37597511c8ad3ad7063bd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.9.5a52c3d8b0b37597511c8ad3ad7063bd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 9 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.mpileup
rawmpileup.PRO-00089_OS_T.9.5a52c3d8b0b37597511c8ad3ad7063bd.mugqic.done
chmod 755 $COMMAND
rawmpileup_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_10_JOB_ID: rawmpileup.PRO-00089_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.10
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.10.c852f0dd7ef138e5b1b93f013e4c1365.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.10.c852f0dd7ef138e5b1b93f013e4c1365.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 10 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.mpileup
rawmpileup.PRO-00089_OS_T.10.c852f0dd7ef138e5b1b93f013e4c1365.mugqic.done
chmod 755 $COMMAND
rawmpileup_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_11_JOB_ID: rawmpileup.PRO-00089_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.11
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.11.ef9994ff2f04ebbfef278c062fe40e5e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.11.ef9994ff2f04ebbfef278c062fe40e5e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 11 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.mpileup
rawmpileup.PRO-00089_OS_T.11.ef9994ff2f04ebbfef278c062fe40e5e.mugqic.done
chmod 755 $COMMAND
rawmpileup_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_12_JOB_ID: rawmpileup.PRO-00089_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.12
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.12.c3f6a5d717a2e38c2ee91fb37c35ff33.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.12.c3f6a5d717a2e38c2ee91fb37c35ff33.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 12 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.mpileup
rawmpileup.PRO-00089_OS_T.12.c3f6a5d717a2e38c2ee91fb37c35ff33.mugqic.done
chmod 755 $COMMAND
rawmpileup_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_13_JOB_ID: rawmpileup.PRO-00089_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.13
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.13.6c403302c552b5f6f23c6e5646fa6fbe.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.13.6c403302c552b5f6f23c6e5646fa6fbe.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 13 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.mpileup
rawmpileup.PRO-00089_OS_T.13.6c403302c552b5f6f23c6e5646fa6fbe.mugqic.done
chmod 755 $COMMAND
rawmpileup_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_14_JOB_ID: rawmpileup.PRO-00089_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.14
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.14.327f3f85aa7913e9e5576315b1fdc724.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.14.327f3f85aa7913e9e5576315b1fdc724.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 14 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.mpileup
rawmpileup.PRO-00089_OS_T.14.327f3f85aa7913e9e5576315b1fdc724.mugqic.done
chmod 755 $COMMAND
rawmpileup_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_15_JOB_ID: rawmpileup.PRO-00089_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.15
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.15.a3b910bbe0232449998d86bbf81d4661.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.15.a3b910bbe0232449998d86bbf81d4661.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 15 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.mpileup
rawmpileup.PRO-00089_OS_T.15.a3b910bbe0232449998d86bbf81d4661.mugqic.done
chmod 755 $COMMAND
rawmpileup_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_16_JOB_ID: rawmpileup.PRO-00089_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.16
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.16.4da7db218eeeca02236b8dff0f43afde.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.16.4da7db218eeeca02236b8dff0f43afde.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 16 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.mpileup
rawmpileup.PRO-00089_OS_T.16.4da7db218eeeca02236b8dff0f43afde.mugqic.done
chmod 755 $COMMAND
rawmpileup_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_17_JOB_ID: rawmpileup.PRO-00089_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.17
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.17.85c94ab1d9b393f03263902563803ad5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.17.85c94ab1d9b393f03263902563803ad5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 17 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.mpileup
rawmpileup.PRO-00089_OS_T.17.85c94ab1d9b393f03263902563803ad5.mugqic.done
chmod 755 $COMMAND
rawmpileup_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_18_JOB_ID: rawmpileup.PRO-00089_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.18
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.18.f3b2d33d4bb0f1cc9affd58e9d20828b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.18.f3b2d33d4bb0f1cc9affd58e9d20828b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 18 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.mpileup
rawmpileup.PRO-00089_OS_T.18.f3b2d33d4bb0f1cc9affd58e9d20828b.mugqic.done
chmod 755 $COMMAND
rawmpileup_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_19_JOB_ID: rawmpileup.PRO-00089_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.19
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.19.ac671c614c2a3f3102198ce6e21c5045.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.19.ac671c614c2a3f3102198ce6e21c5045.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 19 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.mpileup
rawmpileup.PRO-00089_OS_T.19.ac671c614c2a3f3102198ce6e21c5045.mugqic.done
chmod 755 $COMMAND
rawmpileup_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_20_JOB_ID: rawmpileup.PRO-00089_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.20
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.20.36a843b56b01dec024a233da502426b9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.20.36a843b56b01dec024a233da502426b9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 20 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.mpileup
rawmpileup.PRO-00089_OS_T.20.36a843b56b01dec024a233da502426b9.mugqic.done
chmod 755 $COMMAND
rawmpileup_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_21_JOB_ID: rawmpileup.PRO-00089_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.21
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.21.0f7701c0f34cf204c08449a0ad9dbf4b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.21.0f7701c0f34cf204c08449a0ad9dbf4b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 21 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.mpileup
rawmpileup.PRO-00089_OS_T.21.0f7701c0f34cf204c08449a0ad9dbf4b.mugqic.done
chmod 755 $COMMAND
rawmpileup_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_22_JOB_ID: rawmpileup.PRO-00089_OS_T.22
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.22
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.22.c932519a995a1ffead90179fb1c8e1ea.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.22.c932519a995a1ffead90179fb1c8e1ea.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 22 \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.mpileup
rawmpileup.PRO-00089_OS_T.22.c932519a995a1ffead90179fb1c8e1ea.mugqic.done
chmod 755 $COMMAND
rawmpileup_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_23_JOB_ID: rawmpileup.PRO-00089_OS_T.X
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.X
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.X.386520b9ae3c01e617132649385e797f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.X.386520b9ae3c01e617132649385e797f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r X \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.mpileup
rawmpileup.PRO-00089_OS_T.X.386520b9ae3c01e617132649385e797f.mugqic.done
chmod 755 $COMMAND
rawmpileup_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_24_JOB_ID: rawmpileup.PRO-00089_OS_T.Y
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.Y
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.Y.4b17d2b7254ea578df04e55f4126bf88.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.Y.4b17d2b7254ea578df04e55f4126bf88.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r Y \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.mpileup
rawmpileup.PRO-00089_OS_T.Y.4b17d2b7254ea578df04e55f4126bf88.mugqic.done
chmod 755 $COMMAND
rawmpileup_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_25_JOB_ID: rawmpileup.PRO-00089_OS_T.MT
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00089_OS_T.MT
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00089_OS_T.MT.512126908896606e2674915a8b1d9d9d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00089_OS_T.MT.512126908896606e2674915a8b1d9d9d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r MT \
   \
  alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.mpileup
rawmpileup.PRO-00089_OS_T.MT.512126908896606e2674915a8b1d9d9d.mugqic.done
chmod 755 $COMMAND
rawmpileup_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_26_JOB_ID: rawmpileup.PRO-00035_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.1
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.1.75b44a3901c1f23d8cffabc2509c57b6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.1.75b44a3901c1f23d8cffabc2509c57b6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 1 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.mpileup
rawmpileup.PRO-00035_OS_T.1.75b44a3901c1f23d8cffabc2509c57b6.mugqic.done
chmod 755 $COMMAND
rawmpileup_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_27_JOB_ID: rawmpileup.PRO-00035_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.2
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.2.0d1faadd46f13a0d72299324c3913ff7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.2.0d1faadd46f13a0d72299324c3913ff7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 2 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.mpileup
rawmpileup.PRO-00035_OS_T.2.0d1faadd46f13a0d72299324c3913ff7.mugqic.done
chmod 755 $COMMAND
rawmpileup_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_28_JOB_ID: rawmpileup.PRO-00035_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.3
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.3.e01eac59119d515bbd76d9c9fa339cc3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.3.e01eac59119d515bbd76d9c9fa339cc3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 3 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.mpileup
rawmpileup.PRO-00035_OS_T.3.e01eac59119d515bbd76d9c9fa339cc3.mugqic.done
chmod 755 $COMMAND
rawmpileup_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_29_JOB_ID: rawmpileup.PRO-00035_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.4
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.4.ce1053bd2660076de8e730c212e1dacf.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.4.ce1053bd2660076de8e730c212e1dacf.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 4 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.mpileup
rawmpileup.PRO-00035_OS_T.4.ce1053bd2660076de8e730c212e1dacf.mugqic.done
chmod 755 $COMMAND
rawmpileup_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_30_JOB_ID: rawmpileup.PRO-00035_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.5
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.5.a31c8bf66486f33088172788d52ea7c8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.5.a31c8bf66486f33088172788d52ea7c8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 5 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.mpileup
rawmpileup.PRO-00035_OS_T.5.a31c8bf66486f33088172788d52ea7c8.mugqic.done
chmod 755 $COMMAND
rawmpileup_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_31_JOB_ID: rawmpileup.PRO-00035_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.6
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.6.ac2728a77310b76a762c61c5f47f7726.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.6.ac2728a77310b76a762c61c5f47f7726.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 6 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.mpileup
rawmpileup.PRO-00035_OS_T.6.ac2728a77310b76a762c61c5f47f7726.mugqic.done
chmod 755 $COMMAND
rawmpileup_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_32_JOB_ID: rawmpileup.PRO-00035_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.7
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.7.aa356354969d450eca70b2cc0764c55e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.7.aa356354969d450eca70b2cc0764c55e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 7 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.mpileup
rawmpileup.PRO-00035_OS_T.7.aa356354969d450eca70b2cc0764c55e.mugqic.done
chmod 755 $COMMAND
rawmpileup_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_33_JOB_ID: rawmpileup.PRO-00035_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.8
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.8.461566ac986e326248b309ddda593030.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.8.461566ac986e326248b309ddda593030.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 8 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.mpileup
rawmpileup.PRO-00035_OS_T.8.461566ac986e326248b309ddda593030.mugqic.done
chmod 755 $COMMAND
rawmpileup_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_34_JOB_ID: rawmpileup.PRO-00035_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.9
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.9.7c16e3a1d89756ed097718a646c53777.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.9.7c16e3a1d89756ed097718a646c53777.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 9 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.mpileup
rawmpileup.PRO-00035_OS_T.9.7c16e3a1d89756ed097718a646c53777.mugqic.done
chmod 755 $COMMAND
rawmpileup_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_35_JOB_ID: rawmpileup.PRO-00035_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.10
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.10.5fb3b299c467469378ab023605240082.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.10.5fb3b299c467469378ab023605240082.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 10 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.mpileup
rawmpileup.PRO-00035_OS_T.10.5fb3b299c467469378ab023605240082.mugqic.done
chmod 755 $COMMAND
rawmpileup_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_36_JOB_ID: rawmpileup.PRO-00035_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.11
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.11.91b288b0687aa93c753332bdb1f51fc6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.11.91b288b0687aa93c753332bdb1f51fc6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 11 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.mpileup
rawmpileup.PRO-00035_OS_T.11.91b288b0687aa93c753332bdb1f51fc6.mugqic.done
chmod 755 $COMMAND
rawmpileup_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_37_JOB_ID: rawmpileup.PRO-00035_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.12
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.12.f851794ac71a9c62af056b354fdd6736.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.12.f851794ac71a9c62af056b354fdd6736.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 12 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.mpileup
rawmpileup.PRO-00035_OS_T.12.f851794ac71a9c62af056b354fdd6736.mugqic.done
chmod 755 $COMMAND
rawmpileup_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_38_JOB_ID: rawmpileup.PRO-00035_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.13
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.13.c36b64038451ec6604a730b161ebf96d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.13.c36b64038451ec6604a730b161ebf96d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 13 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.mpileup
rawmpileup.PRO-00035_OS_T.13.c36b64038451ec6604a730b161ebf96d.mugqic.done
chmod 755 $COMMAND
rawmpileup_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_39_JOB_ID: rawmpileup.PRO-00035_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.14
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.14.4cf5c804f681a3161203a23fc4e9c345.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.14.4cf5c804f681a3161203a23fc4e9c345.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 14 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.mpileup
rawmpileup.PRO-00035_OS_T.14.4cf5c804f681a3161203a23fc4e9c345.mugqic.done
chmod 755 $COMMAND
rawmpileup_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_40_JOB_ID: rawmpileup.PRO-00035_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.15
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.15.6925e1e2b49d2a0272120902fc6d6193.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.15.6925e1e2b49d2a0272120902fc6d6193.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 15 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.mpileup
rawmpileup.PRO-00035_OS_T.15.6925e1e2b49d2a0272120902fc6d6193.mugqic.done
chmod 755 $COMMAND
rawmpileup_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_41_JOB_ID: rawmpileup.PRO-00035_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.16
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.16.762d664b2fc312c0d7cfc24cf4c21d38.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.16.762d664b2fc312c0d7cfc24cf4c21d38.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 16 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.mpileup
rawmpileup.PRO-00035_OS_T.16.762d664b2fc312c0d7cfc24cf4c21d38.mugqic.done
chmod 755 $COMMAND
rawmpileup_41_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_41_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_41_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_42_JOB_ID: rawmpileup.PRO-00035_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.17
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.17.6bad0a02efc634dcc4700cf48e5a4533.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.17.6bad0a02efc634dcc4700cf48e5a4533.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 17 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.mpileup
rawmpileup.PRO-00035_OS_T.17.6bad0a02efc634dcc4700cf48e5a4533.mugqic.done
chmod 755 $COMMAND
rawmpileup_42_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_42_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_42_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_43_JOB_ID: rawmpileup.PRO-00035_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.18
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.18.d827f5ec03f66d1b94198bbc7505217e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.18.d827f5ec03f66d1b94198bbc7505217e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 18 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.mpileup
rawmpileup.PRO-00035_OS_T.18.d827f5ec03f66d1b94198bbc7505217e.mugqic.done
chmod 755 $COMMAND
rawmpileup_43_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_43_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_43_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_44_JOB_ID: rawmpileup.PRO-00035_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.19
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.19.24f1fe3bb1a164a380a501c16625ca95.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.19.24f1fe3bb1a164a380a501c16625ca95.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 19 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.mpileup
rawmpileup.PRO-00035_OS_T.19.24f1fe3bb1a164a380a501c16625ca95.mugqic.done
chmod 755 $COMMAND
rawmpileup_44_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_44_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_44_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_45_JOB_ID: rawmpileup.PRO-00035_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.20
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.20.f9c7d327ebc5e738fb227d904a09eac6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.20.f9c7d327ebc5e738fb227d904a09eac6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 20 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.mpileup
rawmpileup.PRO-00035_OS_T.20.f9c7d327ebc5e738fb227d904a09eac6.mugqic.done
chmod 755 $COMMAND
rawmpileup_45_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_45_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_45_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_46_JOB_ID: rawmpileup.PRO-00035_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.21
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.21.91a9d06c4ecb5542cc44c0ff6a0c89f3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.21.91a9d06c4ecb5542cc44c0ff6a0c89f3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 21 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.mpileup
rawmpileup.PRO-00035_OS_T.21.91a9d06c4ecb5542cc44c0ff6a0c89f3.mugqic.done
chmod 755 $COMMAND
rawmpileup_46_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_46_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_46_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_47_JOB_ID: rawmpileup.PRO-00035_OS_T.22
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.22
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.22.817858ab94b119eb9e6e9b4274ef42d6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.22.817858ab94b119eb9e6e9b4274ef42d6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r 22 \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.mpileup
rawmpileup.PRO-00035_OS_T.22.817858ab94b119eb9e6e9b4274ef42d6.mugqic.done
chmod 755 $COMMAND
rawmpileup_47_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_47_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_47_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_48_JOB_ID: rawmpileup.PRO-00035_OS_T.X
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.X
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.X.1f244611b93d5aeb2ea77bcb7b35a0cb.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.X.1f244611b93d5aeb2ea77bcb7b35a0cb.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r X \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.mpileup
rawmpileup.PRO-00035_OS_T.X.1f244611b93d5aeb2ea77bcb7b35a0cb.mugqic.done
chmod 755 $COMMAND
rawmpileup_48_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_48_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_48_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_49_JOB_ID: rawmpileup.PRO-00035_OS_T.Y
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.Y
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.Y.2d62275cc8579b026c3a431d07741142.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.Y.2d62275cc8579b026c3a431d07741142.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r Y \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.mpileup
rawmpileup.PRO-00035_OS_T.Y.2d62275cc8579b026c3a431d07741142.mugqic.done
chmod 755 $COMMAND
rawmpileup_49_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_49_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_49_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: rawmpileup_50_JOB_ID: rawmpileup.PRO-00035_OS_T.MT
#-------------------------------------------------------------------------------
JOB_NAME=rawmpileup.PRO-00035_OS_T.MT
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/rawmpileup/rawmpileup.PRO-00035_OS_T.MT.c127b8ce87ac24987a42d96266f9f22e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'rawmpileup.PRO-00035_OS_T.MT.c127b8ce87ac24987a42d96266f9f22e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/samtools/1.12 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
samtools mpileup -d 1000 -L 1000 -B -q 11 -Q 10 \
  -f /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -r MT \
   \
  alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.mpileup
rawmpileup.PRO-00035_OS_T.MT.c127b8ce87ac24987a42d96266f9f22e.mugqic.done
chmod 755 $COMMAND
rawmpileup_50_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 8G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$rawmpileup_50_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$rawmpileup_50_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: paired_varscan2
#-------------------------------------------------------------------------------
STEP=paired_varscan2
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_1_JOB_ID: varscan2_somatic.PRO-00089_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.1
JOB_DEPENDENCIES=$rawmpileup_1_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.1.2e0bc73559f2a19b05a3f4c1098af4d6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.1.2e0bc73559f2a19b05a3f4c1098af4d6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.1.2e0bc73559f2a19b05a3f4c1098af4d6.mugqic.done
chmod 755 $COMMAND
paired_varscan2_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_2_JOB_ID: varscan2_somatic.PRO-00089_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.2
JOB_DEPENDENCIES=$rawmpileup_2_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.2.1b64a4ebe49081026457809a26eaaf71.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.2.1b64a4ebe49081026457809a26eaaf71.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.2.1b64a4ebe49081026457809a26eaaf71.mugqic.done
chmod 755 $COMMAND
paired_varscan2_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_3_JOB_ID: varscan2_somatic.PRO-00089_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.3
JOB_DEPENDENCIES=$rawmpileup_3_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.3.d7b2616d11b9871c3e9abd228a644936.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.3.d7b2616d11b9871c3e9abd228a644936.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.3.d7b2616d11b9871c3e9abd228a644936.mugqic.done
chmod 755 $COMMAND
paired_varscan2_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_4_JOB_ID: varscan2_somatic.PRO-00089_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.4
JOB_DEPENDENCIES=$rawmpileup_4_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.4.f1622396c3f7d6ff1525fb227291f66d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.4.f1622396c3f7d6ff1525fb227291f66d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.4.f1622396c3f7d6ff1525fb227291f66d.mugqic.done
chmod 755 $COMMAND
paired_varscan2_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_5_JOB_ID: varscan2_somatic.PRO-00089_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.5
JOB_DEPENDENCIES=$rawmpileup_5_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.5.2427f6686612a0df4ee04855bca6e5a1.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.5.2427f6686612a0df4ee04855bca6e5a1.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.5.2427f6686612a0df4ee04855bca6e5a1.mugqic.done
chmod 755 $COMMAND
paired_varscan2_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_6_JOB_ID: varscan2_somatic.PRO-00089_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.6
JOB_DEPENDENCIES=$rawmpileup_6_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.6.0cd2c793bb281fdaced9e99dcc5deb88.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.6.0cd2c793bb281fdaced9e99dcc5deb88.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.6.0cd2c793bb281fdaced9e99dcc5deb88.mugqic.done
chmod 755 $COMMAND
paired_varscan2_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_7_JOB_ID: varscan2_somatic.PRO-00089_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.7
JOB_DEPENDENCIES=$rawmpileup_7_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.7.57890ae1c3bc2829e9128947393b6fc4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.7.57890ae1c3bc2829e9128947393b6fc4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.7.57890ae1c3bc2829e9128947393b6fc4.mugqic.done
chmod 755 $COMMAND
paired_varscan2_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_8_JOB_ID: varscan2_somatic.PRO-00089_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.8
JOB_DEPENDENCIES=$rawmpileup_8_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.8.ecb9f2566fa3dbfaa4dd18b50d9c4c8f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.8.ecb9f2566fa3dbfaa4dd18b50d9c4c8f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.8.ecb9f2566fa3dbfaa4dd18b50d9c4c8f.mugqic.done
chmod 755 $COMMAND
paired_varscan2_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_9_JOB_ID: varscan2_somatic.PRO-00089_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.9
JOB_DEPENDENCIES=$rawmpileup_9_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.9.8d85e9ae7ffd31569020042b7183ed7a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.9.8d85e9ae7ffd31569020042b7183ed7a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.9.8d85e9ae7ffd31569020042b7183ed7a.mugqic.done
chmod 755 $COMMAND
paired_varscan2_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_10_JOB_ID: varscan2_somatic.PRO-00089_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.10
JOB_DEPENDENCIES=$rawmpileup_10_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.10.8a8e428eb3353fa3e9230e1ab6480c38.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.10.8a8e428eb3353fa3e9230e1ab6480c38.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.10.8a8e428eb3353fa3e9230e1ab6480c38.mugqic.done
chmod 755 $COMMAND
paired_varscan2_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_11_JOB_ID: varscan2_somatic.PRO-00089_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.11
JOB_DEPENDENCIES=$rawmpileup_11_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.11.0984dd5c158592785d0aeadc694e59d2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.11.0984dd5c158592785d0aeadc694e59d2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.11.0984dd5c158592785d0aeadc694e59d2.mugqic.done
chmod 755 $COMMAND
paired_varscan2_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_12_JOB_ID: varscan2_somatic.PRO-00089_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.12
JOB_DEPENDENCIES=$rawmpileup_12_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.12.a5df732c644e18f95537058c38cfe93b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.12.a5df732c644e18f95537058c38cfe93b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.12.a5df732c644e18f95537058c38cfe93b.mugqic.done
chmod 755 $COMMAND
paired_varscan2_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_13_JOB_ID: varscan2_somatic.PRO-00089_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.13
JOB_DEPENDENCIES=$rawmpileup_13_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.13.ba4f4d436094160469e25750a81d1da1.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.13.ba4f4d436094160469e25750a81d1da1.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.13.ba4f4d436094160469e25750a81d1da1.mugqic.done
chmod 755 $COMMAND
paired_varscan2_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_14_JOB_ID: varscan2_somatic.PRO-00089_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.14
JOB_DEPENDENCIES=$rawmpileup_14_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.14.b167138ca93fbd85ee2e072bc8c70c80.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.14.b167138ca93fbd85ee2e072bc8c70c80.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.14.b167138ca93fbd85ee2e072bc8c70c80.mugqic.done
chmod 755 $COMMAND
paired_varscan2_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_15_JOB_ID: varscan2_somatic.PRO-00089_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.15
JOB_DEPENDENCIES=$rawmpileup_15_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.15.bd7c3db11e26ca5032b1f1094459efed.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.15.bd7c3db11e26ca5032b1f1094459efed.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.15.bd7c3db11e26ca5032b1f1094459efed.mugqic.done
chmod 755 $COMMAND
paired_varscan2_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_16_JOB_ID: varscan2_somatic.PRO-00089_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.16
JOB_DEPENDENCIES=$rawmpileup_16_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.16.da55e5e1d5ea738b1e62628a3bb81efb.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.16.da55e5e1d5ea738b1e62628a3bb81efb.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.16.da55e5e1d5ea738b1e62628a3bb81efb.mugqic.done
chmod 755 $COMMAND
paired_varscan2_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_17_JOB_ID: varscan2_somatic.PRO-00089_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.17
JOB_DEPENDENCIES=$rawmpileup_17_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.17.e6798daddc6c126a1b42edf38f3cd7aa.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.17.e6798daddc6c126a1b42edf38f3cd7aa.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.17.e6798daddc6c126a1b42edf38f3cd7aa.mugqic.done
chmod 755 $COMMAND
paired_varscan2_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_18_JOB_ID: varscan2_somatic.PRO-00089_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.18
JOB_DEPENDENCIES=$rawmpileup_18_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.18.25c4e3fb039bd2290dc63a80418ce44a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.18.25c4e3fb039bd2290dc63a80418ce44a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.18.25c4e3fb039bd2290dc63a80418ce44a.mugqic.done
chmod 755 $COMMAND
paired_varscan2_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_19_JOB_ID: varscan2_somatic.PRO-00089_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.19
JOB_DEPENDENCIES=$rawmpileup_19_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.19.0cf63c8c35af61d0fe9e26c3289bcf00.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.19.0cf63c8c35af61d0fe9e26c3289bcf00.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.19.0cf63c8c35af61d0fe9e26c3289bcf00.mugqic.done
chmod 755 $COMMAND
paired_varscan2_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_20_JOB_ID: varscan2_somatic.PRO-00089_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.20
JOB_DEPENDENCIES=$rawmpileup_20_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.20.e11a58be1e31b26fd52bf76fbeb5fe1d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.20.e11a58be1e31b26fd52bf76fbeb5fe1d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.20.e11a58be1e31b26fd52bf76fbeb5fe1d.mugqic.done
chmod 755 $COMMAND
paired_varscan2_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_21_JOB_ID: varscan2_somatic.PRO-00089_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.21
JOB_DEPENDENCIES=$rawmpileup_21_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.21.b7912e5e7e5e27d859649c7dd0991aeb.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.21.b7912e5e7e5e27d859649c7dd0991aeb.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.21.b7912e5e7e5e27d859649c7dd0991aeb.mugqic.done
chmod 755 $COMMAND
paired_varscan2_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_22_JOB_ID: varscan2_somatic.PRO-00089_OS_T.22
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.22
JOB_DEPENDENCIES=$rawmpileup_22_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.22.f76a591f48f2e49be4b9b7e3b19493b2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.22.f76a591f48f2e49be4b9b7e3b19493b2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.22.f76a591f48f2e49be4b9b7e3b19493b2.mugqic.done
chmod 755 $COMMAND
paired_varscan2_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_23_JOB_ID: varscan2_somatic.PRO-00089_OS_T.X
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.X
JOB_DEPENDENCIES=$rawmpileup_23_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.X.fc91f8dc070cd7ce2f8450b269c03025.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.X.fc91f8dc070cd7ce2f8450b269c03025.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.X.fc91f8dc070cd7ce2f8450b269c03025.mugqic.done
chmod 755 $COMMAND
paired_varscan2_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_24_JOB_ID: varscan2_somatic.PRO-00089_OS_T.Y
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.Y
JOB_DEPENDENCIES=$rawmpileup_24_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.Y.6ac4edd5900ac570fffee83748623b65.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.Y.6ac4edd5900ac570fffee83748623b65.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.Y.6ac4edd5900ac570fffee83748623b65.mugqic.done
chmod 755 $COMMAND
paired_varscan2_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_25_JOB_ID: varscan2_somatic.PRO-00089_OS_T.MT
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00089_OS_T.MT
JOB_DEPENDENCIES=$rawmpileup_25_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00089_OS_T.MT.978f2da70f290cb7a154bd1670abb002.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00089_OS_T.MT.978f2da70f290cb7a154bd1670abb002.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00089_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.mpileup \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.snp.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.indel.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.snp.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.indel.vcf.gz | \
sed 's/TUMOR/PRO-00089_OS_T/g' | sed 's/NORMAL/PRO-00089_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.varscan2.vcf > \
pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.varscan2.vcf.gz
varscan2_somatic.PRO-00089_OS_T.MT.978f2da70f290cb7a154bd1670abb002.mugqic.done
chmod 755 $COMMAND
paired_varscan2_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_26_JOB_ID: varscan2_somatic.PRO-00035_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.1
JOB_DEPENDENCIES=$rawmpileup_26_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.1.596cd9e2baa1e1e2308754e73484c785.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.1.596cd9e2baa1e1e2308754e73484c785.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.1.596cd9e2baa1e1e2308754e73484c785.mugqic.done
chmod 755 $COMMAND
paired_varscan2_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_27_JOB_ID: varscan2_somatic.PRO-00035_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.2
JOB_DEPENDENCIES=$rawmpileup_27_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.2.034ca0aae805704f068e8260af503a99.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.2.034ca0aae805704f068e8260af503a99.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.2.034ca0aae805704f068e8260af503a99.mugqic.done
chmod 755 $COMMAND
paired_varscan2_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_28_JOB_ID: varscan2_somatic.PRO-00035_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.3
JOB_DEPENDENCIES=$rawmpileup_28_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.3.addc6fa1aaf62eeed0d1c55f0d040da5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.3.addc6fa1aaf62eeed0d1c55f0d040da5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.3.addc6fa1aaf62eeed0d1c55f0d040da5.mugqic.done
chmod 755 $COMMAND
paired_varscan2_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_29_JOB_ID: varscan2_somatic.PRO-00035_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.4
JOB_DEPENDENCIES=$rawmpileup_29_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.4.31bf15bb09c341b348d748ae210b6ce6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.4.31bf15bb09c341b348d748ae210b6ce6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.4.31bf15bb09c341b348d748ae210b6ce6.mugqic.done
chmod 755 $COMMAND
paired_varscan2_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_30_JOB_ID: varscan2_somatic.PRO-00035_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.5
JOB_DEPENDENCIES=$rawmpileup_30_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.5.bbbe401c7e11219b65453662606695ed.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.5.bbbe401c7e11219b65453662606695ed.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.5.bbbe401c7e11219b65453662606695ed.mugqic.done
chmod 755 $COMMAND
paired_varscan2_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_31_JOB_ID: varscan2_somatic.PRO-00035_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.6
JOB_DEPENDENCIES=$rawmpileup_31_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.6.2c4de9e048551e1c05c7af4d83a6725b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.6.2c4de9e048551e1c05c7af4d83a6725b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.6.2c4de9e048551e1c05c7af4d83a6725b.mugqic.done
chmod 755 $COMMAND
paired_varscan2_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_32_JOB_ID: varscan2_somatic.PRO-00035_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.7
JOB_DEPENDENCIES=$rawmpileup_32_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.7.f4eb06545047643b5910ce292c42db55.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.7.f4eb06545047643b5910ce292c42db55.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.7.f4eb06545047643b5910ce292c42db55.mugqic.done
chmod 755 $COMMAND
paired_varscan2_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_33_JOB_ID: varscan2_somatic.PRO-00035_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.8
JOB_DEPENDENCIES=$rawmpileup_33_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.8.a931f93a2a93aca9755bf5dd1819fc41.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.8.a931f93a2a93aca9755bf5dd1819fc41.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.8.a931f93a2a93aca9755bf5dd1819fc41.mugqic.done
chmod 755 $COMMAND
paired_varscan2_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_34_JOB_ID: varscan2_somatic.PRO-00035_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.9
JOB_DEPENDENCIES=$rawmpileup_34_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.9.ef153f57ed78cbd665b239f44f950b68.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.9.ef153f57ed78cbd665b239f44f950b68.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.9.ef153f57ed78cbd665b239f44f950b68.mugqic.done
chmod 755 $COMMAND
paired_varscan2_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_35_JOB_ID: varscan2_somatic.PRO-00035_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.10
JOB_DEPENDENCIES=$rawmpileup_35_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.10.2de825efda9d412ccf6f075aa86afeab.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.10.2de825efda9d412ccf6f075aa86afeab.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.10.2de825efda9d412ccf6f075aa86afeab.mugqic.done
chmod 755 $COMMAND
paired_varscan2_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_36_JOB_ID: varscan2_somatic.PRO-00035_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.11
JOB_DEPENDENCIES=$rawmpileup_36_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.11.99789ae4733107251a41b3353df57f81.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.11.99789ae4733107251a41b3353df57f81.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.11.99789ae4733107251a41b3353df57f81.mugqic.done
chmod 755 $COMMAND
paired_varscan2_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_37_JOB_ID: varscan2_somatic.PRO-00035_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.12
JOB_DEPENDENCIES=$rawmpileup_37_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.12.53a74954a2560e91e8c8732a4fea4178.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.12.53a74954a2560e91e8c8732a4fea4178.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.12.53a74954a2560e91e8c8732a4fea4178.mugqic.done
chmod 755 $COMMAND
paired_varscan2_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_38_JOB_ID: varscan2_somatic.PRO-00035_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.13
JOB_DEPENDENCIES=$rawmpileup_38_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.13.c27aa4202204ca9fae51602dd6cc76e7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.13.c27aa4202204ca9fae51602dd6cc76e7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.13.c27aa4202204ca9fae51602dd6cc76e7.mugqic.done
chmod 755 $COMMAND
paired_varscan2_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_39_JOB_ID: varscan2_somatic.PRO-00035_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.14
JOB_DEPENDENCIES=$rawmpileup_39_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.14.bc8e3263891eb5f7f297f2049381a705.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.14.bc8e3263891eb5f7f297f2049381a705.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.14.bc8e3263891eb5f7f297f2049381a705.mugqic.done
chmod 755 $COMMAND
paired_varscan2_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_40_JOB_ID: varscan2_somatic.PRO-00035_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.15
JOB_DEPENDENCIES=$rawmpileup_40_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.15.8f9c48a3159ecc45461ca0583a6529e0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.15.8f9c48a3159ecc45461ca0583a6529e0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.15.8f9c48a3159ecc45461ca0583a6529e0.mugqic.done
chmod 755 $COMMAND
paired_varscan2_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_41_JOB_ID: varscan2_somatic.PRO-00035_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.16
JOB_DEPENDENCIES=$rawmpileup_41_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.16.af9e0da29a2247b7673402f0ca8a441d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.16.af9e0da29a2247b7673402f0ca8a441d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.16.af9e0da29a2247b7673402f0ca8a441d.mugqic.done
chmod 755 $COMMAND
paired_varscan2_41_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_41_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_41_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_42_JOB_ID: varscan2_somatic.PRO-00035_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.17
JOB_DEPENDENCIES=$rawmpileup_42_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.17.cd5a78998dc1b382ee6caff713338142.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.17.cd5a78998dc1b382ee6caff713338142.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.17.cd5a78998dc1b382ee6caff713338142.mugqic.done
chmod 755 $COMMAND
paired_varscan2_42_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_42_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_42_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_43_JOB_ID: varscan2_somatic.PRO-00035_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.18
JOB_DEPENDENCIES=$rawmpileup_43_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.18.a7cb666f82dc9316e0bb6af0c338da70.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.18.a7cb666f82dc9316e0bb6af0c338da70.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.18.a7cb666f82dc9316e0bb6af0c338da70.mugqic.done
chmod 755 $COMMAND
paired_varscan2_43_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_43_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_43_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_44_JOB_ID: varscan2_somatic.PRO-00035_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.19
JOB_DEPENDENCIES=$rawmpileup_44_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.19.19cc487a175dae26e18fbfd125a0d281.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.19.19cc487a175dae26e18fbfd125a0d281.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.19.19cc487a175dae26e18fbfd125a0d281.mugqic.done
chmod 755 $COMMAND
paired_varscan2_44_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_44_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_44_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_45_JOB_ID: varscan2_somatic.PRO-00035_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.20
JOB_DEPENDENCIES=$rawmpileup_45_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.20.8e0770db1c25b09760c590bb7e83c92d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.20.8e0770db1c25b09760c590bb7e83c92d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.20.8e0770db1c25b09760c590bb7e83c92d.mugqic.done
chmod 755 $COMMAND
paired_varscan2_45_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_45_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_45_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_46_JOB_ID: varscan2_somatic.PRO-00035_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.21
JOB_DEPENDENCIES=$rawmpileup_46_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.21.5dcb5bbb8b5f394b16e1f0fd4a0915ae.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.21.5dcb5bbb8b5f394b16e1f0fd4a0915ae.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.21.5dcb5bbb8b5f394b16e1f0fd4a0915ae.mugqic.done
chmod 755 $COMMAND
paired_varscan2_46_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_46_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_46_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_47_JOB_ID: varscan2_somatic.PRO-00035_OS_T.22
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.22
JOB_DEPENDENCIES=$rawmpileup_47_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.22.a5a6233bf898fd1363649fe18d2d0ec8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.22.a5a6233bf898fd1363649fe18d2d0ec8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22 \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.22.a5a6233bf898fd1363649fe18d2d0ec8.mugqic.done
chmod 755 $COMMAND
paired_varscan2_47_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_47_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_47_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_48_JOB_ID: varscan2_somatic.PRO-00035_OS_T.X
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.X
JOB_DEPENDENCIES=$rawmpileup_48_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.X.b0be582730b0df3a7f79321acfa2dd3a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.X.b0be582730b0df3a7f79321acfa2dd3a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.X.b0be582730b0df3a7f79321acfa2dd3a.mugqic.done
chmod 755 $COMMAND
paired_varscan2_48_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_48_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_48_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_49_JOB_ID: varscan2_somatic.PRO-00035_OS_T.Y
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.Y
JOB_DEPENDENCIES=$rawmpileup_49_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.Y.f6b6d31f42c0044dc3c300c7a2983244.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.Y.f6b6d31f42c0044dc3c300c7a2983244.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.Y.f6b6d31f42c0044dc3c300c7a2983244.mugqic.done
chmod 755 $COMMAND
paired_varscan2_49_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_49_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_49_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_varscan2_50_JOB_ID: varscan2_somatic.PRO-00035_OS_T.MT
#-------------------------------------------------------------------------------
JOB_NAME=varscan2_somatic.PRO-00035_OS_T.MT
JOB_DEPENDENCIES=$rawmpileup_50_JOB_ID
JOB_DONE=job_output/paired_varscan2/varscan2_somatic.PRO-00035_OS_T.MT.574c93d24dbdaf3190894de31ec31fbe.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'varscan2_somatic.PRO-00035_OS_T.MT.574c93d24dbdaf3190894de31ec31fbe.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarScan/2.4.3 mugqic/htslib/1.14 mugqic/bcftools/1.15 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
touch pairedVariants/PRO-00035_OS_T/rawVarscan2 && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx4000M -jar $VARSCAN2_JAR somatic \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.mpileup \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT \
  --min-coverage 3 --min-var-freq 0.05 --p-value 0.10 --somatic-p-value 0.05 --strand-filter 0 \
  --output-vcf 1 --mpileup 1 && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.snp.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.snp.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.snp.vcf.gz && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.indel.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.indel.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.indel.vcf.gz && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.snp.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.indel.vcf.gz | \
sed 's/TUMOR/PRO-00035_OS_T/g' | sed 's/NORMAL/PRO-00035_BLOOD/g' | grep -v "INFO=<ID=SSC" | sed -E "s/SSC=(.*);//g" > pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.varscan2.vcf && \
bgzip -cf \
 \
 pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.varscan2.vcf > \
pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.varscan2.vcf.gz
varscan2_somatic.PRO-00035_OS_T.MT.574c93d24dbdaf3190894de31ec31fbe.mugqic.done
chmod 755 $COMMAND
paired_varscan2_50_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=12:00:00 --mem 4G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_varscan2_50_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_varscan2_50_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: merge_varscan2
#-------------------------------------------------------------------------------
STEP=merge_varscan2
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: merge_varscan2_1_JOB_ID: merge_varscan2.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_varscan2.PRO-00089_OS_T
JOB_DEPENDENCIES=$paired_varscan2_1_JOB_ID:$paired_varscan2_2_JOB_ID:$paired_varscan2_3_JOB_ID:$paired_varscan2_4_JOB_ID:$paired_varscan2_5_JOB_ID:$paired_varscan2_6_JOB_ID:$paired_varscan2_7_JOB_ID:$paired_varscan2_8_JOB_ID:$paired_varscan2_9_JOB_ID:$paired_varscan2_10_JOB_ID:$paired_varscan2_11_JOB_ID:$paired_varscan2_12_JOB_ID:$paired_varscan2_13_JOB_ID:$paired_varscan2_14_JOB_ID:$paired_varscan2_15_JOB_ID:$paired_varscan2_16_JOB_ID:$paired_varscan2_17_JOB_ID:$paired_varscan2_18_JOB_ID:$paired_varscan2_19_JOB_ID:$paired_varscan2_20_JOB_ID:$paired_varscan2_21_JOB_ID:$paired_varscan2_22_JOB_ID:$paired_varscan2_23_JOB_ID:$paired_varscan2_24_JOB_ID:$paired_varscan2_25_JOB_ID
JOB_DONE=job_output/merge_varscan2/merge_varscan2.PRO-00089_OS_T.2ec66eeadab378c2b584c30afaf65034.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_varscan2.PRO-00089_OS_T.2ec66eeadab378c2b584c30afaf65034.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/mugqic_tools/2.10.5 mugqic/python/3.9.1 mugqic/htslib/1.14 mugqic/vt/0.57 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.1.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.2.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.3.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.4.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.5.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.6.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.7.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.8.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.9.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.10.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.11.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.12.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.13.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.14.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.15.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.16.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.17.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.18.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.19.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.20.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.21.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.22.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.X.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.Y.varscan2.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVarscan2/PRO-00089_OS_T.MT.varscan2.vcf.gz | \
python3 $PYTHON_TOOLS/fixVS2VCF.py   \
     | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $4) } {print}' | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $5) } {print}' | \
awk -F$'\t' -v OFS='\t' '$1!~/^#/ && $4 == $5 {next} {print}' | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vcf.gz && \
zless pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vt.vcf.gz && \
bcftools \
  view -i 'SS="2"' \
   \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vt.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.somatic.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.somatic.vt.vcf.gz && \
bcftools \
  view -i 'SS="1"|SS="3"' \
   \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.vt.vcf.gz | \
bcftools \
  view -e 'GT[*]="RR"' \
   | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.germline.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.germline.vt.vcf.gz
merge_varscan2.PRO-00089_OS_T.2ec66eeadab378c2b584c30afaf65034.mugqic.done
chmod 755 $COMMAND
merge_varscan2_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 8G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_varscan2_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_varscan2_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: merge_varscan2_2_JOB_ID: merge_varscan2.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_varscan2.PRO-00035_OS_T
JOB_DEPENDENCIES=$paired_varscan2_26_JOB_ID:$paired_varscan2_27_JOB_ID:$paired_varscan2_28_JOB_ID:$paired_varscan2_29_JOB_ID:$paired_varscan2_30_JOB_ID:$paired_varscan2_31_JOB_ID:$paired_varscan2_32_JOB_ID:$paired_varscan2_33_JOB_ID:$paired_varscan2_34_JOB_ID:$paired_varscan2_35_JOB_ID:$paired_varscan2_36_JOB_ID:$paired_varscan2_37_JOB_ID:$paired_varscan2_38_JOB_ID:$paired_varscan2_39_JOB_ID:$paired_varscan2_40_JOB_ID:$paired_varscan2_41_JOB_ID:$paired_varscan2_42_JOB_ID:$paired_varscan2_43_JOB_ID:$paired_varscan2_44_JOB_ID:$paired_varscan2_45_JOB_ID:$paired_varscan2_46_JOB_ID:$paired_varscan2_47_JOB_ID:$paired_varscan2_48_JOB_ID:$paired_varscan2_49_JOB_ID:$paired_varscan2_50_JOB_ID
JOB_DONE=job_output/merge_varscan2/merge_varscan2.PRO-00035_OS_T.3e5a8d799ee38bb97dbc45eb3d556906.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_varscan2.PRO-00035_OS_T.3e5a8d799ee38bb97dbc45eb3d556906.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/mugqic_tools/2.10.5 mugqic/python/3.9.1 mugqic/htslib/1.14 mugqic/vt/0.57 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.1.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.2.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.3.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.4.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.5.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.6.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.7.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.8.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.9.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.10.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.11.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.12.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.13.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.14.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.15.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.16.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.17.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.18.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.19.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.20.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.21.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.22.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.X.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.Y.varscan2.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVarscan2/PRO-00035_OS_T.MT.varscan2.vcf.gz | \
python3 $PYTHON_TOOLS/fixVS2VCF.py   \
     | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $4) } {print}' | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $5) } {print}' | \
awk -F$'\t' -v OFS='\t' '$1!~/^#/ && $4 == $5 {next} {print}' | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vcf.gz && \
zless pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vt.vcf.gz && \
bcftools \
  view -i 'SS="2"' \
   \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vt.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.somatic.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.somatic.vt.vcf.gz && \
bcftools \
  view -i 'SS="1"|SS="3"' \
   \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.vt.vcf.gz | \
bcftools \
  view -e 'GT[*]="RR"' \
   | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.germline.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.germline.vt.vcf.gz
merge_varscan2.PRO-00035_OS_T.3e5a8d799ee38bb97dbc45eb3d556906.mugqic.done
chmod 755 $COMMAND
merge_varscan2_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 8G -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_varscan2_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_varscan2_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: paired_mutect2
#-------------------------------------------------------------------------------
STEP=paired_mutect2
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_1_JOB_ID: gatk_mutect2.PRO-00089_OS_T.0
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.0
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.0.dc08dec1bf16ed7a9596a538ae2fbab8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.0.dc08dec1bf16ed7a9596a538ae2fbab8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.0.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.0.mutect2.vcf.gz \
  --intervals 1
gatk_mutect2.PRO-00089_OS_T.0.dc08dec1bf16ed7a9596a538ae2fbab8.mugqic.done
chmod 755 $COMMAND
paired_mutect2_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_2_JOB_ID: gatk_mutect2.PRO-00089_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.1
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.1.388d3ec240dc4100327fbb95ed93ac26.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.1.388d3ec240dc4100327fbb95ed93ac26.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.1.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.1.mutect2.vcf.gz \
  --intervals 2
gatk_mutect2.PRO-00089_OS_T.1.388d3ec240dc4100327fbb95ed93ac26.mugqic.done
chmod 755 $COMMAND
paired_mutect2_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_3_JOB_ID: gatk_mutect2.PRO-00089_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.2
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.2.2db40a28ffc630b6da4d66271c02bf30.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.2.2db40a28ffc630b6da4d66271c02bf30.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.2.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.2.mutect2.vcf.gz \
  --intervals 3
gatk_mutect2.PRO-00089_OS_T.2.2db40a28ffc630b6da4d66271c02bf30.mugqic.done
chmod 755 $COMMAND
paired_mutect2_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_4_JOB_ID: gatk_mutect2.PRO-00089_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.3
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.3.074f6c03ed33eb91c49a70605d7ac5f5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.3.074f6c03ed33eb91c49a70605d7ac5f5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.3.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.3.mutect2.vcf.gz \
  --intervals 4
gatk_mutect2.PRO-00089_OS_T.3.074f6c03ed33eb91c49a70605d7ac5f5.mugqic.done
chmod 755 $COMMAND
paired_mutect2_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_5_JOB_ID: gatk_mutect2.PRO-00089_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.4
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.4.bb84e0c2f1880fe71788fbfa8ca37ddb.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.4.bb84e0c2f1880fe71788fbfa8ca37ddb.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.4.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.4.mutect2.vcf.gz \
  --intervals 5
gatk_mutect2.PRO-00089_OS_T.4.bb84e0c2f1880fe71788fbfa8ca37ddb.mugqic.done
chmod 755 $COMMAND
paired_mutect2_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_6_JOB_ID: gatk_mutect2.PRO-00089_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.5
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.5.ce20d14e867ec5e8819ef96545d2f8e7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.5.ce20d14e867ec5e8819ef96545d2f8e7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.5.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.5.mutect2.vcf.gz \
  --intervals 6
gatk_mutect2.PRO-00089_OS_T.5.ce20d14e867ec5e8819ef96545d2f8e7.mugqic.done
chmod 755 $COMMAND
paired_mutect2_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_7_JOB_ID: gatk_mutect2.PRO-00089_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.6
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.6.ef382c55f85cc2fdb6a78c71cd21897f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.6.ef382c55f85cc2fdb6a78c71cd21897f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.6.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.6.mutect2.vcf.gz \
  --intervals 7
gatk_mutect2.PRO-00089_OS_T.6.ef382c55f85cc2fdb6a78c71cd21897f.mugqic.done
chmod 755 $COMMAND
paired_mutect2_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_8_JOB_ID: gatk_mutect2.PRO-00089_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.7
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.7.d6543afa3f9cac61da78d25e7d28bad0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.7.d6543afa3f9cac61da78d25e7d28bad0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.7.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.7.mutect2.vcf.gz \
  --intervals 8
gatk_mutect2.PRO-00089_OS_T.7.d6543afa3f9cac61da78d25e7d28bad0.mugqic.done
chmod 755 $COMMAND
paired_mutect2_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_9_JOB_ID: gatk_mutect2.PRO-00089_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.8
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.8.6185ad1200f4f642e163456e7f724053.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.8.6185ad1200f4f642e163456e7f724053.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.8.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.8.mutect2.vcf.gz \
  --intervals 9
gatk_mutect2.PRO-00089_OS_T.8.6185ad1200f4f642e163456e7f724053.mugqic.done
chmod 755 $COMMAND
paired_mutect2_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_10_JOB_ID: gatk_mutect2.PRO-00089_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.9
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.9.a2762841125f092900c6d616a2159e2c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.9.a2762841125f092900c6d616a2159e2c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.9.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.9.mutect2.vcf.gz \
  --intervals 10
gatk_mutect2.PRO-00089_OS_T.9.a2762841125f092900c6d616a2159e2c.mugqic.done
chmod 755 $COMMAND
paired_mutect2_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_11_JOB_ID: gatk_mutect2.PRO-00089_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.10
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.10.a8bdb88c9819fffc5d197627b5f1f060.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.10.a8bdb88c9819fffc5d197627b5f1f060.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.10.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.10.mutect2.vcf.gz \
  --intervals 11
gatk_mutect2.PRO-00089_OS_T.10.a8bdb88c9819fffc5d197627b5f1f060.mugqic.done
chmod 755 $COMMAND
paired_mutect2_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_12_JOB_ID: gatk_mutect2.PRO-00089_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.11
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.11.4c6bf89be876598aa399f977a359a36f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.11.4c6bf89be876598aa399f977a359a36f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.11.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.11.mutect2.vcf.gz \
  --intervals 12
gatk_mutect2.PRO-00089_OS_T.11.4c6bf89be876598aa399f977a359a36f.mugqic.done
chmod 755 $COMMAND
paired_mutect2_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_13_JOB_ID: gatk_mutect2.PRO-00089_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.12
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.12.b36394547a06ccaf164d2ae861f47cea.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.12.b36394547a06ccaf164d2ae861f47cea.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.12.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.12.mutect2.vcf.gz \
  --intervals 13
gatk_mutect2.PRO-00089_OS_T.12.b36394547a06ccaf164d2ae861f47cea.mugqic.done
chmod 755 $COMMAND
paired_mutect2_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_14_JOB_ID: gatk_mutect2.PRO-00089_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.13
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.13.a440d3566f41632c2d04aa43e16dee8e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.13.a440d3566f41632c2d04aa43e16dee8e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.13.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.13.mutect2.vcf.gz \
  --intervals 14
gatk_mutect2.PRO-00089_OS_T.13.a440d3566f41632c2d04aa43e16dee8e.mugqic.done
chmod 755 $COMMAND
paired_mutect2_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_15_JOB_ID: gatk_mutect2.PRO-00089_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.14
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.14.7d2cf34c80986c72406903963534496e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.14.7d2cf34c80986c72406903963534496e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.14.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.14.mutect2.vcf.gz \
  --intervals 15
gatk_mutect2.PRO-00089_OS_T.14.7d2cf34c80986c72406903963534496e.mugqic.done
chmod 755 $COMMAND
paired_mutect2_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_16_JOB_ID: gatk_mutect2.PRO-00089_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.15
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.15.2ce8d4e66a334f3315c5f0ec0a06425c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.15.2ce8d4e66a334f3315c5f0ec0a06425c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.15.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.15.mutect2.vcf.gz \
  --intervals 16
gatk_mutect2.PRO-00089_OS_T.15.2ce8d4e66a334f3315c5f0ec0a06425c.mugqic.done
chmod 755 $COMMAND
paired_mutect2_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_17_JOB_ID: gatk_mutect2.PRO-00089_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.16
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.16.bd3ddf3afefa506c232f145e91d19c23.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.16.bd3ddf3afefa506c232f145e91d19c23.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.16.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.16.mutect2.vcf.gz \
  --intervals 17
gatk_mutect2.PRO-00089_OS_T.16.bd3ddf3afefa506c232f145e91d19c23.mugqic.done
chmod 755 $COMMAND
paired_mutect2_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_18_JOB_ID: gatk_mutect2.PRO-00089_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.17
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.17.ba70518502e7795b04471f8ca1287852.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.17.ba70518502e7795b04471f8ca1287852.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.17.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.17.mutect2.vcf.gz \
  --intervals 18
gatk_mutect2.PRO-00089_OS_T.17.ba70518502e7795b04471f8ca1287852.mugqic.done
chmod 755 $COMMAND
paired_mutect2_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_19_JOB_ID: gatk_mutect2.PRO-00089_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.18
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.18.c38e10a4542ff78e4359708b07cac018.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.18.c38e10a4542ff78e4359708b07cac018.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.18.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.18.mutect2.vcf.gz \
  --intervals 19
gatk_mutect2.PRO-00089_OS_T.18.c38e10a4542ff78e4359708b07cac018.mugqic.done
chmod 755 $COMMAND
paired_mutect2_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_20_JOB_ID: gatk_mutect2.PRO-00089_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.19
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.19.42214886b74b6dddf3597cd8ee8be017.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.19.42214886b74b6dddf3597cd8ee8be017.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.19.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.19.mutect2.vcf.gz \
  --intervals 20
gatk_mutect2.PRO-00089_OS_T.19.42214886b74b6dddf3597cd8ee8be017.mugqic.done
chmod 755 $COMMAND
paired_mutect2_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_21_JOB_ID: gatk_mutect2.PRO-00089_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.20
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.20.56e81182ce8af4cdf6346bdfc33c038e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.20.56e81182ce8af4cdf6346bdfc33c038e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.20.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.20.mutect2.vcf.gz \
  --intervals 21
gatk_mutect2.PRO-00089_OS_T.20.56e81182ce8af4cdf6346bdfc33c038e.mugqic.done
chmod 755 $COMMAND
paired_mutect2_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_22_JOB_ID: gatk_mutect2.PRO-00089_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.21
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.21.c65fba643e0af1f9a85d527a9b52f80c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.21.c65fba643e0af1f9a85d527a9b52f80c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.21.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.21.mutect2.vcf.gz \
  --intervals 22
gatk_mutect2.PRO-00089_OS_T.21.c65fba643e0af1f9a85d527a9b52f80c.mugqic.done
chmod 755 $COMMAND
paired_mutect2_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_23_JOB_ID: gatk_mutect2.PRO-00089_OS_T.others
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00089_OS_T.others
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00089_OS_T.others.2ca1aa79eafcbf7e880b73e338984e8d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00089_OS_T.others.2ca1aa79eafcbf7e880b73e338984e8d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00089_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.others.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00089_OS_T \
  --input alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00089_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.others.mutect2.vcf.gz \
  --exclude-intervals 1 \
  --exclude-intervals 2 \
  --exclude-intervals 3 \
  --exclude-intervals 4 \
  --exclude-intervals 5 \
  --exclude-intervals 6 \
  --exclude-intervals 7 \
  --exclude-intervals 8 \
  --exclude-intervals 9 \
  --exclude-intervals 10 \
  --exclude-intervals 11 \
  --exclude-intervals 12 \
  --exclude-intervals 13 \
  --exclude-intervals 14 \
  --exclude-intervals 15 \
  --exclude-intervals 16 \
  --exclude-intervals 17 \
  --exclude-intervals 18 \
  --exclude-intervals 19 \
  --exclude-intervals 20 \
  --exclude-intervals 21 \
  --exclude-intervals 22 \
  --exclude-intervals GL000207.1 \
  --exclude-intervals GL000226.1 \
  --exclude-intervals GL000229.1 \
  --exclude-intervals GL000231.1 \
  --exclude-intervals GL000210.1 \
  --exclude-intervals GL000239.1 \
  --exclude-intervals GL000235.1 \
  --exclude-intervals GL000201.1 \
  --exclude-intervals GL000247.1 \
  --exclude-intervals GL000245.1 \
  --exclude-intervals GL000197.1 \
  --exclude-intervals GL000203.1 \
  --exclude-intervals GL000246.1 \
  --exclude-intervals GL000249.1 \
  --exclude-intervals GL000196.1 \
  --exclude-intervals GL000248.1 \
  --exclude-intervals GL000244.1 \
  --exclude-intervals GL000238.1 \
  --exclude-intervals GL000202.1 \
  --exclude-intervals GL000234.1 \
  --exclude-intervals GL000232.1 \
  --exclude-intervals GL000206.1 \
  --exclude-intervals GL000240.1 \
  --exclude-intervals GL000236.1 \
  --exclude-intervals GL000241.1 \
  --exclude-intervals GL000243.1 \
  --exclude-intervals GL000242.1 \
  --exclude-intervals GL000230.1 \
  --exclude-intervals GL000237.1 \
  --exclude-intervals GL000233.1 \
  --exclude-intervals GL000204.1 \
  --exclude-intervals GL000198.1 \
  --exclude-intervals GL000208.1 \
  --exclude-intervals GL000191.1 \
  --exclude-intervals GL000227.1 \
  --exclude-intervals GL000228.1 \
  --exclude-intervals GL000214.1 \
  --exclude-intervals GL000221.1 \
  --exclude-intervals GL000209.1 \
  --exclude-intervals GL000218.1 \
  --exclude-intervals GL000220.1 \
  --exclude-intervals GL000213.1 \
  --exclude-intervals GL000211.1 \
  --exclude-intervals GL000199.1 \
  --exclude-intervals GL000217.1 \
  --exclude-intervals GL000216.1 \
  --exclude-intervals GL000215.1 \
  --exclude-intervals GL000205.1 \
  --exclude-intervals GL000219.1 \
  --exclude-intervals GL000224.1 \
  --exclude-intervals GL000223.1 \
  --exclude-intervals GL000195.1 \
  --exclude-intervals GL000212.1 \
  --exclude-intervals GL000222.1 \
  --exclude-intervals GL000200.1 \
  --exclude-intervals GL000193.1 \
  --exclude-intervals GL000194.1 \
  --exclude-intervals GL000225.1 \
  --exclude-intervals GL000192.1
gatk_mutect2.PRO-00089_OS_T.others.2ca1aa79eafcbf7e880b73e338984e8d.mugqic.done
chmod 755 $COMMAND
paired_mutect2_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_24_JOB_ID: gatk_mutect2.PRO-00035_OS_T.0
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.0
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.0.b73e0c8c8182cce9d9ea0f7ee80b59f4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.0.b73e0c8c8182cce9d9ea0f7ee80b59f4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.0.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.0.mutect2.vcf.gz \
  --intervals 1
gatk_mutect2.PRO-00035_OS_T.0.b73e0c8c8182cce9d9ea0f7ee80b59f4.mugqic.done
chmod 755 $COMMAND
paired_mutect2_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_25_JOB_ID: gatk_mutect2.PRO-00035_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.1
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.1.9b832a9236956bbd078a08913e6c4466.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.1.9b832a9236956bbd078a08913e6c4466.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.1.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.1.mutect2.vcf.gz \
  --intervals 2
gatk_mutect2.PRO-00035_OS_T.1.9b832a9236956bbd078a08913e6c4466.mugqic.done
chmod 755 $COMMAND
paired_mutect2_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_26_JOB_ID: gatk_mutect2.PRO-00035_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.2
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.2.7158c041e6039c8bd1afa912c1ef11de.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.2.7158c041e6039c8bd1afa912c1ef11de.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.2.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.2.mutect2.vcf.gz \
  --intervals 3
gatk_mutect2.PRO-00035_OS_T.2.7158c041e6039c8bd1afa912c1ef11de.mugqic.done
chmod 755 $COMMAND
paired_mutect2_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_27_JOB_ID: gatk_mutect2.PRO-00035_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.3
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.3.d481400275f434cb3f3b0fdcfa7f6756.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.3.d481400275f434cb3f3b0fdcfa7f6756.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.3.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.3.mutect2.vcf.gz \
  --intervals 4
gatk_mutect2.PRO-00035_OS_T.3.d481400275f434cb3f3b0fdcfa7f6756.mugqic.done
chmod 755 $COMMAND
paired_mutect2_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_28_JOB_ID: gatk_mutect2.PRO-00035_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.4
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.4.09e520d8b69d93020dbb2a0c40e52e6a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.4.09e520d8b69d93020dbb2a0c40e52e6a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.4.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.4.mutect2.vcf.gz \
  --intervals 5
gatk_mutect2.PRO-00035_OS_T.4.09e520d8b69d93020dbb2a0c40e52e6a.mugqic.done
chmod 755 $COMMAND
paired_mutect2_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_29_JOB_ID: gatk_mutect2.PRO-00035_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.5
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.5.a97aaf836b0f78dfaac364f427e3f0d6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.5.a97aaf836b0f78dfaac364f427e3f0d6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.5.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.5.mutect2.vcf.gz \
  --intervals 6
gatk_mutect2.PRO-00035_OS_T.5.a97aaf836b0f78dfaac364f427e3f0d6.mugqic.done
chmod 755 $COMMAND
paired_mutect2_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_30_JOB_ID: gatk_mutect2.PRO-00035_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.6
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.6.1ac6073a38b250143aec065d7211667d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.6.1ac6073a38b250143aec065d7211667d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.6.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.6.mutect2.vcf.gz \
  --intervals 7
gatk_mutect2.PRO-00035_OS_T.6.1ac6073a38b250143aec065d7211667d.mugqic.done
chmod 755 $COMMAND
paired_mutect2_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_31_JOB_ID: gatk_mutect2.PRO-00035_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.7
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.7.756fd1a15f667aa6031cb16dd1dc4b9a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.7.756fd1a15f667aa6031cb16dd1dc4b9a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.7.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.7.mutect2.vcf.gz \
  --intervals 8
gatk_mutect2.PRO-00035_OS_T.7.756fd1a15f667aa6031cb16dd1dc4b9a.mugqic.done
chmod 755 $COMMAND
paired_mutect2_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_32_JOB_ID: gatk_mutect2.PRO-00035_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.8
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.8.6c57312e77c663e63094033619749abe.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.8.6c57312e77c663e63094033619749abe.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.8.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.8.mutect2.vcf.gz \
  --intervals 9
gatk_mutect2.PRO-00035_OS_T.8.6c57312e77c663e63094033619749abe.mugqic.done
chmod 755 $COMMAND
paired_mutect2_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_33_JOB_ID: gatk_mutect2.PRO-00035_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.9
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.9.3fdc1cec9d8b1a5373797dcce4f2cd8e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.9.3fdc1cec9d8b1a5373797dcce4f2cd8e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.9.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.9.mutect2.vcf.gz \
  --intervals 10
gatk_mutect2.PRO-00035_OS_T.9.3fdc1cec9d8b1a5373797dcce4f2cd8e.mugqic.done
chmod 755 $COMMAND
paired_mutect2_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_34_JOB_ID: gatk_mutect2.PRO-00035_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.10
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.10.568eac8c461d4b4cd0f3ff88731423e0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.10.568eac8c461d4b4cd0f3ff88731423e0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.10.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.10.mutect2.vcf.gz \
  --intervals 11
gatk_mutect2.PRO-00035_OS_T.10.568eac8c461d4b4cd0f3ff88731423e0.mugqic.done
chmod 755 $COMMAND
paired_mutect2_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_35_JOB_ID: gatk_mutect2.PRO-00035_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.11
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.11.9f9c4521d4923c75db568b46363aaa41.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.11.9f9c4521d4923c75db568b46363aaa41.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.11.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.11.mutect2.vcf.gz \
  --intervals 12
gatk_mutect2.PRO-00035_OS_T.11.9f9c4521d4923c75db568b46363aaa41.mugqic.done
chmod 755 $COMMAND
paired_mutect2_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_36_JOB_ID: gatk_mutect2.PRO-00035_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.12
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.12.200ef9d5a10f0f97978a1872cefc65eb.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.12.200ef9d5a10f0f97978a1872cefc65eb.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.12.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.12.mutect2.vcf.gz \
  --intervals 13
gatk_mutect2.PRO-00035_OS_T.12.200ef9d5a10f0f97978a1872cefc65eb.mugqic.done
chmod 755 $COMMAND
paired_mutect2_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_37_JOB_ID: gatk_mutect2.PRO-00035_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.13
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.13.80e9cb7140d7cc7009348c31c46d7a66.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.13.80e9cb7140d7cc7009348c31c46d7a66.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.13.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.13.mutect2.vcf.gz \
  --intervals 14
gatk_mutect2.PRO-00035_OS_T.13.80e9cb7140d7cc7009348c31c46d7a66.mugqic.done
chmod 755 $COMMAND
paired_mutect2_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_38_JOB_ID: gatk_mutect2.PRO-00035_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.14
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.14.fa8acae2b3ba6dcf27f6cb48b062b9f6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.14.fa8acae2b3ba6dcf27f6cb48b062b9f6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.14.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.14.mutect2.vcf.gz \
  --intervals 15
gatk_mutect2.PRO-00035_OS_T.14.fa8acae2b3ba6dcf27f6cb48b062b9f6.mugqic.done
chmod 755 $COMMAND
paired_mutect2_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_39_JOB_ID: gatk_mutect2.PRO-00035_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.15
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.15.29798aab23a30b2fcdb9e321fb3ac64d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.15.29798aab23a30b2fcdb9e321fb3ac64d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.15.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.15.mutect2.vcf.gz \
  --intervals 16
gatk_mutect2.PRO-00035_OS_T.15.29798aab23a30b2fcdb9e321fb3ac64d.mugqic.done
chmod 755 $COMMAND
paired_mutect2_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_40_JOB_ID: gatk_mutect2.PRO-00035_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.16
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.16.9e797a2b50110206ac0c33a387868474.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.16.9e797a2b50110206ac0c33a387868474.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.16.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.16.mutect2.vcf.gz \
  --intervals 17
gatk_mutect2.PRO-00035_OS_T.16.9e797a2b50110206ac0c33a387868474.mugqic.done
chmod 755 $COMMAND
paired_mutect2_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_41_JOB_ID: gatk_mutect2.PRO-00035_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.17
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.17.66c7baf9eb3945fb2395503c40428ab3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.17.66c7baf9eb3945fb2395503c40428ab3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.17.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.17.mutect2.vcf.gz \
  --intervals 18
gatk_mutect2.PRO-00035_OS_T.17.66c7baf9eb3945fb2395503c40428ab3.mugqic.done
chmod 755 $COMMAND
paired_mutect2_41_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_41_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_41_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_42_JOB_ID: gatk_mutect2.PRO-00035_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.18
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.18.d0ee84fb7d9e22df8923c2778a1b5961.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.18.d0ee84fb7d9e22df8923c2778a1b5961.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.18.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.18.mutect2.vcf.gz \
  --intervals 19
gatk_mutect2.PRO-00035_OS_T.18.d0ee84fb7d9e22df8923c2778a1b5961.mugqic.done
chmod 755 $COMMAND
paired_mutect2_42_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_42_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_42_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_43_JOB_ID: gatk_mutect2.PRO-00035_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.19
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.19.d74882875d760a34b19b694ae1ea2e75.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.19.d74882875d760a34b19b694ae1ea2e75.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.19.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.19.mutect2.vcf.gz \
  --intervals 20
gatk_mutect2.PRO-00035_OS_T.19.d74882875d760a34b19b694ae1ea2e75.mugqic.done
chmod 755 $COMMAND
paired_mutect2_43_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_43_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_43_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_44_JOB_ID: gatk_mutect2.PRO-00035_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.20
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.20.de45ea889805f526db139c9074ba44c0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.20.de45ea889805f526db139c9074ba44c0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.20.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.20.mutect2.vcf.gz \
  --intervals 21
gatk_mutect2.PRO-00035_OS_T.20.de45ea889805f526db139c9074ba44c0.mugqic.done
chmod 755 $COMMAND
paired_mutect2_44_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_44_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_44_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_45_JOB_ID: gatk_mutect2.PRO-00035_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.21
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.21.1e04a48ee217730f23baeb81c82d6dde.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.21.1e04a48ee217730f23baeb81c82d6dde.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.21.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.21.mutect2.vcf.gz \
  --intervals 22
gatk_mutect2.PRO-00035_OS_T.21.1e04a48ee217730f23baeb81c82d6dde.mugqic.done
chmod 755 $COMMAND
paired_mutect2_45_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_45_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_45_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: paired_mutect2_46_JOB_ID: gatk_mutect2.PRO-00035_OS_T.others
#-------------------------------------------------------------------------------
JOB_NAME=gatk_mutect2.PRO-00035_OS_T.others
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/paired_mutect2/gatk_mutect2.PRO-00035_OS_T.others.36419fd8c304e724e8effc695594dae9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_mutect2.PRO-00035_OS_T.others.36419fd8c304e724e8effc695594dae9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
touch pairedVariants/PRO-00035_OS_T/rawMuTect2 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx36000M" \
  Mutect2 --pair-hmm-implementation AVX_LOGLESS_CACHING_OMP --native-pair-hmm-threads 16 --max-reads-per-alignment-start 0 --read-validation-stringency LENIENT --af-of-alleles-not-in-resource 0.0000025 \
  --f1r2-tar-gz pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.others.f1r2.tar.gz \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --tumor-sample PRO-00035_OS_T \
  --input alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  --normal-sample PRO-00035_BLOOD \
  --germline-resource /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.af-only-gnomad.vcf.gz \
  --output pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.others.mutect2.vcf.gz \
  --exclude-intervals 1 \
  --exclude-intervals 2 \
  --exclude-intervals 3 \
  --exclude-intervals 4 \
  --exclude-intervals 5 \
  --exclude-intervals 6 \
  --exclude-intervals 7 \
  --exclude-intervals 8 \
  --exclude-intervals 9 \
  --exclude-intervals 10 \
  --exclude-intervals 11 \
  --exclude-intervals 12 \
  --exclude-intervals 13 \
  --exclude-intervals 14 \
  --exclude-intervals 15 \
  --exclude-intervals 16 \
  --exclude-intervals 17 \
  --exclude-intervals 18 \
  --exclude-intervals 19 \
  --exclude-intervals 20 \
  --exclude-intervals 21 \
  --exclude-intervals 22 \
  --exclude-intervals GL000207.1 \
  --exclude-intervals GL000226.1 \
  --exclude-intervals GL000229.1 \
  --exclude-intervals GL000231.1 \
  --exclude-intervals GL000210.1 \
  --exclude-intervals GL000239.1 \
  --exclude-intervals GL000235.1 \
  --exclude-intervals GL000201.1 \
  --exclude-intervals GL000247.1 \
  --exclude-intervals GL000245.1 \
  --exclude-intervals GL000197.1 \
  --exclude-intervals GL000203.1 \
  --exclude-intervals GL000246.1 \
  --exclude-intervals GL000249.1 \
  --exclude-intervals GL000196.1 \
  --exclude-intervals GL000248.1 \
  --exclude-intervals GL000244.1 \
  --exclude-intervals GL000238.1 \
  --exclude-intervals GL000202.1 \
  --exclude-intervals GL000234.1 \
  --exclude-intervals GL000232.1 \
  --exclude-intervals GL000206.1 \
  --exclude-intervals GL000240.1 \
  --exclude-intervals GL000236.1 \
  --exclude-intervals GL000241.1 \
  --exclude-intervals GL000243.1 \
  --exclude-intervals GL000242.1 \
  --exclude-intervals GL000230.1 \
  --exclude-intervals GL000237.1 \
  --exclude-intervals GL000233.1 \
  --exclude-intervals GL000204.1 \
  --exclude-intervals GL000198.1 \
  --exclude-intervals GL000208.1 \
  --exclude-intervals GL000191.1 \
  --exclude-intervals GL000227.1 \
  --exclude-intervals GL000228.1 \
  --exclude-intervals GL000214.1 \
  --exclude-intervals GL000221.1 \
  --exclude-intervals GL000209.1 \
  --exclude-intervals GL000218.1 \
  --exclude-intervals GL000220.1 \
  --exclude-intervals GL000213.1 \
  --exclude-intervals GL000211.1 \
  --exclude-intervals GL000199.1 \
  --exclude-intervals GL000217.1 \
  --exclude-intervals GL000216.1 \
  --exclude-intervals GL000215.1 \
  --exclude-intervals GL000205.1 \
  --exclude-intervals GL000219.1 \
  --exclude-intervals GL000224.1 \
  --exclude-intervals GL000223.1 \
  --exclude-intervals GL000195.1 \
  --exclude-intervals GL000212.1 \
  --exclude-intervals GL000222.1 \
  --exclude-intervals GL000200.1 \
  --exclude-intervals GL000193.1 \
  --exclude-intervals GL000194.1 \
  --exclude-intervals GL000225.1 \
  --exclude-intervals GL000192.1
gatk_mutect2.PRO-00035_OS_T.others.36419fd8c304e724e8effc695594dae9.mugqic.done
chmod 755 $COMMAND
paired_mutect2_46_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem 36G -c 16 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$paired_mutect2_46_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$paired_mutect2_46_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: merge_mutect2
#-------------------------------------------------------------------------------
STEP=merge_mutect2
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: merge_mutect2_1_JOB_ID: merge_filter_mutect2.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_filter_mutect2.PRO-00089_OS_T
JOB_DEPENDENCIES=$paired_mutect2_1_JOB_ID:$paired_mutect2_2_JOB_ID:$paired_mutect2_3_JOB_ID:$paired_mutect2_4_JOB_ID:$paired_mutect2_5_JOB_ID:$paired_mutect2_6_JOB_ID:$paired_mutect2_7_JOB_ID:$paired_mutect2_8_JOB_ID:$paired_mutect2_9_JOB_ID:$paired_mutect2_10_JOB_ID:$paired_mutect2_11_JOB_ID:$paired_mutect2_12_JOB_ID:$paired_mutect2_13_JOB_ID:$paired_mutect2_14_JOB_ID:$paired_mutect2_15_JOB_ID:$paired_mutect2_16_JOB_ID:$paired_mutect2_17_JOB_ID:$paired_mutect2_18_JOB_ID:$paired_mutect2_19_JOB_ID:$paired_mutect2_20_JOB_ID:$paired_mutect2_21_JOB_ID:$paired_mutect2_22_JOB_ID:$paired_mutect2_23_JOB_ID
JOB_DONE=job_output/merge_mutect2/merge_filter_mutect2.PRO-00089_OS_T.a2608b38370192b05ecfe5ec68c28b45.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_filter_mutect2.PRO-00089_OS_T.a2608b38370192b05ecfe5ec68c28b45.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 mugqic/htslib/1.14 mugqic/vt/0.57 mugqic/bcftools/1.15 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx16000M" \
  LearnReadOrientationModel  \
   \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.0.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.1.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.2.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.3.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.4.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.5.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.6.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.7.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.8.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.9.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.10.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.11.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.12.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.13.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.14.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.15.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.16.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.17.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.18.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.19.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.20.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.21.f1r2.tar.gz \
  --input pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.others.f1r2.tar.gz \
  --output pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.read-orientation-model.tar.gz && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx16000M" \
  MergeVcfs  \
  --TMP_DIR ${SLURM_TMPDIR} \
  --REFERENCE_SEQUENCE /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.0.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.1.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.2.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.3.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.4.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.5.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.6.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.7.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.8.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.9.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.10.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.11.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.12.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.13.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.14.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.15.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.16.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.17.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.18.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.19.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.20.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.21.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.others.mutect2.vcf.gz \
  --OUTPUT pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.vcf.gz && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx6G" \
  MergeMutectStats  \
   \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.0.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.1.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.2.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.3.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.4.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.5.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.6.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.7.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.8.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.9.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.10.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.11.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.12.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.13.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.14.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.15.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.16.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.17.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.18.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.19.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.20.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.21.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00089_OS_T/rawMuTect2/PRO-00089_OS_T.others.mutect2.vcf.gz.stats \
  --output pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.vcf.gz.stats && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx16000M" \
  FilterMutectCalls  \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --variant pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.vcf.gz \
      \
 --ob-priors pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.read-orientation-model.tar.gz \
  --output pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.flt.vcf.gz && \
zless pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.flt.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
 grep -v 'GL00' | grep -Ev 'chrUn|random' | grep -vE 'EBV|hs37d5' | sed -e 's#/\.##g' | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.vt.vcf.gz && \
bcftools \
  view -f PASS \
   \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.vt.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.somatic.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.somatic.vt.vcf.gz
merge_filter_mutect2.PRO-00089_OS_T.a2608b38370192b05ecfe5ec68c28b45.mugqic.done
chmod 755 $COMMAND
merge_mutect2_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 10G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_mutect2_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_mutect2_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: merge_mutect2_2_JOB_ID: merge_filter_mutect2.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_filter_mutect2.PRO-00035_OS_T
JOB_DEPENDENCIES=$paired_mutect2_24_JOB_ID:$paired_mutect2_25_JOB_ID:$paired_mutect2_26_JOB_ID:$paired_mutect2_27_JOB_ID:$paired_mutect2_28_JOB_ID:$paired_mutect2_29_JOB_ID:$paired_mutect2_30_JOB_ID:$paired_mutect2_31_JOB_ID:$paired_mutect2_32_JOB_ID:$paired_mutect2_33_JOB_ID:$paired_mutect2_34_JOB_ID:$paired_mutect2_35_JOB_ID:$paired_mutect2_36_JOB_ID:$paired_mutect2_37_JOB_ID:$paired_mutect2_38_JOB_ID:$paired_mutect2_39_JOB_ID:$paired_mutect2_40_JOB_ID:$paired_mutect2_41_JOB_ID:$paired_mutect2_42_JOB_ID:$paired_mutect2_43_JOB_ID:$paired_mutect2_44_JOB_ID:$paired_mutect2_45_JOB_ID:$paired_mutect2_46_JOB_ID
JOB_DONE=job_output/merge_mutect2/merge_filter_mutect2.PRO-00035_OS_T.50f02b2b4c3d91cfaf97c386583c7524.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_filter_mutect2.PRO-00035_OS_T.50f02b2b4c3d91cfaf97c386583c7524.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/4.1.8.1 mugqic/htslib/1.14 mugqic/vt/0.57 mugqic/bcftools/1.15 && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx16000M" \
  LearnReadOrientationModel  \
   \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.0.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.1.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.2.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.3.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.4.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.5.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.6.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.7.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.8.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.9.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.10.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.11.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.12.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.13.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.14.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.15.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.16.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.17.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.18.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.19.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.20.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.21.f1r2.tar.gz \
  --input pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.others.f1r2.tar.gz \
  --output pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.read-orientation-model.tar.gz && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx16000M" \
  MergeVcfs  \
  --TMP_DIR ${SLURM_TMPDIR} \
  --REFERENCE_SEQUENCE /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.0.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.1.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.2.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.3.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.4.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.5.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.6.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.7.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.8.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.9.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.10.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.11.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.12.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.13.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.14.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.15.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.16.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.17.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.18.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.19.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.20.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.21.mutect2.vcf.gz \
  --INPUT pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.others.mutect2.vcf.gz \
  --OUTPUT pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.vcf.gz && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx6G" \
  MergeMutectStats  \
   \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.0.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.1.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.2.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.3.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.4.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.5.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.6.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.7.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.8.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.9.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.10.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.11.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.12.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.13.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.14.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.15.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.16.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.17.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.18.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.19.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.20.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.21.mutect2.vcf.gz.stats \
  --stats pairedVariants/PRO-00035_OS_T/rawMuTect2/PRO-00035_OS_T.others.mutect2.vcf.gz.stats \
  --output pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.vcf.gz.stats && \
gatk --java-options "-Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Xmx16000M" \
  FilterMutectCalls  \
  --reference /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --variant pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.vcf.gz \
      \
 --ob-priors pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.read-orientation-model.tar.gz \
  --output pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.flt.vcf.gz && \
zless pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.flt.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
 grep -v 'GL00' | grep -Ev 'chrUn|random' | grep -vE 'EBV|hs37d5' | sed -e 's#/\.##g' | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.vt.vcf.gz && \
bcftools \
  view -f PASS \
   \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.vt.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.somatic.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.somatic.vt.vcf.gz
merge_filter_mutect2.PRO-00035_OS_T.50f02b2b4c3d91cfaf97c386583c7524.mugqic.done
chmod 755 $COMMAND
merge_mutect2_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 10G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_mutect2_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_mutect2_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: vardict_paired
#-------------------------------------------------------------------------------
STEP=vardict_paired
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: vardict_paired_1_JOB_ID: vardict.genome.beds.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=vardict.genome.beds.PRO-00089_OS_T
JOB_DEPENDENCIES=
JOB_DONE=job_output/vardict_paired/vardict.genome.beds.PRO-00089_OS_T.0a5b3f9f4e162fbd850db43d77062bc3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict.genome.beds.PRO-00089_OS_T.0a5b3f9f4e162fbd850db43d77062bc3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/python/2.7.18 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
dict2BEDs.py \
  --dict /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.dict \
  --beds pairedVariants/PRO-00089_OS_T/rawVardict/chr.0.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.1.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.2.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.3.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.4.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.5.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.6.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.7.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.8.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.9.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.10.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.11.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.12.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.13.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.14.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.15.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.16.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.17.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.18.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.19.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.20.bed pairedVariants/PRO-00089_OS_T/rawVardict/chr.21.bed -c 5000 -o 250
vardict.genome.beds.PRO-00089_OS_T.0a5b3f9f4e162fbd850db43d77062bc3.mugqic.done
chmod 755 $COMMAND
vardict_paired_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_2_JOB_ID: vardict_paired.PRO-00089_OS_T.0
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.0
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.0.326a39236a545e20db1da0e9287d14cd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.0.326a39236a545e20db1da0e9287d14cd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.0.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.0.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.0.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.0.326a39236a545e20db1da0e9287d14cd.mugqic.done
chmod 755 $COMMAND
vardict_paired_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_3_JOB_ID: vardict_paired.PRO-00089_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.1
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.1.f076e5a68d6d4e0115e938ae30bdd681.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.1.f076e5a68d6d4e0115e938ae30bdd681.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.1.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.1.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.1.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.1.f076e5a68d6d4e0115e938ae30bdd681.mugqic.done
chmod 755 $COMMAND
vardict_paired_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_4_JOB_ID: vardict_paired.PRO-00089_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.2
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.2.79d037b9246514cb90bed6b4285d3c3e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.2.79d037b9246514cb90bed6b4285d3c3e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.2.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.2.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.2.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.2.79d037b9246514cb90bed6b4285d3c3e.mugqic.done
chmod 755 $COMMAND
vardict_paired_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_5_JOB_ID: vardict_paired.PRO-00089_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.3
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.3.7b74053f4fe3b22e5c12e651e79b9d7d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.3.7b74053f4fe3b22e5c12e651e79b9d7d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.3.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.3.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.3.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.3.7b74053f4fe3b22e5c12e651e79b9d7d.mugqic.done
chmod 755 $COMMAND
vardict_paired_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_6_JOB_ID: vardict_paired.PRO-00089_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.4
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.4.3e74a721cce8a64b9b2ae877b459a9c2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.4.3e74a721cce8a64b9b2ae877b459a9c2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.4.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.4.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.4.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.4.3e74a721cce8a64b9b2ae877b459a9c2.mugqic.done
chmod 755 $COMMAND
vardict_paired_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_7_JOB_ID: vardict_paired.PRO-00089_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.5
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.5.e1cb6f48f9cf1ae0d233b85a66510550.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.5.e1cb6f48f9cf1ae0d233b85a66510550.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.5.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.5.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.5.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.5.e1cb6f48f9cf1ae0d233b85a66510550.mugqic.done
chmod 755 $COMMAND
vardict_paired_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_8_JOB_ID: vardict_paired.PRO-00089_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.6
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.6.4eea897811bb67d9e084672a02bd1fca.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.6.4eea897811bb67d9e084672a02bd1fca.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.6.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.6.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.6.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.6.4eea897811bb67d9e084672a02bd1fca.mugqic.done
chmod 755 $COMMAND
vardict_paired_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_9_JOB_ID: vardict_paired.PRO-00089_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.7
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.7.9249592de8c8289f7fff252ce20dca57.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.7.9249592de8c8289f7fff252ce20dca57.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.7.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.7.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.7.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.7.9249592de8c8289f7fff252ce20dca57.mugqic.done
chmod 755 $COMMAND
vardict_paired_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_10_JOB_ID: vardict_paired.PRO-00089_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.8
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.8.46924ff7fdcfc0ad08559bcc2d088500.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.8.46924ff7fdcfc0ad08559bcc2d088500.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.8.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.8.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.8.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.8.46924ff7fdcfc0ad08559bcc2d088500.mugqic.done
chmod 755 $COMMAND
vardict_paired_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_11_JOB_ID: vardict_paired.PRO-00089_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.9
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.9.8b2beb617386ef52b4ab4485fd4cd1b0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.9.8b2beb617386ef52b4ab4485fd4cd1b0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.9.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.9.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.9.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.9.8b2beb617386ef52b4ab4485fd4cd1b0.mugqic.done
chmod 755 $COMMAND
vardict_paired_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_12_JOB_ID: vardict_paired.PRO-00089_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.10
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.10.ea0732b73609f370e79382d7c9e7e137.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.10.ea0732b73609f370e79382d7c9e7e137.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.10.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.10.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.10.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.10.ea0732b73609f370e79382d7c9e7e137.mugqic.done
chmod 755 $COMMAND
vardict_paired_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_13_JOB_ID: vardict_paired.PRO-00089_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.11
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.11.f226931491c3b2bed6caf7b93da55402.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.11.f226931491c3b2bed6caf7b93da55402.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.11.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.11.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.11.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.11.f226931491c3b2bed6caf7b93da55402.mugqic.done
chmod 755 $COMMAND
vardict_paired_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_14_JOB_ID: vardict_paired.PRO-00089_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.12
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.12.c4cfc0a06d05c156718e59d19fe3ab57.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.12.c4cfc0a06d05c156718e59d19fe3ab57.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.12.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.12.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.12.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.12.c4cfc0a06d05c156718e59d19fe3ab57.mugqic.done
chmod 755 $COMMAND
vardict_paired_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_15_JOB_ID: vardict_paired.PRO-00089_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.13
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.13.837066d0399001d3d359bb868d14bb8e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.13.837066d0399001d3d359bb868d14bb8e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.13.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.13.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.13.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.13.837066d0399001d3d359bb868d14bb8e.mugqic.done
chmod 755 $COMMAND
vardict_paired_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_16_JOB_ID: vardict_paired.PRO-00089_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.14
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.14.e907695418b5f543c7afa41a19f54aa2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.14.e907695418b5f543c7afa41a19f54aa2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.14.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.14.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.14.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.14.e907695418b5f543c7afa41a19f54aa2.mugqic.done
chmod 755 $COMMAND
vardict_paired_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_17_JOB_ID: vardict_paired.PRO-00089_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.15
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.15.0ab7f5c905771a65dd16501ff8a5db5f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.15.0ab7f5c905771a65dd16501ff8a5db5f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.15.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.15.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.15.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.15.0ab7f5c905771a65dd16501ff8a5db5f.mugqic.done
chmod 755 $COMMAND
vardict_paired_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_18_JOB_ID: vardict_paired.PRO-00089_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.16
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.16.91d09050e6463801acdc0ea93e2d9912.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.16.91d09050e6463801acdc0ea93e2d9912.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.16.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.16.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.16.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.16.91d09050e6463801acdc0ea93e2d9912.mugqic.done
chmod 755 $COMMAND
vardict_paired_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_19_JOB_ID: vardict_paired.PRO-00089_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.17
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.17.438d60af08331b82025c13f3473bbe25.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.17.438d60af08331b82025c13f3473bbe25.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.17.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.17.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.17.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.17.438d60af08331b82025c13f3473bbe25.mugqic.done
chmod 755 $COMMAND
vardict_paired_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_20_JOB_ID: vardict_paired.PRO-00089_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.18
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.18.877bb01638fb3b05439f7386cf6c002a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.18.877bb01638fb3b05439f7386cf6c002a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.18.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.18.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.18.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.18.877bb01638fb3b05439f7386cf6c002a.mugqic.done
chmod 755 $COMMAND
vardict_paired_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_21_JOB_ID: vardict_paired.PRO-00089_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.19
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.19.dcb832b4a63c972d821273024e173af2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.19.dcb832b4a63c972d821273024e173af2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.19.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.19.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.19.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.19.dcb832b4a63c972d821273024e173af2.mugqic.done
chmod 755 $COMMAND
vardict_paired_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_22_JOB_ID: vardict_paired.PRO-00089_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.20
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.20.a8cb560fdc0834cacd1c7b4f08767d44.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.20.a8cb560fdc0834cacd1c7b4f08767d44.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.20.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.20.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.20.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.20.a8cb560fdc0834cacd1c7b4f08767d44.mugqic.done
chmod 755 $COMMAND
vardict_paired_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_23_JOB_ID: vardict_paired.PRO-00089_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00089_OS_T.21
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$vardict_paired_1_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00089_OS_T.21.c7d5a1f85287a39984940c907e6f12dd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00089_OS_T.21.c7d5a1f85287a39984940c907e6f12dd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00089_OS_T/rawVardict && \
touch pairedVariants/PRO-00089_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00089_OS_T \
  -b "alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam|alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00089_OS_T/rawVardict/chr.21.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00089_OS_T|PRO-00089_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.21.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.21.vardict.vcf.gz
vardict_paired.PRO-00089_OS_T.21.c7d5a1f85287a39984940c907e6f12dd.mugqic.done
chmod 755 $COMMAND
vardict_paired_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_24_JOB_ID: vardict.genome.beds.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=vardict.genome.beds.PRO-00035_OS_T
JOB_DEPENDENCIES=
JOB_DONE=job_output/vardict_paired/vardict.genome.beds.PRO-00035_OS_T.a4542ff4453ce82eefdffcfff8e9db8d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict.genome.beds.PRO-00035_OS_T.a4542ff4453ce82eefdffcfff8e9db8d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/python/2.7.18 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
dict2BEDs.py \
  --dict /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.dict \
  --beds pairedVariants/PRO-00035_OS_T/rawVardict/chr.0.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.1.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.2.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.3.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.4.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.5.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.6.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.7.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.8.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.9.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.10.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.11.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.12.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.13.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.14.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.15.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.16.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.17.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.18.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.19.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.20.bed pairedVariants/PRO-00035_OS_T/rawVardict/chr.21.bed -c 5000 -o 250
vardict.genome.beds.PRO-00035_OS_T.a4542ff4453ce82eefdffcfff8e9db8d.mugqic.done
chmod 755 $COMMAND
vardict_paired_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_25_JOB_ID: vardict_paired.PRO-00035_OS_T.0
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.0
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.0.4879d10b7596a28c57131b6bce1723cc.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.0.4879d10b7596a28c57131b6bce1723cc.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.0.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.0.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.0.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.0.4879d10b7596a28c57131b6bce1723cc.mugqic.done
chmod 755 $COMMAND
vardict_paired_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_26_JOB_ID: vardict_paired.PRO-00035_OS_T.1
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.1
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.1.3102f2ca50c70b5eb61963885f71a8cf.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.1.3102f2ca50c70b5eb61963885f71a8cf.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.1.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.1.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.1.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.1.3102f2ca50c70b5eb61963885f71a8cf.mugqic.done
chmod 755 $COMMAND
vardict_paired_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_27_JOB_ID: vardict_paired.PRO-00035_OS_T.2
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.2
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.2.3c7a0d40ab2dfe635bd25cdfa97438a5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.2.3c7a0d40ab2dfe635bd25cdfa97438a5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.2.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.2.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.2.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.2.3c7a0d40ab2dfe635bd25cdfa97438a5.mugqic.done
chmod 755 $COMMAND
vardict_paired_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_28_JOB_ID: vardict_paired.PRO-00035_OS_T.3
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.3
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.3.ee0145a01d9b1666b870c3d881d34392.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.3.ee0145a01d9b1666b870c3d881d34392.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.3.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.3.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.3.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.3.ee0145a01d9b1666b870c3d881d34392.mugqic.done
chmod 755 $COMMAND
vardict_paired_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_29_JOB_ID: vardict_paired.PRO-00035_OS_T.4
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.4
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.4.f280115cd9c23344c1608027a1024ca8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.4.f280115cd9c23344c1608027a1024ca8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.4.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.4.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.4.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.4.f280115cd9c23344c1608027a1024ca8.mugqic.done
chmod 755 $COMMAND
vardict_paired_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_30_JOB_ID: vardict_paired.PRO-00035_OS_T.5
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.5
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.5.725c965613e7f3e7e2079d6d7e13fa0a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.5.725c965613e7f3e7e2079d6d7e13fa0a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.5.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.5.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.5.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.5.725c965613e7f3e7e2079d6d7e13fa0a.mugqic.done
chmod 755 $COMMAND
vardict_paired_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_31_JOB_ID: vardict_paired.PRO-00035_OS_T.6
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.6
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.6.7775dbad2c6355ae5a32f576f107c64a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.6.7775dbad2c6355ae5a32f576f107c64a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.6.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.6.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.6.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.6.7775dbad2c6355ae5a32f576f107c64a.mugqic.done
chmod 755 $COMMAND
vardict_paired_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_32_JOB_ID: vardict_paired.PRO-00035_OS_T.7
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.7
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.7.1581d90ea9854a2d6e4431bd269159f7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.7.1581d90ea9854a2d6e4431bd269159f7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.7.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.7.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.7.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.7.1581d90ea9854a2d6e4431bd269159f7.mugqic.done
chmod 755 $COMMAND
vardict_paired_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_33_JOB_ID: vardict_paired.PRO-00035_OS_T.8
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.8
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.8.63077a51827e4ebf968f4f2e385b74a9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.8.63077a51827e4ebf968f4f2e385b74a9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.8.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.8.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.8.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.8.63077a51827e4ebf968f4f2e385b74a9.mugqic.done
chmod 755 $COMMAND
vardict_paired_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_34_JOB_ID: vardict_paired.PRO-00035_OS_T.9
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.9
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.9.1a7aed443a0bac50e5cbd5d51dbba68c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.9.1a7aed443a0bac50e5cbd5d51dbba68c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.9.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.9.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.9.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.9.1a7aed443a0bac50e5cbd5d51dbba68c.mugqic.done
chmod 755 $COMMAND
vardict_paired_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_35_JOB_ID: vardict_paired.PRO-00035_OS_T.10
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.10
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.10.1aea4e17f1cb3792dc11907bf3e2a93b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.10.1aea4e17f1cb3792dc11907bf3e2a93b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.10.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.10.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.10.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.10.1aea4e17f1cb3792dc11907bf3e2a93b.mugqic.done
chmod 755 $COMMAND
vardict_paired_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_36_JOB_ID: vardict_paired.PRO-00035_OS_T.11
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.11
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.11.9138f1f806b881f75377d6ce1c73aa80.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.11.9138f1f806b881f75377d6ce1c73aa80.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.11.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.11.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.11.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.11.9138f1f806b881f75377d6ce1c73aa80.mugqic.done
chmod 755 $COMMAND
vardict_paired_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_37_JOB_ID: vardict_paired.PRO-00035_OS_T.12
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.12
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.12.f0ac5f06adabb699d66ea803f935bbfd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.12.f0ac5f06adabb699d66ea803f935bbfd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.12.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.12.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.12.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.12.f0ac5f06adabb699d66ea803f935bbfd.mugqic.done
chmod 755 $COMMAND
vardict_paired_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_38_JOB_ID: vardict_paired.PRO-00035_OS_T.13
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.13
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.13.28f7f59bab9a6afa460691a7a912250c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.13.28f7f59bab9a6afa460691a7a912250c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.13.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.13.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.13.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.13.28f7f59bab9a6afa460691a7a912250c.mugqic.done
chmod 755 $COMMAND
vardict_paired_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_39_JOB_ID: vardict_paired.PRO-00035_OS_T.14
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.14
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.14.f5ddc856b24f87daf7548e6170c5c06d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.14.f5ddc856b24f87daf7548e6170c5c06d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.14.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.14.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.14.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.14.f5ddc856b24f87daf7548e6170c5c06d.mugqic.done
chmod 755 $COMMAND
vardict_paired_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_40_JOB_ID: vardict_paired.PRO-00035_OS_T.15
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.15
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.15.774cfd8e48c3c91cf3fc75cc398c4d22.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.15.774cfd8e48c3c91cf3fc75cc398c4d22.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.15.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.15.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.15.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.15.774cfd8e48c3c91cf3fc75cc398c4d22.mugqic.done
chmod 755 $COMMAND
vardict_paired_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_41_JOB_ID: vardict_paired.PRO-00035_OS_T.16
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.16
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.16.d5da8309d17a66c064a6a21ff65e3ae6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.16.d5da8309d17a66c064a6a21ff65e3ae6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.16.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.16.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.16.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.16.d5da8309d17a66c064a6a21ff65e3ae6.mugqic.done
chmod 755 $COMMAND
vardict_paired_41_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_41_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_41_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_42_JOB_ID: vardict_paired.PRO-00035_OS_T.17
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.17
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.17.54cea1e677c80b51dcd8840527338c03.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.17.54cea1e677c80b51dcd8840527338c03.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.17.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.17.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.17.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.17.54cea1e677c80b51dcd8840527338c03.mugqic.done
chmod 755 $COMMAND
vardict_paired_42_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_42_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_42_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_43_JOB_ID: vardict_paired.PRO-00035_OS_T.18
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.18
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.18.dd66a8d4e7d27a869add0d38d77e3694.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.18.dd66a8d4e7d27a869add0d38d77e3694.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.18.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.18.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.18.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.18.dd66a8d4e7d27a869add0d38d77e3694.mugqic.done
chmod 755 $COMMAND
vardict_paired_43_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_43_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_43_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_44_JOB_ID: vardict_paired.PRO-00035_OS_T.19
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.19
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.19.eeef4aa600f56a7cde890a6de43fce58.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.19.eeef4aa600f56a7cde890a6de43fce58.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.19.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.19.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.19.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.19.eeef4aa600f56a7cde890a6de43fce58.mugqic.done
chmod 755 $COMMAND
vardict_paired_44_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_44_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_44_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_45_JOB_ID: vardict_paired.PRO-00035_OS_T.20
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.20
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.20.ca8bedf0e3c5f15caecd0b8d21b54c5c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.20.ca8bedf0e3c5f15caecd0b8d21b54c5c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.20.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.20.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.20.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.20.ca8bedf0e3c5f15caecd0b8d21b54c5c.mugqic.done
chmod 755 $COMMAND
vardict_paired_45_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_45_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_45_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: vardict_paired_46_JOB_ID: vardict_paired.PRO-00035_OS_T.21
#-------------------------------------------------------------------------------
JOB_NAME=vardict_paired.PRO-00035_OS_T.21
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$vardict_paired_24_JOB_ID
JOB_DONE=job_output/vardict_paired/vardict_paired.PRO-00035_OS_T.21.8e0af2b6f63df5943893a4da5602f09e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'vardict_paired.PRO-00035_OS_T.21.8e0af2b6f63df5943893a4da5602f09e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/VarDictJava/1.4.8 mugqic/samtools/1.12 mugqic/perl/5.34.0 mugqic/R_Bioconductor/3.5.0_3.7 mugqic/htslib/1.14 && \
mkdir -p pairedVariants/PRO-00035_OS_T/rawVardict && \
touch pairedVariants/PRO-00035_OS_T/rawVardict && \
java -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Djava.io.tmpdir=${SLURM_TMPDIR} -Xms768m -Xmx16000M -classpath $VARDICT_HOME/lib/VarDict-1.4.8.jar:$VARDICT_HOME/lib/commons-cli-1.2.jar:$VARDICT_HOME/lib/jregex-1.2_01.jar:$VARDICT_HOME/lib/htsjdk-2.8.0.jar com.astrazeneca.vardict.Main \
  -G /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  -N PRO-00035_OS_T \
  -b "alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam|alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam" \
  -f 0.03 -Q 11 -c 1 -S 2 -E 3 -g 4 -th 4 \
  pairedVariants/PRO-00035_OS_T/rawVardict/chr.21.bed | \
$VARDICT_BIN/testsomatic.R   | \
perl $VARDICT_BIN/var2vcf_paired.pl \
    -N "PRO-00035_OS_T|PRO-00035_BLOOD" \
    -f 0.03 -P 0.9 -m 4.25 -M | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.21.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.21.vardict.vcf.gz
vardict_paired.PRO-00035_OS_T.21.8e0af2b6f63df5943893a4da5602f09e.mugqic.done
chmod 755 $COMMAND
vardict_paired_46_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=72:00:00 --mem 16G -c 4 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$vardict_paired_46_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$vardict_paired_46_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: merge_filter_paired_vardict
#-------------------------------------------------------------------------------
STEP=merge_filter_paired_vardict
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: merge_filter_paired_vardict_1_JOB_ID: merge_filter_paired_vardict.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_filter_paired_vardict.PRO-00089_OS_T
JOB_DEPENDENCIES=$vardict_paired_2_JOB_ID:$vardict_paired_3_JOB_ID:$vardict_paired_4_JOB_ID:$vardict_paired_5_JOB_ID:$vardict_paired_6_JOB_ID:$vardict_paired_7_JOB_ID:$vardict_paired_8_JOB_ID:$vardict_paired_9_JOB_ID:$vardict_paired_10_JOB_ID:$vardict_paired_11_JOB_ID:$vardict_paired_12_JOB_ID:$vardict_paired_13_JOB_ID:$vardict_paired_14_JOB_ID:$vardict_paired_15_JOB_ID:$vardict_paired_16_JOB_ID:$vardict_paired_17_JOB_ID:$vardict_paired_18_JOB_ID:$vardict_paired_19_JOB_ID:$vardict_paired_20_JOB_ID:$vardict_paired_21_JOB_ID:$vardict_paired_22_JOB_ID:$vardict_paired_23_JOB_ID
JOB_DONE=job_output/merge_filter_paired_vardict/merge_filter_paired_vardict.PRO-00089_OS_T.f8a548d1017121a42faea9733e4f05d7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_filter_paired_vardict.PRO-00089_OS_T.f8a548d1017121a42faea9733e4f05d7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 mugqic/vt/0.57 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.0.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.1.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.2.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.3.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.4.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.5.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.6.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.7.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.8.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.9.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.10.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.11.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.12.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.13.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.14.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.15.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.16.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.17.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.18.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.19.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.20.vardict.vcf.gz \
  pairedVariants/PRO-00089_OS_T/rawVardict/PRO-00089_OS_T.21.vardict.vcf.gz | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $4) } {print}' | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $5) } {print}' | \
awk -F$'\t' -v OFS='\t' '$1!~/^#/ && $4 == $5 {next} {print}' | grep -v 'GL00' | grep -Ev 'chrUn|random' | grep -v 'EBV' | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vcf.gz && \
zless pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vt.vcf.gz && \
bcftools \
  view -f PASS -i 'INFO/STATUS~".*Somatic"' \
   \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vt.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.somatic.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.somatic.vt.vcf.gz && \
bcftools \
  view -f PASS -i 'INFO/STATUS~"Germline"|INFO/STATUS~".*LOH"' \
   \
 pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.vt.vcf.gz | \
bcftools \
  view -e 'GT[*]="RR"' \
   | \
bgzip -cf \
 > \
pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.germline.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.germline.vt.vcf.gz
merge_filter_paired_vardict.PRO-00089_OS_T.f8a548d1017121a42faea9733e4f05d7.mugqic.done
chmod 755 $COMMAND
merge_filter_paired_vardict_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_filter_paired_vardict_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_filter_paired_vardict_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: merge_filter_paired_vardict_2_JOB_ID: merge_filter_paired_vardict.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_filter_paired_vardict.PRO-00035_OS_T
JOB_DEPENDENCIES=$vardict_paired_25_JOB_ID:$vardict_paired_26_JOB_ID:$vardict_paired_27_JOB_ID:$vardict_paired_28_JOB_ID:$vardict_paired_29_JOB_ID:$vardict_paired_30_JOB_ID:$vardict_paired_31_JOB_ID:$vardict_paired_32_JOB_ID:$vardict_paired_33_JOB_ID:$vardict_paired_34_JOB_ID:$vardict_paired_35_JOB_ID:$vardict_paired_36_JOB_ID:$vardict_paired_37_JOB_ID:$vardict_paired_38_JOB_ID:$vardict_paired_39_JOB_ID:$vardict_paired_40_JOB_ID:$vardict_paired_41_JOB_ID:$vardict_paired_42_JOB_ID:$vardict_paired_43_JOB_ID:$vardict_paired_44_JOB_ID:$vardict_paired_45_JOB_ID:$vardict_paired_46_JOB_ID
JOB_DONE=job_output/merge_filter_paired_vardict/merge_filter_paired_vardict.PRO-00035_OS_T.ac6e229c7f6e59f3648c4d589275986e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_filter_paired_vardict.PRO-00035_OS_T.ac6e229c7f6e59f3648c4d589275986e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 mugqic/vt/0.57 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.0.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.1.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.2.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.3.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.4.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.5.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.6.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.7.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.8.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.9.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.10.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.11.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.12.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.13.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.14.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.15.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.16.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.17.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.18.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.19.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.20.vardict.vcf.gz \
  pairedVariants/PRO-00035_OS_T/rawVardict/PRO-00035_OS_T.21.vardict.vcf.gz | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $4) } {print}' | \
awk -F$'\t' -v OFS='\t' '{if ($0 !~ /^#/) gsub(/[KMRYSWBVHDX]/, "N", $5) } {print}' | \
awk -F$'\t' -v OFS='\t' '$1!~/^#/ && $4 == $5 {next} {print}' | grep -v 'GL00' | grep -Ev 'chrUn|random' | grep -v 'EBV' | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vcf.gz && \
zless pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vcf.gz | sed 's/ID=AD,Number=./ID=AD,Number=R/' | vt decompose -s - | vt normalize -r /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa - | sed -e '#0/.#0/0#' \
          | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vt.vcf.gz && \
bcftools \
  view -f PASS -i 'INFO/STATUS~".*Somatic"' \
   \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vt.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.somatic.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.somatic.vt.vcf.gz && \
bcftools \
  view -f PASS -i 'INFO/STATUS~"Germline"|INFO/STATUS~".*LOH"' \
   \
 pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.vt.vcf.gz | \
bcftools \
  view -e 'GT[*]="RR"' \
   | \
bgzip -cf \
 > \
pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.germline.vt.vcf.gz && \
tabix -pvcf pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.germline.vt.vcf.gz
merge_filter_paired_vardict.PRO-00035_OS_T.ac6e229c7f6e59f3648c4d589275986e.mugqic.done
chmod 755 $COMMAND
merge_filter_paired_vardict_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_filter_paired_vardict_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_filter_paired_vardict_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: ensemble_somatic
#-------------------------------------------------------------------------------
STEP=ensemble_somatic
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: ensemble_somatic_1_JOB_ID: bcbio_ensemble_somatic.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=bcbio_ensemble_somatic.PRO-00089_OS_T
JOB_DEPENDENCIES=$purple_1_JOB_ID:$merge_varscan2_1_JOB_ID:$merge_mutect2_1_JOB_ID:$merge_filter_paired_vardict_1_JOB_ID
JOB_DONE=job_output/ensemble_somatic/bcbio_ensemble_somatic.PRO-00089_OS_T.ae76e09406ef9edf368e13ae74e7c7cc.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bcbio_ensemble_somatic.PRO-00089_OS_T.ae76e09406ef9edf368e13ae74e7c7cc.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcbio.variation.recall/0.2.6 mugqic/bcftools/1.15 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T && \
touch pairedVariants/ensemble/PRO-00089_OS_T && \
$BCBIO_VARIATION_RECALL_HOME/bcbio.variation.recall ensemble \
  --cores 6 --numpass 1 --names mutect2,strelka2,vardict,varscan2 \
  pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.mutect2.somatic.vt.vcf.gz    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.somatic.purple.vcf.gz    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.somatic.vt.vcf.gz    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.somatic.vt.vcf.gz
bcbio_ensemble_somatic.PRO-00089_OS_T.ae76e09406ef9edf368e13ae74e7c7cc.mugqic.done
chmod 755 $COMMAND
ensemble_somatic_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 24G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$ensemble_somatic_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$ensemble_somatic_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: ensemble_somatic_2_JOB_ID: bcbio_ensemble_somatic.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=bcbio_ensemble_somatic.PRO-00035_OS_T
JOB_DEPENDENCIES=$purple_5_JOB_ID:$merge_varscan2_2_JOB_ID:$merge_mutect2_2_JOB_ID:$merge_filter_paired_vardict_2_JOB_ID
JOB_DONE=job_output/ensemble_somatic/bcbio_ensemble_somatic.PRO-00035_OS_T.40c14e64088d2f3607d667be353d0157.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bcbio_ensemble_somatic.PRO-00035_OS_T.40c14e64088d2f3607d667be353d0157.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcbio.variation.recall/0.2.6 mugqic/bcftools/1.15 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T && \
touch pairedVariants/ensemble/PRO-00035_OS_T && \
$BCBIO_VARIATION_RECALL_HOME/bcbio.variation.recall ensemble \
  --cores 6 --numpass 1 --names mutect2,strelka2,vardict,varscan2 \
  pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.mutect2.somatic.vt.vcf.gz    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.somatic.purple.vcf.gz    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.somatic.vt.vcf.gz    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.somatic.vt.vcf.gz
bcbio_ensemble_somatic.PRO-00035_OS_T.40c14e64088d2f3607d667be353d0157.mugqic.done
chmod 755 $COMMAND
ensemble_somatic_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 24G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$ensemble_somatic_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$ensemble_somatic_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: gatk_variant_annotator_somatic
#-------------------------------------------------------------------------------
STEP=gatk_variant_annotator_somatic
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_1_JOB_ID: gatk_variant_annotator_somatic.0.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.0.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.0.PRO-00089_OS_T.bac74e4f0a57ba771f04a7b13fe4af9f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.0.PRO-00089_OS_T.bac74e4f0a57ba771f04a7b13fe4af9f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.0.vcf.gz \
  --intervals 1
gatk_variant_annotator_somatic.0.PRO-00089_OS_T.bac74e4f0a57ba771f04a7b13fe4af9f.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_2_JOB_ID: gatk_variant_annotator_somatic.1.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.1.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.1.PRO-00089_OS_T.28e1c4ccf6bcfe551b3a79d0640a1336.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.1.PRO-00089_OS_T.28e1c4ccf6bcfe551b3a79d0640a1336.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.1.vcf.gz \
  --intervals 2
gatk_variant_annotator_somatic.1.PRO-00089_OS_T.28e1c4ccf6bcfe551b3a79d0640a1336.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_3_JOB_ID: gatk_variant_annotator_somatic.2.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.2.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.2.PRO-00089_OS_T.9742901a876fba272ceac42f658233de.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.2.PRO-00089_OS_T.9742901a876fba272ceac42f658233de.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.2.vcf.gz \
  --intervals 3
gatk_variant_annotator_somatic.2.PRO-00089_OS_T.9742901a876fba272ceac42f658233de.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_4_JOB_ID: gatk_variant_annotator_somatic.3.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.3.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.3.PRO-00089_OS_T.7378119e82309ae94b80f02423ac0346.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.3.PRO-00089_OS_T.7378119e82309ae94b80f02423ac0346.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.3.vcf.gz \
  --intervals 4
gatk_variant_annotator_somatic.3.PRO-00089_OS_T.7378119e82309ae94b80f02423ac0346.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_5_JOB_ID: gatk_variant_annotator_somatic.4.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.4.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.4.PRO-00089_OS_T.78c03f02c63faa8e4587ba8db2a955a2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.4.PRO-00089_OS_T.78c03f02c63faa8e4587ba8db2a955a2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.4.vcf.gz \
  --intervals 5
gatk_variant_annotator_somatic.4.PRO-00089_OS_T.78c03f02c63faa8e4587ba8db2a955a2.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_6_JOB_ID: gatk_variant_annotator_somatic.5.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.5.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.5.PRO-00089_OS_T.02d57c2f3a96dd0c786e156131fdc4f3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.5.PRO-00089_OS_T.02d57c2f3a96dd0c786e156131fdc4f3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.5.vcf.gz \
  --intervals 6
gatk_variant_annotator_somatic.5.PRO-00089_OS_T.02d57c2f3a96dd0c786e156131fdc4f3.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_7_JOB_ID: gatk_variant_annotator_somatic.6.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.6.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.6.PRO-00089_OS_T.e6699dafc4aed002c0cbaea583f57e79.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.6.PRO-00089_OS_T.e6699dafc4aed002c0cbaea583f57e79.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.6.vcf.gz \
  --intervals 7
gatk_variant_annotator_somatic.6.PRO-00089_OS_T.e6699dafc4aed002c0cbaea583f57e79.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_8_JOB_ID: gatk_variant_annotator_somatic.7.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.7.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.7.PRO-00089_OS_T.4beb40bd268f0230f8b64f34fe6ee620.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.7.PRO-00089_OS_T.4beb40bd268f0230f8b64f34fe6ee620.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.7.vcf.gz \
  --intervals 8
gatk_variant_annotator_somatic.7.PRO-00089_OS_T.4beb40bd268f0230f8b64f34fe6ee620.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_9_JOB_ID: gatk_variant_annotator_somatic.8.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.8.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.8.PRO-00089_OS_T.31c483873352563e8e4d3c8cbb6be8a6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.8.PRO-00089_OS_T.31c483873352563e8e4d3c8cbb6be8a6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.8.vcf.gz \
  --intervals 9
gatk_variant_annotator_somatic.8.PRO-00089_OS_T.31c483873352563e8e4d3c8cbb6be8a6.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_10_JOB_ID: gatk_variant_annotator_somatic.9.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.9.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.9.PRO-00089_OS_T.af18a0aed33dce8c6c39a9c27fd1961a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.9.PRO-00089_OS_T.af18a0aed33dce8c6c39a9c27fd1961a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.9.vcf.gz \
  --intervals 10
gatk_variant_annotator_somatic.9.PRO-00089_OS_T.af18a0aed33dce8c6c39a9c27fd1961a.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_11_JOB_ID: gatk_variant_annotator_somatic.10.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.10.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.10.PRO-00089_OS_T.5ec303ce5b5923a8d6d2623e7ba8dea3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.10.PRO-00089_OS_T.5ec303ce5b5923a8d6d2623e7ba8dea3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.10.vcf.gz \
  --intervals 11
gatk_variant_annotator_somatic.10.PRO-00089_OS_T.5ec303ce5b5923a8d6d2623e7ba8dea3.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_12_JOB_ID: gatk_variant_annotator_somatic.11.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.11.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.11.PRO-00089_OS_T.0506dbfef063f0cd425185ce7c42a02a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.11.PRO-00089_OS_T.0506dbfef063f0cd425185ce7c42a02a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.11.vcf.gz \
  --intervals 12
gatk_variant_annotator_somatic.11.PRO-00089_OS_T.0506dbfef063f0cd425185ce7c42a02a.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_13_JOB_ID: gatk_variant_annotator_somatic.12.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.12.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.12.PRO-00089_OS_T.b0f75abfa72aac24e117cd57b6aad7d7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.12.PRO-00089_OS_T.b0f75abfa72aac24e117cd57b6aad7d7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.12.vcf.gz \
  --intervals 13
gatk_variant_annotator_somatic.12.PRO-00089_OS_T.b0f75abfa72aac24e117cd57b6aad7d7.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_14_JOB_ID: gatk_variant_annotator_somatic.13.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.13.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.13.PRO-00089_OS_T.a5095c72780331c6ba0281ea749693f7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.13.PRO-00089_OS_T.a5095c72780331c6ba0281ea749693f7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.13.vcf.gz \
  --intervals 14
gatk_variant_annotator_somatic.13.PRO-00089_OS_T.a5095c72780331c6ba0281ea749693f7.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_15_JOB_ID: gatk_variant_annotator_somatic.14.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.14.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.14.PRO-00089_OS_T.efe7940308dec513d2207d73249ca254.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.14.PRO-00089_OS_T.efe7940308dec513d2207d73249ca254.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.14.vcf.gz \
  --intervals 15
gatk_variant_annotator_somatic.14.PRO-00089_OS_T.efe7940308dec513d2207d73249ca254.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_16_JOB_ID: gatk_variant_annotator_somatic.15.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.15.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.15.PRO-00089_OS_T.c0f4aaeae9dd33c59617fc2aa2453955.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.15.PRO-00089_OS_T.c0f4aaeae9dd33c59617fc2aa2453955.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.15.vcf.gz \
  --intervals 16
gatk_variant_annotator_somatic.15.PRO-00089_OS_T.c0f4aaeae9dd33c59617fc2aa2453955.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_17_JOB_ID: gatk_variant_annotator_somatic.16.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.16.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.16.PRO-00089_OS_T.d0a494bc50d81a572bee02634d83c1b3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.16.PRO-00089_OS_T.d0a494bc50d81a572bee02634d83c1b3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.16.vcf.gz \
  --intervals 17
gatk_variant_annotator_somatic.16.PRO-00089_OS_T.d0a494bc50d81a572bee02634d83c1b3.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_18_JOB_ID: gatk_variant_annotator_somatic.17.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.17.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.17.PRO-00089_OS_T.9a9cc665d902e930d120fef0fba95fe7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.17.PRO-00089_OS_T.9a9cc665d902e930d120fef0fba95fe7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.17.vcf.gz \
  --intervals 18
gatk_variant_annotator_somatic.17.PRO-00089_OS_T.9a9cc665d902e930d120fef0fba95fe7.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_19_JOB_ID: gatk_variant_annotator_somatic.18.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.18.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.18.PRO-00089_OS_T.c2f505e8fd572d4e619eac17f7ee522a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.18.PRO-00089_OS_T.c2f505e8fd572d4e619eac17f7ee522a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.18.vcf.gz \
  --intervals 19
gatk_variant_annotator_somatic.18.PRO-00089_OS_T.c2f505e8fd572d4e619eac17f7ee522a.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_20_JOB_ID: gatk_variant_annotator_somatic.others.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.others.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_somatic_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.others.PRO-00089_OS_T.2a7ffbea0954ab69e36b9d1f52b4fe3d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.others.PRO-00089_OS_T.2a7ffbea0954ab69e36b9d1f52b4fe3d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.others.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals GL000207.1 \
  --excludeIntervals GL000226.1 \
  --excludeIntervals GL000229.1 \
  --excludeIntervals GL000231.1 \
  --excludeIntervals GL000210.1 \
  --excludeIntervals GL000239.1 \
  --excludeIntervals GL000235.1 \
  --excludeIntervals GL000201.1 \
  --excludeIntervals GL000247.1 \
  --excludeIntervals GL000245.1 \
  --excludeIntervals GL000197.1 \
  --excludeIntervals GL000203.1 \
  --excludeIntervals GL000246.1 \
  --excludeIntervals GL000249.1 \
  --excludeIntervals GL000196.1 \
  --excludeIntervals GL000248.1 \
  --excludeIntervals GL000244.1 \
  --excludeIntervals GL000238.1 \
  --excludeIntervals GL000202.1 \
  --excludeIntervals GL000234.1 \
  --excludeIntervals GL000232.1 \
  --excludeIntervals GL000206.1 \
  --excludeIntervals GL000240.1 \
  --excludeIntervals GL000236.1 \
  --excludeIntervals GL000241.1 \
  --excludeIntervals GL000243.1 \
  --excludeIntervals GL000242.1 \
  --excludeIntervals GL000230.1 \
  --excludeIntervals GL000237.1 \
  --excludeIntervals GL000233.1 \
  --excludeIntervals GL000204.1 \
  --excludeIntervals GL000198.1 \
  --excludeIntervals GL000208.1 \
  --excludeIntervals GL000191.1 \
  --excludeIntervals GL000227.1 \
  --excludeIntervals GL000228.1 \
  --excludeIntervals GL000214.1 \
  --excludeIntervals GL000221.1 \
  --excludeIntervals GL000209.1 \
  --excludeIntervals GL000218.1 \
  --excludeIntervals GL000220.1 \
  --excludeIntervals GL000213.1 \
  --excludeIntervals GL000211.1 \
  --excludeIntervals GL000199.1 \
  --excludeIntervals GL000217.1 \
  --excludeIntervals GL000216.1 \
  --excludeIntervals GL000215.1 \
  --excludeIntervals GL000205.1 \
  --excludeIntervals GL000219.1 \
  --excludeIntervals GL000224.1 \
  --excludeIntervals GL000223.1 \
  --excludeIntervals GL000195.1 \
  --excludeIntervals GL000212.1 \
  --excludeIntervals GL000222.1 \
  --excludeIntervals GL000200.1 \
  --excludeIntervals GL000193.1 \
  --excludeIntervals GL000194.1 \
  --excludeIntervals GL000225.1 \
  --excludeIntervals GL000192.1
gatk_variant_annotator_somatic.others.PRO-00089_OS_T.2a7ffbea0954ab69e36b9d1f52b4fe3d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_21_JOB_ID: gatk_variant_annotator_somatic.0.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.0.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.0.PRO-00035_OS_T.fb11011fb5a4d30a92eeb48ed1981c06.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.0.PRO-00035_OS_T.fb11011fb5a4d30a92eeb48ed1981c06.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.0.vcf.gz \
  --intervals 1
gatk_variant_annotator_somatic.0.PRO-00035_OS_T.fb11011fb5a4d30a92eeb48ed1981c06.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_22_JOB_ID: gatk_variant_annotator_somatic.1.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.1.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.1.PRO-00035_OS_T.ba21a902cb7f0b1c0738d392c95248a0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.1.PRO-00035_OS_T.ba21a902cb7f0b1c0738d392c95248a0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.1.vcf.gz \
  --intervals 2
gatk_variant_annotator_somatic.1.PRO-00035_OS_T.ba21a902cb7f0b1c0738d392c95248a0.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_23_JOB_ID: gatk_variant_annotator_somatic.2.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.2.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.2.PRO-00035_OS_T.a720cb7ce7f90bbec24a92605e8f6384.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.2.PRO-00035_OS_T.a720cb7ce7f90bbec24a92605e8f6384.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.2.vcf.gz \
  --intervals 3
gatk_variant_annotator_somatic.2.PRO-00035_OS_T.a720cb7ce7f90bbec24a92605e8f6384.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_24_JOB_ID: gatk_variant_annotator_somatic.3.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.3.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.3.PRO-00035_OS_T.7bba925270348a6db22d12277c5f5b09.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.3.PRO-00035_OS_T.7bba925270348a6db22d12277c5f5b09.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.3.vcf.gz \
  --intervals 4
gatk_variant_annotator_somatic.3.PRO-00035_OS_T.7bba925270348a6db22d12277c5f5b09.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_25_JOB_ID: gatk_variant_annotator_somatic.4.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.4.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.4.PRO-00035_OS_T.b4171fe017f6cbd19399645533f73c7d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.4.PRO-00035_OS_T.b4171fe017f6cbd19399645533f73c7d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.4.vcf.gz \
  --intervals 5
gatk_variant_annotator_somatic.4.PRO-00035_OS_T.b4171fe017f6cbd19399645533f73c7d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_26_JOB_ID: gatk_variant_annotator_somatic.5.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.5.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.5.PRO-00035_OS_T.b9d04e16a452f16ac3e3c4f6b0aa6941.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.5.PRO-00035_OS_T.b9d04e16a452f16ac3e3c4f6b0aa6941.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.5.vcf.gz \
  --intervals 6
gatk_variant_annotator_somatic.5.PRO-00035_OS_T.b9d04e16a452f16ac3e3c4f6b0aa6941.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_27_JOB_ID: gatk_variant_annotator_somatic.6.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.6.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.6.PRO-00035_OS_T.8ee6419d7f3940b6fc8d218e3d77005d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.6.PRO-00035_OS_T.8ee6419d7f3940b6fc8d218e3d77005d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.6.vcf.gz \
  --intervals 7
gatk_variant_annotator_somatic.6.PRO-00035_OS_T.8ee6419d7f3940b6fc8d218e3d77005d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_28_JOB_ID: gatk_variant_annotator_somatic.7.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.7.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.7.PRO-00035_OS_T.dc949351985fcc1942a18d21b4699c71.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.7.PRO-00035_OS_T.dc949351985fcc1942a18d21b4699c71.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.7.vcf.gz \
  --intervals 8
gatk_variant_annotator_somatic.7.PRO-00035_OS_T.dc949351985fcc1942a18d21b4699c71.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_29_JOB_ID: gatk_variant_annotator_somatic.8.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.8.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.8.PRO-00035_OS_T.a78ebd12a6c525cd7494fd98f15e9308.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.8.PRO-00035_OS_T.a78ebd12a6c525cd7494fd98f15e9308.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.8.vcf.gz \
  --intervals 9
gatk_variant_annotator_somatic.8.PRO-00035_OS_T.a78ebd12a6c525cd7494fd98f15e9308.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_30_JOB_ID: gatk_variant_annotator_somatic.9.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.9.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.9.PRO-00035_OS_T.51a92ccc22e69e3c1b3ab594dfbe3923.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.9.PRO-00035_OS_T.51a92ccc22e69e3c1b3ab594dfbe3923.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.9.vcf.gz \
  --intervals 10
gatk_variant_annotator_somatic.9.PRO-00035_OS_T.51a92ccc22e69e3c1b3ab594dfbe3923.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_31_JOB_ID: gatk_variant_annotator_somatic.10.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.10.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.10.PRO-00035_OS_T.a89acfd9ffafcc84c83eeaa3f9248ce6.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.10.PRO-00035_OS_T.a89acfd9ffafcc84c83eeaa3f9248ce6.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.10.vcf.gz \
  --intervals 11
gatk_variant_annotator_somatic.10.PRO-00035_OS_T.a89acfd9ffafcc84c83eeaa3f9248ce6.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_32_JOB_ID: gatk_variant_annotator_somatic.11.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.11.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.11.PRO-00035_OS_T.e89c00b1571bc2a9939a1d7e15d86038.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.11.PRO-00035_OS_T.e89c00b1571bc2a9939a1d7e15d86038.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.11.vcf.gz \
  --intervals 12
gatk_variant_annotator_somatic.11.PRO-00035_OS_T.e89c00b1571bc2a9939a1d7e15d86038.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_33_JOB_ID: gatk_variant_annotator_somatic.12.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.12.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.12.PRO-00035_OS_T.6a2dfa432732cbbcfe7a7c5d2fa447fd.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.12.PRO-00035_OS_T.6a2dfa432732cbbcfe7a7c5d2fa447fd.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.12.vcf.gz \
  --intervals 13
gatk_variant_annotator_somatic.12.PRO-00035_OS_T.6a2dfa432732cbbcfe7a7c5d2fa447fd.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_34_JOB_ID: gatk_variant_annotator_somatic.13.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.13.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.13.PRO-00035_OS_T.242a3b1de0cf8d2ab72f18550e1dc194.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.13.PRO-00035_OS_T.242a3b1de0cf8d2ab72f18550e1dc194.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.13.vcf.gz \
  --intervals 14
gatk_variant_annotator_somatic.13.PRO-00035_OS_T.242a3b1de0cf8d2ab72f18550e1dc194.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_35_JOB_ID: gatk_variant_annotator_somatic.14.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.14.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.14.PRO-00035_OS_T.c21074671f62af01dfe578256c34ef7e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.14.PRO-00035_OS_T.c21074671f62af01dfe578256c34ef7e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.14.vcf.gz \
  --intervals 15
gatk_variant_annotator_somatic.14.PRO-00035_OS_T.c21074671f62af01dfe578256c34ef7e.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_36_JOB_ID: gatk_variant_annotator_somatic.15.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.15.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.15.PRO-00035_OS_T.751fffd126c1eee7bb689367842ab889.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.15.PRO-00035_OS_T.751fffd126c1eee7bb689367842ab889.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.15.vcf.gz \
  --intervals 16
gatk_variant_annotator_somatic.15.PRO-00035_OS_T.751fffd126c1eee7bb689367842ab889.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_37_JOB_ID: gatk_variant_annotator_somatic.16.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.16.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.16.PRO-00035_OS_T.f007facb989e5cc26963e0b9a8fceeb4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.16.PRO-00035_OS_T.f007facb989e5cc26963e0b9a8fceeb4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.16.vcf.gz \
  --intervals 17
gatk_variant_annotator_somatic.16.PRO-00035_OS_T.f007facb989e5cc26963e0b9a8fceeb4.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_38_JOB_ID: gatk_variant_annotator_somatic.17.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.17.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.17.PRO-00035_OS_T.d6bd53ee9a33709df36230854b4fcb7e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.17.PRO-00035_OS_T.d6bd53ee9a33709df36230854b4fcb7e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.17.vcf.gz \
  --intervals 18
gatk_variant_annotator_somatic.17.PRO-00035_OS_T.d6bd53ee9a33709df36230854b4fcb7e.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_39_JOB_ID: gatk_variant_annotator_somatic.18.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.18.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.18.PRO-00035_OS_T.6c48bcc9bcc44ab2b38ae080e3f1abfa.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.18.PRO-00035_OS_T.6c48bcc9bcc44ab2b38ae080e3f1abfa.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.18.vcf.gz \
  --intervals 19
gatk_variant_annotator_somatic.18.PRO-00035_OS_T.6c48bcc9bcc44ab2b38ae080e3f1abfa.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_somatic_40_JOB_ID: gatk_variant_annotator_somatic.others.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_somatic.others.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_somatic_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_somatic/gatk_variant_annotator_somatic.others.PRO-00035_OS_T.6d50ffe4fbbcb77350d51d13529bc58d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_somatic.others.PRO-00035_OS_T.6d50ffe4fbbcb77350d51d13529bc58d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -G StandardAnnotation -G StandardSomaticAnnotation -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.others.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals GL000207.1 \
  --excludeIntervals GL000226.1 \
  --excludeIntervals GL000229.1 \
  --excludeIntervals GL000231.1 \
  --excludeIntervals GL000210.1 \
  --excludeIntervals GL000239.1 \
  --excludeIntervals GL000235.1 \
  --excludeIntervals GL000201.1 \
  --excludeIntervals GL000247.1 \
  --excludeIntervals GL000245.1 \
  --excludeIntervals GL000197.1 \
  --excludeIntervals GL000203.1 \
  --excludeIntervals GL000246.1 \
  --excludeIntervals GL000249.1 \
  --excludeIntervals GL000196.1 \
  --excludeIntervals GL000248.1 \
  --excludeIntervals GL000244.1 \
  --excludeIntervals GL000238.1 \
  --excludeIntervals GL000202.1 \
  --excludeIntervals GL000234.1 \
  --excludeIntervals GL000232.1 \
  --excludeIntervals GL000206.1 \
  --excludeIntervals GL000240.1 \
  --excludeIntervals GL000236.1 \
  --excludeIntervals GL000241.1 \
  --excludeIntervals GL000243.1 \
  --excludeIntervals GL000242.1 \
  --excludeIntervals GL000230.1 \
  --excludeIntervals GL000237.1 \
  --excludeIntervals GL000233.1 \
  --excludeIntervals GL000204.1 \
  --excludeIntervals GL000198.1 \
  --excludeIntervals GL000208.1 \
  --excludeIntervals GL000191.1 \
  --excludeIntervals GL000227.1 \
  --excludeIntervals GL000228.1 \
  --excludeIntervals GL000214.1 \
  --excludeIntervals GL000221.1 \
  --excludeIntervals GL000209.1 \
  --excludeIntervals GL000218.1 \
  --excludeIntervals GL000220.1 \
  --excludeIntervals GL000213.1 \
  --excludeIntervals GL000211.1 \
  --excludeIntervals GL000199.1 \
  --excludeIntervals GL000217.1 \
  --excludeIntervals GL000216.1 \
  --excludeIntervals GL000215.1 \
  --excludeIntervals GL000205.1 \
  --excludeIntervals GL000219.1 \
  --excludeIntervals GL000224.1 \
  --excludeIntervals GL000223.1 \
  --excludeIntervals GL000195.1 \
  --excludeIntervals GL000212.1 \
  --excludeIntervals GL000222.1 \
  --excludeIntervals GL000200.1 \
  --excludeIntervals GL000193.1 \
  --excludeIntervals GL000194.1 \
  --excludeIntervals GL000225.1 \
  --excludeIntervals GL000192.1
gatk_variant_annotator_somatic.others.PRO-00035_OS_T.6d50ffe4fbbcb77350d51d13529bc58d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_somatic_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_somatic_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_somatic_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: merge_gatk_variant_annotator_somatic
#-------------------------------------------------------------------------------
STEP=merge_gatk_variant_annotator_somatic
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: merge_gatk_variant_annotator_somatic_1_JOB_ID: merge_gatk_variant_annotator.somatic.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_gatk_variant_annotator.somatic.PRO-00089_OS_T
JOB_DEPENDENCIES=$gatk_variant_annotator_somatic_1_JOB_ID:$gatk_variant_annotator_somatic_2_JOB_ID:$gatk_variant_annotator_somatic_3_JOB_ID:$gatk_variant_annotator_somatic_4_JOB_ID:$gatk_variant_annotator_somatic_5_JOB_ID:$gatk_variant_annotator_somatic_6_JOB_ID:$gatk_variant_annotator_somatic_7_JOB_ID:$gatk_variant_annotator_somatic_8_JOB_ID:$gatk_variant_annotator_somatic_9_JOB_ID:$gatk_variant_annotator_somatic_10_JOB_ID:$gatk_variant_annotator_somatic_11_JOB_ID:$gatk_variant_annotator_somatic_12_JOB_ID:$gatk_variant_annotator_somatic_13_JOB_ID:$gatk_variant_annotator_somatic_14_JOB_ID:$gatk_variant_annotator_somatic_15_JOB_ID:$gatk_variant_annotator_somatic_16_JOB_ID:$gatk_variant_annotator_somatic_17_JOB_ID:$gatk_variant_annotator_somatic_18_JOB_ID:$gatk_variant_annotator_somatic_19_JOB_ID:$gatk_variant_annotator_somatic_20_JOB_ID
JOB_DONE=job_output/merge_gatk_variant_annotator_somatic/merge_gatk_variant_annotator.somatic.PRO-00089_OS_T.430dd80435e3b9e03db56dead6c9592c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_gatk_variant_annotator.somatic.PRO-00089_OS_T.430dd80435e3b9e03db56dead6c9592c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.0.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.1.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.2.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.3.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.4.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.5.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.6.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.7.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.8.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.9.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.10.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.11.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.12.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.13.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.14.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.15.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.16.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.17.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.18.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.somatic.vt.annot.others.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz && \
tabix -pvcf pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz
merge_gatk_variant_annotator.somatic.PRO-00089_OS_T.430dd80435e3b9e03db56dead6c9592c.mugqic.done
chmod 755 $COMMAND
merge_gatk_variant_annotator_somatic_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_gatk_variant_annotator_somatic_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_gatk_variant_annotator_somatic_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: merge_gatk_variant_annotator_somatic_2_JOB_ID: merge_gatk_variant_annotator.somatic.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_gatk_variant_annotator.somatic.PRO-00035_OS_T
JOB_DEPENDENCIES=$gatk_variant_annotator_somatic_21_JOB_ID:$gatk_variant_annotator_somatic_22_JOB_ID:$gatk_variant_annotator_somatic_23_JOB_ID:$gatk_variant_annotator_somatic_24_JOB_ID:$gatk_variant_annotator_somatic_25_JOB_ID:$gatk_variant_annotator_somatic_26_JOB_ID:$gatk_variant_annotator_somatic_27_JOB_ID:$gatk_variant_annotator_somatic_28_JOB_ID:$gatk_variant_annotator_somatic_29_JOB_ID:$gatk_variant_annotator_somatic_30_JOB_ID:$gatk_variant_annotator_somatic_31_JOB_ID:$gatk_variant_annotator_somatic_32_JOB_ID:$gatk_variant_annotator_somatic_33_JOB_ID:$gatk_variant_annotator_somatic_34_JOB_ID:$gatk_variant_annotator_somatic_35_JOB_ID:$gatk_variant_annotator_somatic_36_JOB_ID:$gatk_variant_annotator_somatic_37_JOB_ID:$gatk_variant_annotator_somatic_38_JOB_ID:$gatk_variant_annotator_somatic_39_JOB_ID:$gatk_variant_annotator_somatic_40_JOB_ID
JOB_DONE=job_output/merge_gatk_variant_annotator_somatic/merge_gatk_variant_annotator.somatic.PRO-00035_OS_T.e0f4a798f6f1c23326dc2bc6545e2c0d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_gatk_variant_annotator.somatic.PRO-00035_OS_T.e0f4a798f6f1c23326dc2bc6545e2c0d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.0.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.1.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.2.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.3.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.4.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.5.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.6.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.7.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.8.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.9.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.10.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.11.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.12.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.13.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.14.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.15.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.16.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.17.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.18.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.somatic.vt.annot.others.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz && \
tabix -pvcf pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz
merge_gatk_variant_annotator.somatic.PRO-00035_OS_T.e0f4a798f6f1c23326dc2bc6545e2c0d.mugqic.done
chmod 755 $COMMAND
merge_gatk_variant_annotator_somatic_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_gatk_variant_annotator_somatic_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_gatk_variant_annotator_somatic_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: ensemble_germline_loh
#-------------------------------------------------------------------------------
STEP=ensemble_germline_loh
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: ensemble_germline_loh_1_JOB_ID: bcbio_ensemble_germline.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=bcbio_ensemble_germline.PRO-00089_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_2_JOB_ID:$merge_varscan2_1_JOB_ID:$merge_filter_paired_vardict_1_JOB_ID
JOB_DONE=job_output/ensemble_germline_loh/bcbio_ensemble_germline.PRO-00089_OS_T.511b84985bb0c9e73379f659d41f2b6d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bcbio_ensemble_germline.PRO-00089_OS_T.511b84985bb0c9e73379f659d41f2b6d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcbio.variation.recall/0.2.6 mugqic/bcftools/1.15 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T && \
touch pairedVariants/ensemble/PRO-00089_OS_T && \
$BCBIO_VARIATION_RECALL_HOME/bcbio.variation.recall ensemble \
  --cores 6 --numpass 1 --names strelka2,vardict,varscan2 \
  pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.strelka2.germline.vt.vcf.gz    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.vardict.germline.vt.vcf.gz    \
  pairedVariants/PRO-00089_OS_T/PRO-00089_OS_T.varscan2.germline.vt.vcf.gz
bcbio_ensemble_germline.PRO-00089_OS_T.511b84985bb0c9e73379f659d41f2b6d.mugqic.done
chmod 755 $COMMAND
ensemble_germline_loh_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 24G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$ensemble_germline_loh_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$ensemble_germline_loh_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: ensemble_germline_loh_2_JOB_ID: bcbio_ensemble_germline.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=bcbio_ensemble_germline.PRO-00035_OS_T
JOB_DEPENDENCIES=$strelka2_paired_germline_4_JOB_ID:$merge_varscan2_2_JOB_ID:$merge_filter_paired_vardict_2_JOB_ID
JOB_DONE=job_output/ensemble_germline_loh/bcbio_ensemble_germline.PRO-00035_OS_T.1ea153acecc578aff0fbae1318eb6b7a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'bcbio_ensemble_germline.PRO-00035_OS_T.1ea153acecc578aff0fbae1318eb6b7a.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcbio.variation.recall/0.2.6 mugqic/bcftools/1.15 mugqic/java/openjdk-jdk1.8.0_72 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T && \
touch pairedVariants/ensemble/PRO-00035_OS_T && \
$BCBIO_VARIATION_RECALL_HOME/bcbio.variation.recall ensemble \
  --cores 6 --numpass 1 --names strelka2,vardict,varscan2 \
  pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.strelka2.germline.vt.vcf.gz    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.vardict.germline.vt.vcf.gz    \
  pairedVariants/PRO-00035_OS_T/PRO-00035_OS_T.varscan2.germline.vt.vcf.gz
bcbio_ensemble_germline.PRO-00035_OS_T.1ea153acecc578aff0fbae1318eb6b7a.mugqic.done
chmod 755 $COMMAND
ensemble_germline_loh_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 24G -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$ensemble_germline_loh_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$ensemble_germline_loh_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: gatk_variant_annotator_germline
#-------------------------------------------------------------------------------
STEP=gatk_variant_annotator_germline
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_1_JOB_ID: gatk_variant_annotator_germline.0.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.0.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.0.PRO-00089_OS_T.5c520542a8ba1d5969b04535122424d9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.0.PRO-00089_OS_T.5c520542a8ba1d5969b04535122424d9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.0.vcf.gz \
  --intervals 1
gatk_variant_annotator_germline.0.PRO-00089_OS_T.5c520542a8ba1d5969b04535122424d9.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_2_JOB_ID: gatk_variant_annotator_germline.1.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.1.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.1.PRO-00089_OS_T.48cbcb8fd3951eb5aafd4a3cc9cecc2d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.1.PRO-00089_OS_T.48cbcb8fd3951eb5aafd4a3cc9cecc2d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.1.vcf.gz \
  --intervals 2
gatk_variant_annotator_germline.1.PRO-00089_OS_T.48cbcb8fd3951eb5aafd4a3cc9cecc2d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_3_JOB_ID: gatk_variant_annotator_germline.2.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.2.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.2.PRO-00089_OS_T.beb86102eea80615fee193d6438e899f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.2.PRO-00089_OS_T.beb86102eea80615fee193d6438e899f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.2.vcf.gz \
  --intervals 3
gatk_variant_annotator_germline.2.PRO-00089_OS_T.beb86102eea80615fee193d6438e899f.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_4_JOB_ID: gatk_variant_annotator_germline.3.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.3.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.3.PRO-00089_OS_T.7f35b6eaf211e228ea7e8a5f0b9a6bb3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.3.PRO-00089_OS_T.7f35b6eaf211e228ea7e8a5f0b9a6bb3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.3.vcf.gz \
  --intervals 4
gatk_variant_annotator_germline.3.PRO-00089_OS_T.7f35b6eaf211e228ea7e8a5f0b9a6bb3.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_5_JOB_ID: gatk_variant_annotator_germline.4.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.4.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.4.PRO-00089_OS_T.bcb446e04570b998057511818f989833.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.4.PRO-00089_OS_T.bcb446e04570b998057511818f989833.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.4.vcf.gz \
  --intervals 5
gatk_variant_annotator_germline.4.PRO-00089_OS_T.bcb446e04570b998057511818f989833.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_6_JOB_ID: gatk_variant_annotator_germline.5.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.5.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.5.PRO-00089_OS_T.561b06e687281c78cf222f42692cd61c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.5.PRO-00089_OS_T.561b06e687281c78cf222f42692cd61c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.5.vcf.gz \
  --intervals 6
gatk_variant_annotator_germline.5.PRO-00089_OS_T.561b06e687281c78cf222f42692cd61c.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_7_JOB_ID: gatk_variant_annotator_germline.6.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.6.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.6.PRO-00089_OS_T.0032ed378bee53370fb1f606bfc9179e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.6.PRO-00089_OS_T.0032ed378bee53370fb1f606bfc9179e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.6.vcf.gz \
  --intervals 7
gatk_variant_annotator_germline.6.PRO-00089_OS_T.0032ed378bee53370fb1f606bfc9179e.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_8_JOB_ID: gatk_variant_annotator_germline.7.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.7.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.7.PRO-00089_OS_T.b256d682c52cacf091a8cc8079d67103.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.7.PRO-00089_OS_T.b256d682c52cacf091a8cc8079d67103.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.7.vcf.gz \
  --intervals 8
gatk_variant_annotator_germline.7.PRO-00089_OS_T.b256d682c52cacf091a8cc8079d67103.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_9_JOB_ID: gatk_variant_annotator_germline.8.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.8.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.8.PRO-00089_OS_T.91daeaadadfffe5ff053dc7835483396.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.8.PRO-00089_OS_T.91daeaadadfffe5ff053dc7835483396.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.8.vcf.gz \
  --intervals 9
gatk_variant_annotator_germline.8.PRO-00089_OS_T.91daeaadadfffe5ff053dc7835483396.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_9_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_9_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_9_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_10_JOB_ID: gatk_variant_annotator_germline.9.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.9.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.9.PRO-00089_OS_T.42e8cd8a750439bfe62429719b68214d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.9.PRO-00089_OS_T.42e8cd8a750439bfe62429719b68214d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.9.vcf.gz \
  --intervals 10
gatk_variant_annotator_germline.9.PRO-00089_OS_T.42e8cd8a750439bfe62429719b68214d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_10_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_10_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_10_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_11_JOB_ID: gatk_variant_annotator_germline.10.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.10.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.10.PRO-00089_OS_T.0208299e5e7ecd4a717fce4078b9ea65.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.10.PRO-00089_OS_T.0208299e5e7ecd4a717fce4078b9ea65.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.10.vcf.gz \
  --intervals 11
gatk_variant_annotator_germline.10.PRO-00089_OS_T.0208299e5e7ecd4a717fce4078b9ea65.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_11_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_11_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_11_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_12_JOB_ID: gatk_variant_annotator_germline.11.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.11.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.11.PRO-00089_OS_T.3184aa9c885ba6db62d2d1898cf25e49.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.11.PRO-00089_OS_T.3184aa9c885ba6db62d2d1898cf25e49.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.11.vcf.gz \
  --intervals 12
gatk_variant_annotator_germline.11.PRO-00089_OS_T.3184aa9c885ba6db62d2d1898cf25e49.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_12_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_12_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_12_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_13_JOB_ID: gatk_variant_annotator_germline.12.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.12.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.12.PRO-00089_OS_T.3d22b1b7fcfedc796cceaec4a9a53ba5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.12.PRO-00089_OS_T.3d22b1b7fcfedc796cceaec4a9a53ba5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.12.vcf.gz \
  --intervals 13
gatk_variant_annotator_germline.12.PRO-00089_OS_T.3d22b1b7fcfedc796cceaec4a9a53ba5.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_13_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_13_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_13_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_14_JOB_ID: gatk_variant_annotator_germline.13.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.13.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.13.PRO-00089_OS_T.b7a053cfeaff7a7f480e660c4c85e38b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.13.PRO-00089_OS_T.b7a053cfeaff7a7f480e660c4c85e38b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.13.vcf.gz \
  --intervals 14
gatk_variant_annotator_germline.13.PRO-00089_OS_T.b7a053cfeaff7a7f480e660c4c85e38b.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_14_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_14_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_14_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_15_JOB_ID: gatk_variant_annotator_germline.14.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.14.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.14.PRO-00089_OS_T.5f28fd05caf24aa4b5462e763cac7e03.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.14.PRO-00089_OS_T.5f28fd05caf24aa4b5462e763cac7e03.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.14.vcf.gz \
  --intervals 15
gatk_variant_annotator_germline.14.PRO-00089_OS_T.5f28fd05caf24aa4b5462e763cac7e03.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_15_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_15_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_15_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_16_JOB_ID: gatk_variant_annotator_germline.15.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.15.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.15.PRO-00089_OS_T.92fc8639269f01f3edb10ca2d1341020.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.15.PRO-00089_OS_T.92fc8639269f01f3edb10ca2d1341020.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.15.vcf.gz \
  --intervals 16
gatk_variant_annotator_germline.15.PRO-00089_OS_T.92fc8639269f01f3edb10ca2d1341020.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_16_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_16_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_16_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_17_JOB_ID: gatk_variant_annotator_germline.16.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.16.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.16.PRO-00089_OS_T.f591191f36b751642c4d532c08176947.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.16.PRO-00089_OS_T.f591191f36b751642c4d532c08176947.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.16.vcf.gz \
  --intervals 17
gatk_variant_annotator_germline.16.PRO-00089_OS_T.f591191f36b751642c4d532c08176947.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_17_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_17_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_17_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_18_JOB_ID: gatk_variant_annotator_germline.17.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.17.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.17.PRO-00089_OS_T.c2bbfdf767c02826e997bb3c4ea6a181.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.17.PRO-00089_OS_T.c2bbfdf767c02826e997bb3c4ea6a181.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.17.vcf.gz \
  --intervals 18
gatk_variant_annotator_germline.17.PRO-00089_OS_T.c2bbfdf767c02826e997bb3c4ea6a181.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_18_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_18_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_18_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_19_JOB_ID: gatk_variant_annotator_germline.18.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.18.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.18.PRO-00089_OS_T.3d56d29682747450fa25d0c9a5eaee72.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.18.PRO-00089_OS_T.3d56d29682747450fa25d0c9a5eaee72.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.18.vcf.gz \
  --intervals 19
gatk_variant_annotator_germline.18.PRO-00089_OS_T.3d56d29682747450fa25d0c9a5eaee72.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_19_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_19_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_19_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_20_JOB_ID: gatk_variant_annotator_germline.others.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.others.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID:$ensemble_germline_loh_1_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.others.PRO-00089_OS_T.67ec1cadf65e1d33a01eacac8b479558.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.others.PRO-00089_OS_T.67ec1cadf65e1d33a01eacac8b479558.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.others.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals GL000207.1 \
  --excludeIntervals GL000226.1 \
  --excludeIntervals GL000229.1 \
  --excludeIntervals GL000231.1 \
  --excludeIntervals GL000210.1 \
  --excludeIntervals GL000239.1 \
  --excludeIntervals GL000235.1 \
  --excludeIntervals GL000201.1 \
  --excludeIntervals GL000247.1 \
  --excludeIntervals GL000245.1 \
  --excludeIntervals GL000197.1 \
  --excludeIntervals GL000203.1 \
  --excludeIntervals GL000246.1 \
  --excludeIntervals GL000249.1 \
  --excludeIntervals GL000196.1 \
  --excludeIntervals GL000248.1 \
  --excludeIntervals GL000244.1 \
  --excludeIntervals GL000238.1 \
  --excludeIntervals GL000202.1 \
  --excludeIntervals GL000234.1 \
  --excludeIntervals GL000232.1 \
  --excludeIntervals GL000206.1 \
  --excludeIntervals GL000240.1 \
  --excludeIntervals GL000236.1 \
  --excludeIntervals GL000241.1 \
  --excludeIntervals GL000243.1 \
  --excludeIntervals GL000242.1 \
  --excludeIntervals GL000230.1 \
  --excludeIntervals GL000237.1 \
  --excludeIntervals GL000233.1 \
  --excludeIntervals GL000204.1 \
  --excludeIntervals GL000198.1 \
  --excludeIntervals GL000208.1 \
  --excludeIntervals GL000191.1 \
  --excludeIntervals GL000227.1 \
  --excludeIntervals GL000228.1 \
  --excludeIntervals GL000214.1 \
  --excludeIntervals GL000221.1 \
  --excludeIntervals GL000209.1 \
  --excludeIntervals GL000218.1 \
  --excludeIntervals GL000220.1 \
  --excludeIntervals GL000213.1 \
  --excludeIntervals GL000211.1 \
  --excludeIntervals GL000199.1 \
  --excludeIntervals GL000217.1 \
  --excludeIntervals GL000216.1 \
  --excludeIntervals GL000215.1 \
  --excludeIntervals GL000205.1 \
  --excludeIntervals GL000219.1 \
  --excludeIntervals GL000224.1 \
  --excludeIntervals GL000223.1 \
  --excludeIntervals GL000195.1 \
  --excludeIntervals GL000212.1 \
  --excludeIntervals GL000222.1 \
  --excludeIntervals GL000200.1 \
  --excludeIntervals GL000193.1 \
  --excludeIntervals GL000194.1 \
  --excludeIntervals GL000225.1 \
  --excludeIntervals GL000192.1
gatk_variant_annotator_germline.others.PRO-00089_OS_T.67ec1cadf65e1d33a01eacac8b479558.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_20_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_20_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_20_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_21_JOB_ID: gatk_variant_annotator_germline.0.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.0.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.0.PRO-00035_OS_T.68d9e5e63ec0f78fafaf7c550ff12e74.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.0.PRO-00035_OS_T.68d9e5e63ec0f78fafaf7c550ff12e74.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.0.vcf.gz \
  --intervals 1
gatk_variant_annotator_germline.0.PRO-00035_OS_T.68d9e5e63ec0f78fafaf7c550ff12e74.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_21_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_21_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_21_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_22_JOB_ID: gatk_variant_annotator_germline.1.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.1.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.1.PRO-00035_OS_T.6d30e8477b4fa87ad7e674b27d5700cc.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.1.PRO-00035_OS_T.6d30e8477b4fa87ad7e674b27d5700cc.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.1.vcf.gz \
  --intervals 2
gatk_variant_annotator_germline.1.PRO-00035_OS_T.6d30e8477b4fa87ad7e674b27d5700cc.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_22_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_22_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_22_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_23_JOB_ID: gatk_variant_annotator_germline.2.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.2.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.2.PRO-00035_OS_T.7aed26558ae8f46c5f44a79ada59ce9d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.2.PRO-00035_OS_T.7aed26558ae8f46c5f44a79ada59ce9d.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.2.vcf.gz \
  --intervals 3
gatk_variant_annotator_germline.2.PRO-00035_OS_T.7aed26558ae8f46c5f44a79ada59ce9d.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_23_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_23_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_23_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_24_JOB_ID: gatk_variant_annotator_germline.3.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.3.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.3.PRO-00035_OS_T.91cc234f8f8e328aa8fe47770e1600d9.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.3.PRO-00035_OS_T.91cc234f8f8e328aa8fe47770e1600d9.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.3.vcf.gz \
  --intervals 4
gatk_variant_annotator_germline.3.PRO-00035_OS_T.91cc234f8f8e328aa8fe47770e1600d9.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_24_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_24_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_24_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_25_JOB_ID: gatk_variant_annotator_germline.4.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.4.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.4.PRO-00035_OS_T.261736091b41c535df9e43f4c713fb11.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.4.PRO-00035_OS_T.261736091b41c535df9e43f4c713fb11.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.4.vcf.gz \
  --intervals 5
gatk_variant_annotator_germline.4.PRO-00035_OS_T.261736091b41c535df9e43f4c713fb11.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_25_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_25_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_25_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_26_JOB_ID: gatk_variant_annotator_germline.5.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.5.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.5.PRO-00035_OS_T.0288890f2715f20c969382a89fcecee0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.5.PRO-00035_OS_T.0288890f2715f20c969382a89fcecee0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.5.vcf.gz \
  --intervals 6
gatk_variant_annotator_germline.5.PRO-00035_OS_T.0288890f2715f20c969382a89fcecee0.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_26_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_26_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_26_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_27_JOB_ID: gatk_variant_annotator_germline.6.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.6.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.6.PRO-00035_OS_T.7a9b6c59804ef67899dd1858f7998f84.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.6.PRO-00035_OS_T.7a9b6c59804ef67899dd1858f7998f84.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.6.vcf.gz \
  --intervals 7
gatk_variant_annotator_germline.6.PRO-00035_OS_T.7a9b6c59804ef67899dd1858f7998f84.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_27_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_27_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_27_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_28_JOB_ID: gatk_variant_annotator_germline.7.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.7.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.7.PRO-00035_OS_T.f5c86d1f7433f74ab27a8d25487d2aa2.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.7.PRO-00035_OS_T.f5c86d1f7433f74ab27a8d25487d2aa2.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.7.vcf.gz \
  --intervals 8
gatk_variant_annotator_germline.7.PRO-00035_OS_T.f5c86d1f7433f74ab27a8d25487d2aa2.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_28_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_28_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_28_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_29_JOB_ID: gatk_variant_annotator_germline.8.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.8.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.8.PRO-00035_OS_T.e2b1617124ab8c59e681ecf0adea03e0.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.8.PRO-00035_OS_T.e2b1617124ab8c59e681ecf0adea03e0.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.8.vcf.gz \
  --intervals 9
gatk_variant_annotator_germline.8.PRO-00035_OS_T.e2b1617124ab8c59e681ecf0adea03e0.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_29_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_29_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_29_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_30_JOB_ID: gatk_variant_annotator_germline.9.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.9.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.9.PRO-00035_OS_T.e1148b7e3e2591739b19b91f46d4c3e5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.9.PRO-00035_OS_T.e1148b7e3e2591739b19b91f46d4c3e5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.9.vcf.gz \
  --intervals 10
gatk_variant_annotator_germline.9.PRO-00035_OS_T.e1148b7e3e2591739b19b91f46d4c3e5.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_30_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_30_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_30_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_31_JOB_ID: gatk_variant_annotator_germline.10.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.10.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.10.PRO-00035_OS_T.54e4030209bf110c3f3eaf47c0bdb904.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.10.PRO-00035_OS_T.54e4030209bf110c3f3eaf47c0bdb904.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.10.vcf.gz \
  --intervals 11
gatk_variant_annotator_germline.10.PRO-00035_OS_T.54e4030209bf110c3f3eaf47c0bdb904.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_31_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_31_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_31_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_32_JOB_ID: gatk_variant_annotator_germline.11.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.11.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.11.PRO-00035_OS_T.d3edc03d560021225cfc326d153ac467.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.11.PRO-00035_OS_T.d3edc03d560021225cfc326d153ac467.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.11.vcf.gz \
  --intervals 12
gatk_variant_annotator_germline.11.PRO-00035_OS_T.d3edc03d560021225cfc326d153ac467.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_32_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_32_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_32_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_33_JOB_ID: gatk_variant_annotator_germline.12.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.12.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.12.PRO-00035_OS_T.cc50b2831e836cd98dffa4f06a8e4a49.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.12.PRO-00035_OS_T.cc50b2831e836cd98dffa4f06a8e4a49.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.12.vcf.gz \
  --intervals 13
gatk_variant_annotator_germline.12.PRO-00035_OS_T.cc50b2831e836cd98dffa4f06a8e4a49.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_33_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_33_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_33_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_34_JOB_ID: gatk_variant_annotator_germline.13.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.13.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.13.PRO-00035_OS_T.42cf58e93fa0e2ad1fa9aaf1ca50b3f5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.13.PRO-00035_OS_T.42cf58e93fa0e2ad1fa9aaf1ca50b3f5.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.13.vcf.gz \
  --intervals 14
gatk_variant_annotator_germline.13.PRO-00035_OS_T.42cf58e93fa0e2ad1fa9aaf1ca50b3f5.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_34_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_34_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_34_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_35_JOB_ID: gatk_variant_annotator_germline.14.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.14.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.14.PRO-00035_OS_T.d75bdbcbe6a82bad8a92124c5c4110ef.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.14.PRO-00035_OS_T.d75bdbcbe6a82bad8a92124c5c4110ef.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.14.vcf.gz \
  --intervals 15
gatk_variant_annotator_germline.14.PRO-00035_OS_T.d75bdbcbe6a82bad8a92124c5c4110ef.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_35_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_35_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_35_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_36_JOB_ID: gatk_variant_annotator_germline.15.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.15.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.15.PRO-00035_OS_T.25b2a792d89dc489b8ea3f926c19a1fc.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.15.PRO-00035_OS_T.25b2a792d89dc489b8ea3f926c19a1fc.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.15.vcf.gz \
  --intervals 16
gatk_variant_annotator_germline.15.PRO-00035_OS_T.25b2a792d89dc489b8ea3f926c19a1fc.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_36_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_36_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_36_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_37_JOB_ID: gatk_variant_annotator_germline.16.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.16.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.16.PRO-00035_OS_T.161098c4688562f20c78fa08eef80703.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.16.PRO-00035_OS_T.161098c4688562f20c78fa08eef80703.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.16.vcf.gz \
  --intervals 17
gatk_variant_annotator_germline.16.PRO-00035_OS_T.161098c4688562f20c78fa08eef80703.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_37_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_37_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_37_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_38_JOB_ID: gatk_variant_annotator_germline.17.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.17.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.17.PRO-00035_OS_T.43a9b854a221a9a6aeaf286b9a058967.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.17.PRO-00035_OS_T.43a9b854a221a9a6aeaf286b9a058967.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.17.vcf.gz \
  --intervals 18
gatk_variant_annotator_germline.17.PRO-00035_OS_T.43a9b854a221a9a6aeaf286b9a058967.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_38_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_38_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_38_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_39_JOB_ID: gatk_variant_annotator_germline.18.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.18.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.18.PRO-00035_OS_T.b17f1747a93ae265b7a122f290ceb226.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.18.PRO-00035_OS_T.b17f1747a93ae265b7a122f290ceb226.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.18.vcf.gz \
  --intervals 19
gatk_variant_annotator_germline.18.PRO-00035_OS_T.b17f1747a93ae265b7a122f290ceb226.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_39_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_39_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_39_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: gatk_variant_annotator_germline_40_JOB_ID: gatk_variant_annotator_germline.others.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=gatk_variant_annotator_germline.others.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID:$ensemble_germline_loh_2_JOB_ID
JOB_DONE=job_output/gatk_variant_annotator_germline/gatk_variant_annotator_germline.others.PRO-00035_OS_T.015ab8ceb08f6c9c6e6d9aa6b125a8a8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'gatk_variant_annotator_germline.others.PRO-00035_OS_T.015ab8ceb08f6c9c6e6d9aa6b125a8a8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/java/openjdk-jdk1.8.0_72 mugqic/GenomeAnalysisTK/3.7 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
touch pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation && \
java -Djava.io.tmpdir=${SLURM_TMPDIR} -XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Xmx12000M -jar $GATK_JAR \
  --analysis_type VariantAnnotator -nt 2 --dbsnp $MUGQIC_INSTALL_HOME/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.dbSNP142.vcf.gz -A HomopolymerRun -A Coverage -A DepthPerAlleleBySample -A ClippingRankSumTest -A BaseQualityRankSumTest -A MappingQualityRankSumTest -A MappingQualityZeroBySample -A LowMQ -A ReadPosRankSumTest -A GCContent \
  --disable_auto_index_creation_and_locking_when_reading_rods \
  --reference_sequence /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --input_file alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam --input_file alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  --variant pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.vcf.gz \
  --out pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.others.vcf.gz \
  --excludeIntervals 1 \
  --excludeIntervals 2 \
  --excludeIntervals 3 \
  --excludeIntervals 4 \
  --excludeIntervals 5 \
  --excludeIntervals 6 \
  --excludeIntervals 7 \
  --excludeIntervals 8 \
  --excludeIntervals 9 \
  --excludeIntervals 10 \
  --excludeIntervals 11 \
  --excludeIntervals 12 \
  --excludeIntervals 13 \
  --excludeIntervals 14 \
  --excludeIntervals 15 \
  --excludeIntervals 16 \
  --excludeIntervals 17 \
  --excludeIntervals 18 \
  --excludeIntervals 19 \
  --excludeIntervals GL000207.1 \
  --excludeIntervals GL000226.1 \
  --excludeIntervals GL000229.1 \
  --excludeIntervals GL000231.1 \
  --excludeIntervals GL000210.1 \
  --excludeIntervals GL000239.1 \
  --excludeIntervals GL000235.1 \
  --excludeIntervals GL000201.1 \
  --excludeIntervals GL000247.1 \
  --excludeIntervals GL000245.1 \
  --excludeIntervals GL000197.1 \
  --excludeIntervals GL000203.1 \
  --excludeIntervals GL000246.1 \
  --excludeIntervals GL000249.1 \
  --excludeIntervals GL000196.1 \
  --excludeIntervals GL000248.1 \
  --excludeIntervals GL000244.1 \
  --excludeIntervals GL000238.1 \
  --excludeIntervals GL000202.1 \
  --excludeIntervals GL000234.1 \
  --excludeIntervals GL000232.1 \
  --excludeIntervals GL000206.1 \
  --excludeIntervals GL000240.1 \
  --excludeIntervals GL000236.1 \
  --excludeIntervals GL000241.1 \
  --excludeIntervals GL000243.1 \
  --excludeIntervals GL000242.1 \
  --excludeIntervals GL000230.1 \
  --excludeIntervals GL000237.1 \
  --excludeIntervals GL000233.1 \
  --excludeIntervals GL000204.1 \
  --excludeIntervals GL000198.1 \
  --excludeIntervals GL000208.1 \
  --excludeIntervals GL000191.1 \
  --excludeIntervals GL000227.1 \
  --excludeIntervals GL000228.1 \
  --excludeIntervals GL000214.1 \
  --excludeIntervals GL000221.1 \
  --excludeIntervals GL000209.1 \
  --excludeIntervals GL000218.1 \
  --excludeIntervals GL000220.1 \
  --excludeIntervals GL000213.1 \
  --excludeIntervals GL000211.1 \
  --excludeIntervals GL000199.1 \
  --excludeIntervals GL000217.1 \
  --excludeIntervals GL000216.1 \
  --excludeIntervals GL000215.1 \
  --excludeIntervals GL000205.1 \
  --excludeIntervals GL000219.1 \
  --excludeIntervals GL000224.1 \
  --excludeIntervals GL000223.1 \
  --excludeIntervals GL000195.1 \
  --excludeIntervals GL000212.1 \
  --excludeIntervals GL000222.1 \
  --excludeIntervals GL000200.1 \
  --excludeIntervals GL000193.1 \
  --excludeIntervals GL000194.1 \
  --excludeIntervals GL000225.1 \
  --excludeIntervals GL000192.1
gatk_variant_annotator_germline.others.PRO-00035_OS_T.015ab8ceb08f6c9c6e6d9aa6b125a8a8.mugqic.done
chmod 755 $COMMAND
gatk_variant_annotator_germline_40_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$gatk_variant_annotator_germline_40_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$gatk_variant_annotator_germline_40_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: merge_gatk_variant_annotator_germline
#-------------------------------------------------------------------------------
STEP=merge_gatk_variant_annotator_germline
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: merge_gatk_variant_annotator_germline_1_JOB_ID: merge_gatk_variant_annotator.germline.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_gatk_variant_annotator.germline.PRO-00089_OS_T
JOB_DEPENDENCIES=$gatk_variant_annotator_germline_1_JOB_ID:$gatk_variant_annotator_germline_2_JOB_ID:$gatk_variant_annotator_germline_3_JOB_ID:$gatk_variant_annotator_germline_4_JOB_ID:$gatk_variant_annotator_germline_5_JOB_ID:$gatk_variant_annotator_germline_6_JOB_ID:$gatk_variant_annotator_germline_7_JOB_ID:$gatk_variant_annotator_germline_8_JOB_ID:$gatk_variant_annotator_germline_9_JOB_ID:$gatk_variant_annotator_germline_10_JOB_ID:$gatk_variant_annotator_germline_11_JOB_ID:$gatk_variant_annotator_germline_12_JOB_ID:$gatk_variant_annotator_germline_13_JOB_ID:$gatk_variant_annotator_germline_14_JOB_ID:$gatk_variant_annotator_germline_15_JOB_ID:$gatk_variant_annotator_germline_16_JOB_ID:$gatk_variant_annotator_germline_17_JOB_ID:$gatk_variant_annotator_germline_18_JOB_ID:$gatk_variant_annotator_germline_19_JOB_ID:$gatk_variant_annotator_germline_20_JOB_ID
JOB_DONE=job_output/merge_gatk_variant_annotator_germline/merge_gatk_variant_annotator.germline.PRO-00089_OS_T.3864af1a50d713a4cbf8cfb8e54c99f4.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_gatk_variant_annotator.germline.PRO-00089_OS_T.3864af1a50d713a4cbf8cfb8e54c99f4.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.0.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.1.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.2.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.3.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.4.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.5.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.6.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.7.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.8.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.9.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.10.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.11.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.12.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.13.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.14.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.15.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.16.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.17.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.18.vcf.gz \
  pairedVariants/ensemble/PRO-00089_OS_T/rawAnnotation/PRO-00089_OS_T.ensemble.germline.vt.annot.others.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz && \
tabix -pvcf pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz
merge_gatk_variant_annotator.germline.PRO-00089_OS_T.3864af1a50d713a4cbf8cfb8e54c99f4.mugqic.done
chmod 755 $COMMAND
merge_gatk_variant_annotator_germline_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_gatk_variant_annotator_germline_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_gatk_variant_annotator_germline_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: merge_gatk_variant_annotator_germline_2_JOB_ID: merge_gatk_variant_annotator.germline.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=merge_gatk_variant_annotator.germline.PRO-00035_OS_T
JOB_DEPENDENCIES=$gatk_variant_annotator_germline_21_JOB_ID:$gatk_variant_annotator_germline_22_JOB_ID:$gatk_variant_annotator_germline_23_JOB_ID:$gatk_variant_annotator_germline_24_JOB_ID:$gatk_variant_annotator_germline_25_JOB_ID:$gatk_variant_annotator_germline_26_JOB_ID:$gatk_variant_annotator_germline_27_JOB_ID:$gatk_variant_annotator_germline_28_JOB_ID:$gatk_variant_annotator_germline_29_JOB_ID:$gatk_variant_annotator_germline_30_JOB_ID:$gatk_variant_annotator_germline_31_JOB_ID:$gatk_variant_annotator_germline_32_JOB_ID:$gatk_variant_annotator_germline_33_JOB_ID:$gatk_variant_annotator_germline_34_JOB_ID:$gatk_variant_annotator_germline_35_JOB_ID:$gatk_variant_annotator_germline_36_JOB_ID:$gatk_variant_annotator_germline_37_JOB_ID:$gatk_variant_annotator_germline_38_JOB_ID:$gatk_variant_annotator_germline_39_JOB_ID:$gatk_variant_annotator_germline_40_JOB_ID
JOB_DONE=job_output/merge_gatk_variant_annotator_germline/merge_gatk_variant_annotator.germline.PRO-00035_OS_T.7281d5877b95aa9685fa2973af70957f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'merge_gatk_variant_annotator.germline.PRO-00035_OS_T.7281d5877b95aa9685fa2973af70957f.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
bcftools \
  concat -a  \
   \
   \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.0.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.1.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.2.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.3.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.4.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.5.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.6.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.7.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.8.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.9.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.10.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.11.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.12.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.13.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.14.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.15.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.16.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.17.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.18.vcf.gz \
  pairedVariants/ensemble/PRO-00035_OS_T/rawAnnotation/PRO-00035_OS_T.ensemble.germline.vt.annot.others.vcf.gz | \
bgzip -cf \
 > \
pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz && \
tabix -pvcf pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz
merge_gatk_variant_annotator.germline.PRO-00035_OS_T.7281d5877b95aa9685fa2973af70957f.mugqic.done
chmod 755 $COMMAND
merge_gatk_variant_annotator_germline_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 2 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$merge_gatk_variant_annotator_germline_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$merge_gatk_variant_annotator_germline_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: cnvkit_batch
#-------------------------------------------------------------------------------
STEP=cnvkit_batch
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_1_JOB_ID: cnvkit_batch.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.PRO-00089_OS_T
JOB_DEPENDENCIES=$recalibration_2_JOB_ID:$recalibration_4_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.PRO-00089_OS_T.8fcca51623939020cdb5ee28b9b3d6c8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.PRO-00089_OS_T.8fcca51623939020cdb5ee28b9b3d6c8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 && \
mkdir -p SVariants/PRO-00089_OS_T/rawCNVkit && \
touch SVariants/PRO-00089_OS_T/rawCNVkit && \
cnvkit.py batch -m wgs --target-avg-size 5000 --short-names \
  -p 6 \
  --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --access /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.access-5k-mappable.bed \
  --annotate /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Ensembl75.ref_flat.tsv \
   \
   \
  --output-reference SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.reference.cnn \
  --output-dir SVariants/PRO-00089_OS_T/rawCNVkit \
  --normal alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam
cnvkit_batch.PRO-00089_OS_T.8fcca51623939020cdb5ee28b9b3d6c8.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_2_JOB_ID: cnvkit_batch.correction.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.correction.PRO-00089_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_1_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.correction.PRO-00089_OS_T.3550b2879085af4654ffc4b7452fa0e7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.correction.PRO-00089_OS_T.3550b2879085af4654ffc4b7452fa0e7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 && \
mkdir -p SVariants/PRO-00089_OS_T/rawCNVkit && \
touch SVariants/PRO-00089_OS_T/rawCNVkit && \
cnvkit.py fix --no-edge \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.sorted.dup.targetcoverage.cnn \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.sorted.dup.antitargetcoverage.cnn \
   \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.reference.cnn \
  -o SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cnr && \
cnvkit.py segment -m cbs -t 0.00001 --drop-low-coverage -p 6 \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cnr   \
  -o SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cns
cnvkit_batch.correction.PRO-00089_OS_T.3550b2879085af4654ffc4b7452fa0e7.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_3_JOB_ID: cnvkit_batch.call.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.call.PRO-00089_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_2_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.call.PRO-00089_OS_T.b907f8296ee62ddc166c818991f4d2b7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.call.PRO-00089_OS_T.b907f8296ee62ddc166c818991f4d2b7.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 mugqic/htslib/1.14 && \
mkdir -p SVariants/PRO-00089_OS_T/rawCNVkit && \
touch SVariants/PRO-00089_OS_T/rawCNVkit && \
cnvkit.py call  \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cns \
  -o SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.call.cns && \
cnvkit.py export vcf \
  -i "PRO-00089_OS_T" \
   \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.call.cns | \
bgzip -cf \
 > \
SVariants/PRO-00089_OS_T/PRO-00089_OS_T.cnvkit.vcf.gz && \
tabix -pvcf SVariants/PRO-00089_OS_T/PRO-00089_OS_T.cnvkit.vcf.gz
cnvkit_batch.call.PRO-00089_OS_T.b907f8296ee62ddc166c818991f4d2b7.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_4_JOB_ID: cnvkit_batch.metrics.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.metrics.PRO-00089_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_2_JOB_ID:$cnvkit_batch_3_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.metrics.PRO-00089_OS_T.509eab8b86aae32c1f3a7275c2a2b962.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.metrics.PRO-00089_OS_T.509eab8b86aae32c1f3a7275c2a2b962.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 && \
mkdir -p SVariants/PRO-00089_OS_T/rawCNVkit && \
touch SVariants/PRO-00089_OS_T/rawCNVkit && \
cnvkit.py metrics  \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cnr \
  -s SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.call.cns \
  -o SVariants/cnvkit_reference/PRO-00089_OS_T.metrics.tsv && \
cnvkit.py scatter  \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cnr \
  -s SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.call.cns \
  -o SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.scatter.pdf    && \
cnvkit.py diagram  \
  SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.cnr \
  -s SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.call.cns \
  -o SVariants/PRO-00089_OS_T/rawCNVkit/PRO-00089_OS_T.diagram.pdf
cnvkit_batch.metrics.PRO-00089_OS_T.509eab8b86aae32c1f3a7275c2a2b962.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_5_JOB_ID: cnvkit_batch.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.PRO-00035_OS_T
JOB_DEPENDENCIES=$recalibration_6_JOB_ID:$recalibration_8_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.PRO-00035_OS_T.1f6ba77cc3342c4e60773ec93e38156e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.PRO-00035_OS_T.1f6ba77cc3342c4e60773ec93e38156e.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 && \
mkdir -p SVariants/PRO-00035_OS_T/rawCNVkit && \
touch SVariants/PRO-00035_OS_T/rawCNVkit && \
cnvkit.py batch -m wgs --target-avg-size 5000 --short-names \
  -p 6 \
  --fasta /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/genome/Homo_sapiens.GRCh37.fa \
  --access /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.access-5k-mappable.bed \
  --annotate /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh37/annotations/Homo_sapiens.GRCh37.Ensembl75.ref_flat.tsv \
   \
   \
  --output-reference SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.reference.cnn \
  --output-dir SVariants/PRO-00035_OS_T/rawCNVkit \
  --normal alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam
cnvkit_batch.PRO-00035_OS_T.1f6ba77cc3342c4e60773ec93e38156e.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_6_JOB_ID: cnvkit_batch.correction.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.correction.PRO-00035_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_5_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.correction.PRO-00035_OS_T.4cf5290515938f6c3da5296e7b134e97.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.correction.PRO-00035_OS_T.4cf5290515938f6c3da5296e7b134e97.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 && \
mkdir -p SVariants/PRO-00035_OS_T/rawCNVkit && \
touch SVariants/PRO-00035_OS_T/rawCNVkit && \
cnvkit.py fix --no-edge \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.sorted.dup.targetcoverage.cnn \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.sorted.dup.antitargetcoverage.cnn \
   \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.reference.cnn \
  -o SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cnr && \
cnvkit.py segment -m cbs -t 0.00001 --drop-low-coverage -p 6 \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cnr   \
  -o SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cns
cnvkit_batch.correction.PRO-00035_OS_T.4cf5290515938f6c3da5296e7b134e97.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_7_JOB_ID: cnvkit_batch.call.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.call.PRO-00035_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_6_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.call.PRO-00035_OS_T.cad1da79a0bba6ae8f8a74fb26516dba.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.call.PRO-00035_OS_T.cad1da79a0bba6ae8f8a74fb26516dba.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 mugqic/htslib/1.14 && \
mkdir -p SVariants/PRO-00035_OS_T/rawCNVkit && \
touch SVariants/PRO-00035_OS_T/rawCNVkit && \
cnvkit.py call  \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cns \
  -o SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.call.cns && \
cnvkit.py export vcf \
  -i "PRO-00035_OS_T" \
   \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.call.cns | \
bgzip -cf \
 > \
SVariants/PRO-00035_OS_T/PRO-00035_OS_T.cnvkit.vcf.gz && \
tabix -pvcf SVariants/PRO-00035_OS_T/PRO-00035_OS_T.cnvkit.vcf.gz
cnvkit_batch.call.PRO-00035_OS_T.cad1da79a0bba6ae8f8a74fb26516dba.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: cnvkit_batch_8_JOB_ID: cnvkit_batch.metrics.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=cnvkit_batch.metrics.PRO-00035_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_6_JOB_ID:$cnvkit_batch_7_JOB_ID
JOB_DONE=job_output/cnvkit_batch/cnvkit_batch.metrics.PRO-00035_OS_T.cb09f0c2790d1e2256395f84b1b3d72c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'cnvkit_batch.metrics.PRO-00035_OS_T.cb09f0c2790d1e2256395f84b1b3d72c.mugqic.done' > $COMMAND
module purge && \
module load mugqic/CNVkit/0.9.9 mugqic/R_Bioconductor/3.2.3_3.2 && \
mkdir -p SVariants/PRO-00035_OS_T/rawCNVkit && \
touch SVariants/PRO-00035_OS_T/rawCNVkit && \
cnvkit.py metrics  \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cnr \
  -s SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.call.cns \
  -o SVariants/cnvkit_reference/PRO-00035_OS_T.metrics.tsv && \
cnvkit.py scatter  \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cnr \
  -s SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.call.cns \
  -o SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.scatter.pdf    && \
cnvkit.py diagram  \
  SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.cnr \
  -s SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.call.cns \
  -o SVariants/PRO-00035_OS_T/rawCNVkit/PRO-00035_OS_T.diagram.pdf
cnvkit_batch.metrics.PRO-00035_OS_T.cb09f0c2790d1e2256395f84b1b3d72c.mugqic.done
chmod 755 $COMMAND
cnvkit_batch_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=48:00:00 --mem-per-cpu 3900M -c 6 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$cnvkit_batch_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$cnvkit_batch_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: filter_ensemble_germline
#-------------------------------------------------------------------------------
STEP=filter_ensemble_germline
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: filter_ensemble_germline_1_JOB_ID: filter_ensemble.germline.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=filter_ensemble.germline.PRO-00089_OS_T
JOB_DEPENDENCIES=$merge_gatk_variant_annotator_germline_1_JOB_ID
JOB_DONE=job_output/filter_ensemble_germline/filter_ensemble.germline.PRO-00089_OS_T.2de599a4d3aa90d085d0e33f31529fae.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'filter_ensemble.germline.PRO-00089_OS_T.2de599a4d3aa90d085d0e33f31529fae.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/python/3.10.4 mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
python3 $PYTHON_TOOLS/format2pcgr.py \
	-i pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz \
	-o pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.2caller.vcf.gz \
	-f 2 \
	-v germline \
	-t PRO-00089_OS_T && \
bcftools \
  view -Oz -i'TDP>=10 && TVAF>=0.05 && NDP>=10 && NVAF>=0.05' \
   \
 pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.2caller.vcf.gz | \
bcftools \
  view -Oz -s ^PRO-00089_BLOOD \
   | \
bcftools \
  sort -Oz \
   \
 -o pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.2caller.flt.vcf.gz && \
tabix -pvcf  \
pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.2caller.flt.vcf.gz
filter_ensemble.germline.PRO-00089_OS_T.2de599a4d3aa90d085d0e33f31529fae.mugqic.done
chmod 755 $COMMAND
filter_ensemble_germline_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$filter_ensemble_germline_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$filter_ensemble_germline_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: filter_ensemble_germline_2_JOB_ID: filter_ensemble.germline.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=filter_ensemble.germline.PRO-00035_OS_T
JOB_DEPENDENCIES=$merge_gatk_variant_annotator_germline_2_JOB_ID
JOB_DONE=job_output/filter_ensemble_germline/filter_ensemble.germline.PRO-00035_OS_T.7f9978719da973ae83a0daf546083991.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'filter_ensemble.germline.PRO-00035_OS_T.7f9978719da973ae83a0daf546083991.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/python/3.10.4 mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
python3 $PYTHON_TOOLS/format2pcgr.py \
	-i pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz \
	-o pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.2caller.vcf.gz \
	-f 2 \
	-v germline \
	-t PRO-00035_OS_T && \
bcftools \
  view -Oz -i'TDP>=10 && TVAF>=0.05 && NDP>=10 && NVAF>=0.05' \
   \
 pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.2caller.vcf.gz | \
bcftools \
  view -Oz -s ^PRO-00035_BLOOD \
   | \
bcftools \
  sort -Oz \
   \
 -o pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.2caller.flt.vcf.gz && \
tabix -pvcf  \
pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.2caller.flt.vcf.gz
filter_ensemble.germline.PRO-00035_OS_T.7f9978719da973ae83a0daf546083991.mugqic.done
chmod 755 $COMMAND
filter_ensemble_germline_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$filter_ensemble_germline_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$filter_ensemble_germline_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: filter_ensemble_somatic
#-------------------------------------------------------------------------------
STEP=filter_ensemble_somatic
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: filter_ensemble_somatic_1_JOB_ID: filter_ensemble.somatic.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=filter_ensemble.somatic.PRO-00089_OS_T
JOB_DEPENDENCIES=$merge_gatk_variant_annotator_somatic_1_JOB_ID
JOB_DONE=job_output/filter_ensemble_somatic/filter_ensemble.somatic.PRO-00089_OS_T.8e28985e5f54c2ad3d534a5a885f3692.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'filter_ensemble.somatic.PRO-00089_OS_T.8e28985e5f54c2ad3d534a5a885f3692.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/python/3.10.4 mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
python3 $PYTHON_TOOLS/format2pcgr.py \
	-i pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz \
	-o pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.2caller.vcf.gz \
	-f 2 \
	-v somatic \
	-t PRO-00089_OS_T && \
bcftools \
  view -Oz -i'TDP>=10 && TVAF>=0.05 && NDP>=10 && NVAF<=0.05' \
   \
 -o pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.2caller.flt.vcf.gz \
 pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.2caller.vcf.gz && \
tabix -pvcf  \
pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.2caller.flt.vcf.gz
filter_ensemble.somatic.PRO-00089_OS_T.8e28985e5f54c2ad3d534a5a885f3692.mugqic.done
chmod 755 $COMMAND
filter_ensemble_somatic_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$filter_ensemble_somatic_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$filter_ensemble_somatic_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: filter_ensemble_somatic_2_JOB_ID: filter_ensemble.somatic.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=filter_ensemble.somatic.PRO-00035_OS_T
JOB_DEPENDENCIES=$merge_gatk_variant_annotator_somatic_2_JOB_ID
JOB_DONE=job_output/filter_ensemble_somatic/filter_ensemble.somatic.PRO-00035_OS_T.78a1dcb64fefc95a3a76dd5086ec7549.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'filter_ensemble.somatic.PRO-00035_OS_T.78a1dcb64fefc95a3a76dd5086ec7549.mugqic.done' > $COMMAND
module purge && \
module load mugqic/mugqic_tools/2.10.5 mugqic/python/3.10.4 mugqic/bcftools/1.15 mugqic/htslib/1.14 && \
python3 $PYTHON_TOOLS/format2pcgr.py \
	-i pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz \
	-o pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.2caller.vcf.gz \
	-f 2 \
	-v somatic \
	-t PRO-00035_OS_T && \
bcftools \
  view -Oz -i'TDP>=10 && TVAF>=0.05 && NDP>=10 && NVAF<=0.05' \
   \
 -o pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.2caller.flt.vcf.gz \
 pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.2caller.vcf.gz && \
tabix -pvcf  \
pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.2caller.flt.vcf.gz
filter_ensemble.somatic.PRO-00035_OS_T.78a1dcb64fefc95a3a76dd5086ec7549.mugqic.done
chmod 755 $COMMAND
filter_ensemble_somatic_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 12G -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$filter_ensemble_somatic_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$filter_ensemble_somatic_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: report_cpsr
#-------------------------------------------------------------------------------
STEP=report_cpsr
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: report_cpsr_1_JOB_ID: report_cpsr.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=report_cpsr.PRO-00089_OS_T
JOB_DEPENDENCIES=$filter_ensemble_germline_1_JOB_ID
JOB_DONE=job_output/report_cpsr/report_cpsr.PRO-00089_OS_T.841e8114174ce3e176c31d582a15096b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'report_cpsr.PRO-00089_OS_T.841e8114174ce3e176c31d582a15096b.mugqic.done' > $COMMAND
module purge && \
module load mugqic/cpsr/0.6.2 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/cpsr && \
touch pairedVariants/ensemble/PRO-00089_OS_T/cpsr && \
cpsr.py --no_vcf_validate --force_overwrite --no_docker --secondary_findings --gwas_findings --panel_id 0 \
    --input_vcf pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.2caller.flt.vcf.gz \
    --pcgr_dir $PCGR_DATA \
    --output_dir pairedVariants/ensemble/PRO-00089_OS_T/cpsr \
    --genome_assembly grch37 \
    --sample_id PRO-00089_OS_T
report_cpsr.PRO-00089_OS_T.841e8114174ce3e176c31d582a15096b.mugqic.done
chmod 755 $COMMAND
report_cpsr_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 36G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$report_cpsr_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$report_cpsr_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: report_cpsr_2_JOB_ID: report_cpsr.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=report_cpsr.PRO-00035_OS_T
JOB_DEPENDENCIES=$filter_ensemble_germline_2_JOB_ID
JOB_DONE=job_output/report_cpsr/report_cpsr.PRO-00035_OS_T.c61c0627f3dbcc8809b36d1f2a43eba3.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'report_cpsr.PRO-00035_OS_T.c61c0627f3dbcc8809b36d1f2a43eba3.mugqic.done' > $COMMAND
module purge && \
module load mugqic/cpsr/0.6.2 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/cpsr && \
touch pairedVariants/ensemble/PRO-00035_OS_T/cpsr && \
cpsr.py --no_vcf_validate --force_overwrite --no_docker --secondary_findings --gwas_findings --panel_id 0 \
    --input_vcf pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.2caller.flt.vcf.gz \
    --pcgr_dir $PCGR_DATA \
    --output_dir pairedVariants/ensemble/PRO-00035_OS_T/cpsr \
    --genome_assembly grch37 \
    --sample_id PRO-00035_OS_T
report_cpsr.PRO-00035_OS_T.c61c0627f3dbcc8809b36d1f2a43eba3.mugqic.done
chmod 755 $COMMAND
report_cpsr_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 36G -c 8 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$report_cpsr_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$report_cpsr_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: report_pcgr
#-------------------------------------------------------------------------------
STEP=report_pcgr
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: report_pcgr_1_JOB_ID: report_pcgr.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=report_pcgr.PRO-00089_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_3_JOB_ID:$filter_ensemble_somatic_1_JOB_ID:$report_cpsr_1_JOB_ID
JOB_DONE=job_output/report_pcgr/report_pcgr.PRO-00089_OS_T.bdce3488b8d32a34e93a0ef926a54254.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'report_pcgr.PRO-00089_OS_T.bdce3488b8d32a34e93a0ef926a54254.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/pcgr/0.9.2 && \
mkdir -p pairedVariants/ensemble/PRO-00089_OS_T/pcgr && \
touch pairedVariants/ensemble/PRO-00089_OS_T/pcgr && \
`cat > SVariants/header << END
Chromosome	Start	End	Segment_Mean
END` && \
bcftools \
  query -f '%CHROM\t%POS\t%END\t%FOLD_CHANGE_LOG\n' \
   \
 -o SVariants/PRO-00089_OS_T.cnvkit.body.tsv \
 SVariants/PRO-00089_OS_T/PRO-00089_OS_T.cnvkit.vcf.gz && \
cat SVariants/header SVariants/PRO-00089_OS_T.cnvkit.body.tsv > SVariants/PRO-00089_OS_T.cnvkit.cna.tsv && \
pcgr.py --no_vcf_validate --force_overwrite --no_docker --vep_buffer_size 500 --vep_regulatory --show_noncoding --vcf2maf \
    --tumor_site 0 \
    --assay WGS \
    --call_conf_tag TAL --tumor_dp_tag TDP --tumor_af_tag TVAF --tumor_dp_min 10 --tumor_af_min 0.05 \
    --control_dp_tag NDP --control_af_tag NVAF --control_dp_min 10 --control_af_max 0.05 \
    --estimate_signatures \
    --estimate_tmb --tmb_algorithm nonsyn \
    --estimate_msi_status \
    --input_vcf pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.2caller.flt.vcf.gz \
    --cpsr_report pairedVariants/ensemble/PRO-00089_OS_T/cpsr/PRO-00089_OS_T.cpsr.grch37.json.gz \
    --input_cna SVariants/PRO-00089_OS_T.cnvkit.cna.tsv \
    --pcgr_dir $PCGR_DATA \
    --output_dir pairedVariants/ensemble/PRO-00089_OS_T/pcgr \
    --genome_assembly grch37 \
    --sample_id PRO-00089_OS_T
report_pcgr.PRO-00089_OS_T.bdce3488b8d32a34e93a0ef926a54254.mugqic.done
chmod 755 $COMMAND
report_pcgr_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 36G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$report_pcgr_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$report_pcgr_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: report_pcgr_2_JOB_ID: report_pcgr.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=report_pcgr.PRO-00035_OS_T
JOB_DEPENDENCIES=$cnvkit_batch_7_JOB_ID:$filter_ensemble_somatic_2_JOB_ID:$report_cpsr_2_JOB_ID:$report_pcgr_1_JOB_ID
JOB_DONE=job_output/report_pcgr/report_pcgr.PRO-00035_OS_T.e89656dad8acf7d2480c759c886d48e8.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'report_pcgr.PRO-00035_OS_T.e89656dad8acf7d2480c759c886d48e8.mugqic.done' > $COMMAND
module purge && \
module load mugqic/bcftools/1.15 mugqic/pcgr/0.9.2 && \
mkdir -p pairedVariants/ensemble/PRO-00035_OS_T/pcgr && \
touch pairedVariants/ensemble/PRO-00035_OS_T/pcgr && \
`cat > SVariants/header << END
Chromosome	Start	End	Segment_Mean
END` && \
bcftools \
  query -f '%CHROM\t%POS\t%END\t%FOLD_CHANGE_LOG\n' \
   \
 -o SVariants/PRO-00035_OS_T.cnvkit.body.tsv \
 SVariants/PRO-00035_OS_T/PRO-00035_OS_T.cnvkit.vcf.gz && \
cat SVariants/header SVariants/PRO-00035_OS_T.cnvkit.body.tsv > SVariants/PRO-00035_OS_T.cnvkit.cna.tsv && \
pcgr.py --no_vcf_validate --force_overwrite --no_docker --vep_buffer_size 500 --vep_regulatory --show_noncoding --vcf2maf \
    --tumor_site 0 \
    --assay WGS \
    --call_conf_tag TAL --tumor_dp_tag TDP --tumor_af_tag TVAF --tumor_dp_min 10 --tumor_af_min 0.05 \
    --control_dp_tag NDP --control_af_tag NVAF --control_dp_min 10 --control_af_max 0.05 \
    --estimate_signatures \
    --estimate_tmb --tmb_algorithm nonsyn \
    --estimate_msi_status \
    --input_vcf pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.2caller.flt.vcf.gz \
    --cpsr_report pairedVariants/ensemble/PRO-00035_OS_T/cpsr/PRO-00035_OS_T.cpsr.grch37.json.gz \
    --input_cna SVariants/PRO-00035_OS_T.cnvkit.cna.tsv \
    --pcgr_dir $PCGR_DATA \
    --output_dir pairedVariants/ensemble/PRO-00035_OS_T/pcgr \
    --genome_assembly grch37 \
    --sample_id PRO-00035_OS_T
report_pcgr.PRO-00035_OS_T.e89656dad8acf7d2480c759c886d48e8.mugqic.done
chmod 755 $COMMAND
report_pcgr_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem 36G -c 32 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$report_pcgr_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$report_pcgr_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: run_pair_multiqc
#-------------------------------------------------------------------------------
STEP=run_pair_multiqc
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: run_pair_multiqc_1_JOB_ID: multiqc.PRO-00089_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=multiqc.PRO-00089_OS_T
JOB_DEPENDENCIES=$metrics_dna_picard_metrics_1_JOB_ID:$metrics_dna_picard_metrics_2_JOB_ID:$metrics_dna_picard_metrics_3_JOB_ID:$metrics_dna_picard_metrics_4_JOB_ID:$metrics_dna_picard_metrics_5_JOB_ID:$metrics_dna_picard_metrics_6_JOB_ID:$metrics_dna_sample_qualimap_1_JOB_ID:$metrics_dna_sample_qualimap_2_JOB_ID:$metrics_dna_fastqc_1_JOB_ID:$metrics_dna_fastqc_2_JOB_ID
JOB_DONE=job_output/run_pair_multiqc/multiqc.PRO-00089_OS_T.e447ccdf201449c9c50f5171235e4783.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'multiqc.PRO-00089_OS_T.e447ccdf201449c9c50f5171235e4783.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/3.7.3 mugqic/MultiQC/1.9 && \
multiqc -f  \
 \
  metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.oxog_metrics.txt  \
  metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.qcbias_metrics.txt  \
  metrics/dna/PRO-00089_BLOOD/picard_metrics/PRO-00089_BLOOD.all.metrics.quality_distribution.pdf  \
  metrics/dna/PRO-00089_BLOOD/qualimap/PRO-00089_BLOOD/genome_results.txt  \
  metrics/dna/PRO-00089_BLOOD/fastqc/PRO-00089_BLOOD.sorted.dup_fastqc.zip  \
  metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.oxog_metrics.txt  \
  metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.qcbias_metrics.txt  \
  metrics/dna/PRO-00089_OS_T/picard_metrics/PRO-00089_OS_T.all.metrics.quality_distribution.pdf  \
  metrics/dna/PRO-00089_OS_T/qualimap/PRO-00089_OS_T/genome_results.txt  \
  metrics/dna/PRO-00089_OS_T/fastqc/PRO-00089_OS_T.sorted.dup_fastqc.zip \
-n metrics/dna/PRO-00089_OS_T.multiqc.html
multiqc.PRO-00089_OS_T.e447ccdf201449c9c50f5171235e4783.mugqic.done
chmod 755 $COMMAND
run_pair_multiqc_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=02:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$run_pair_multiqc_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$run_pair_multiqc_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: run_pair_multiqc_2_JOB_ID: multiqc.PRO-00035_OS_T
#-------------------------------------------------------------------------------
JOB_NAME=multiqc.PRO-00035_OS_T
JOB_DEPENDENCIES=$metrics_dna_picard_metrics_9_JOB_ID:$metrics_dna_picard_metrics_10_JOB_ID:$metrics_dna_picard_metrics_11_JOB_ID:$metrics_dna_picard_metrics_12_JOB_ID:$metrics_dna_picard_metrics_13_JOB_ID:$metrics_dna_picard_metrics_14_JOB_ID:$metrics_dna_sample_qualimap_3_JOB_ID:$metrics_dna_sample_qualimap_4_JOB_ID:$metrics_dna_fastqc_3_JOB_ID:$metrics_dna_fastqc_4_JOB_ID
JOB_DONE=job_output/run_pair_multiqc/multiqc.PRO-00035_OS_T.fa15b188f9ae92b40b458a6ef6fc4268.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'multiqc.PRO-00035_OS_T.fa15b188f9ae92b40b458a6ef6fc4268.mugqic.done' > $COMMAND
module purge && \
module load mugqic/python/3.7.3 mugqic/MultiQC/1.9 && \
multiqc -f  \
 \
  metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.oxog_metrics.txt  \
  metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.qcbias_metrics.txt  \
  metrics/dna/PRO-00035_BLOOD/picard_metrics/PRO-00035_BLOOD.all.metrics.quality_distribution.pdf  \
  metrics/dna/PRO-00035_BLOOD/qualimap/PRO-00035_BLOOD/genome_results.txt  \
  metrics/dna/PRO-00035_BLOOD/fastqc/PRO-00035_BLOOD.sorted.dup_fastqc.zip  \
  metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.oxog_metrics.txt  \
  metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.qcbias_metrics.txt  \
  metrics/dna/PRO-00035_OS_T/picard_metrics/PRO-00035_OS_T.all.metrics.quality_distribution.pdf  \
  metrics/dna/PRO-00035_OS_T/qualimap/PRO-00035_OS_T/genome_results.txt  \
  metrics/dna/PRO-00035_OS_T/fastqc/PRO-00035_OS_T.sorted.dup_fastqc.zip \
-n metrics/dna/PRO-00035_OS_T.multiqc.html
multiqc.PRO-00035_OS_T.fa15b188f9ae92b40b458a6ef6fc4268.mugqic.done
chmod 755 $COMMAND
run_pair_multiqc_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=02:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$run_pair_multiqc_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$run_pair_multiqc_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sym_link_fastq_pair
#-------------------------------------------------------------------------------
STEP=sym_link_fastq_pair
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_1_JOB_ID: sym_link_fastq.pairs.0.PRO-00089_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.0.PRO-00089_OS_T.Normal
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.0.PRO-00089_OS_T.Normal.851f03ff927499dae5f5e8ca80c79d76.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.0.PRO-00089_OS_T.Normal.851f03ff927499dae5f5e8ca80c79d76.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair1.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair1.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair1.fastq.gz.md5
sym_link_fastq.pairs.0.PRO-00089_OS_T.Normal.851f03ff927499dae5f5e8ca80c79d76.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_2_JOB_ID: sym_link_fastq.pairs.1.PRO-00089_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.1.PRO-00089_OS_T.Normal
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.1.PRO-00089_OS_T.Normal.c9defedfaeb7e0dcbe2c3e3d5db9292d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.1.PRO-00089_OS_T.Normal.c9defedfaeb7e0dcbe2c3e3d5db9292d.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair2.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair2.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/raw_reads/PRO-00089_N_WGS_Blood.MPS12343824-G05.5045.1.pair2.fastq.gz.md5
sym_link_fastq.pairs.1.PRO-00089_OS_T.Normal.c9defedfaeb7e0dcbe2c3e3d5db9292d.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_3_JOB_ID: sym_link_fastq.pairs.0.PRO-00089_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.0.PRO-00089_OS_T.Tumor
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.0.PRO-00089_OS_T.Tumor.709dbc593816ee4f06c9dcde676c01a7.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.0.PRO-00089_OS_T.Tumor.709dbc593816ee4f06c9dcde676c01a7.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair1.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair1.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair1.fastq.gz.md5
sym_link_fastq.pairs.0.PRO-00089_OS_T.Tumor.709dbc593816ee4f06c9dcde676c01a7.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_4_JOB_ID: sym_link_fastq.pairs.1.PRO-00089_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.1.PRO-00089_OS_T.Tumor
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.1.PRO-00089_OS_T.Tumor.d22c4d15348b0d02ffcaee524e089c80.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.1.PRO-00089_OS_T.Tumor.d22c4d15348b0d02ffcaee524e089c80.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00089/reads/raw/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair2.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair2.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/raw_reads/PRO-00089_T_WGS_Bone.MPS12343837-A10.5045.2.pair2.fastq.gz.md5
sym_link_fastq.pairs.1.PRO-00089_OS_T.Tumor.d22c4d15348b0d02ffcaee524e089c80.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_5_JOB_ID: sym_link_fastq.pairs.0.PRO-00035_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.0.PRO-00035_OS_T.Normal
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.0.PRO-00035_OS_T.Normal.73f38b607e191a0bacf5ce0310d150af.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.0.PRO-00035_OS_T.Normal.73f38b607e191a0bacf5ce0310d150af.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair1.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair1.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair1.fastq.gz.md5
sym_link_fastq.pairs.0.PRO-00035_OS_T.Normal.73f38b607e191a0bacf5ce0310d150af.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_6_JOB_ID: sym_link_fastq.pairs.1.PRO-00035_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.1.PRO-00035_OS_T.Normal
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.1.PRO-00035_OS_T.Normal.310b340276548e7297c73ceb573bb310.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.1.PRO-00035_OS_T.Normal.310b340276548e7297c73ceb573bb310.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair2.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair2.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/raw_reads/PRO-00035O_N_WGS_Blood.MPS12302674-E09.4384.6.pair2.fastq.gz.md5
sym_link_fastq.pairs.1.PRO-00035_OS_T.Normal.310b340276548e7297c73ceb573bb310.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_7_JOB_ID: sym_link_fastq.pairs.0.PRO-00035_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.0.PRO-00035_OS_T.Tumor
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.0.PRO-00035_OS_T.Tumor.2127f5304d1e66ed1349be993d3de258.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.0.PRO-00035_OS_T.Tumor.2127f5304d1e66ed1349be993d3de258.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair1.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair1.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair1.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair1.fastq.gz.md5
sym_link_fastq.pairs.0.PRO-00035_OS_T.Tumor.2127f5304d1e66ed1349be993d3de258.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_fastq_pair_8_JOB_ID: sym_link_fastq.pairs.1.PRO-00035_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.pairs.1.PRO-00035_OS_T.Tumor
JOB_DEPENDENCIES=
JOB_DONE=job_output/sym_link_fastq_pair/sym_link_fastq.pairs.1.PRO-00035_OS_T.Tumor.bdfaf65ae5cb5ff065e2312fa366918a.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.pairs.1.PRO-00035_OS_T.Tumor.bdfaf65ae5cb5ff065e2312fa366918a.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads && \
ln -s -f \
  /lustre06/project/6037386/data-kleinman/pipeline/v0/levels1-2/njabado/WGS/2022-11-02_Clincal_WGS_OS_hg/PRO-00035/reads/raw/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair2.fastq.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair2.fastq.gz && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair2.fastq.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/raw_reads/PRO-00035O_T_WGS_Right_Femur.MPS12302674-F09.4384.7.pair2.fastq.gz.md5
sym_link_fastq.pairs.1.PRO-00035_OS_T.Tumor.bdfaf65ae5cb5ff065e2312fa366918a.mugqic.done
chmod 755 $COMMAND
sym_link_fastq_pair_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_fastq_pair_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_fastq_pair_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sym_link_final_bam
#-------------------------------------------------------------------------------
STEP=sym_link_final_bam
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_1_JOB_ID: sym_link_final_bam.pairs.0.PRO-00089_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.0.PRO-00089_OS_T.Normal
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.0.PRO-00089_OS_T.Normal.4ed11343c891c990800bbab1847bc976.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.0.PRO-00089_OS_T.Normal.4ed11343c891c990800bbab1847bc976.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment/PRO-00089_BLOOD.sorted.dup.recal.bam && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment/PRO-00089_BLOOD.sorted.dup.recal.bam.md5
sym_link_final_bam.pairs.0.PRO-00089_OS_T.Normal.4ed11343c891c990800bbab1847bc976.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_2_JOB_ID: sym_link_final_bam.pairs.1.PRO-00089_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.1.PRO-00089_OS_T.Normal
JOB_DEPENDENCIES=$recalibration_2_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.1.PRO-00089_OS_T.Normal.09343aaf1db7dfdfc7a3c0545125e357.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.1.PRO-00089_OS_T.Normal.09343aaf1db7dfdfc7a3c0545125e357.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam.bai \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam.bai.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment/PRO-00089_BLOOD.sorted.dup.recal.bam.bai && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_BLOOD/PRO-00089_BLOOD.sorted.dup.recal.bam.bai.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_BLOOD/wgs/alignment/PRO-00089_BLOOD.sorted.dup.recal.bam.bai.md5
sym_link_final_bam.pairs.1.PRO-00089_OS_T.Normal.09343aaf1db7dfdfc7a3c0545125e357.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_3_JOB_ID: sym_link_final_bam.pairs.0.PRO-00089_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.0.PRO-00089_OS_T.Tumor
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.0.PRO-00089_OS_T.Tumor.cc64f6c8ba68a3399202b41d6500d367.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.0.PRO-00089_OS_T.Tumor.cc64f6c8ba68a3399202b41d6500d367.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment/PRO-00089_OS_T.sorted.dup.recal.bam && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment/PRO-00089_OS_T.sorted.dup.recal.bam.md5
sym_link_final_bam.pairs.0.PRO-00089_OS_T.Tumor.cc64f6c8ba68a3399202b41d6500d367.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_3_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_3_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_3_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_4_JOB_ID: sym_link_final_bam.pairs.1.PRO-00089_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.1.PRO-00089_OS_T.Tumor
JOB_DEPENDENCIES=$recalibration_4_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.1.PRO-00089_OS_T.Tumor.54989b539e979d263173c6baa56270b5.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.1.PRO-00089_OS_T.Tumor.54989b539e979d263173c6baa56270b5.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam.bai \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam.bai.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment/PRO-00089_OS_T.sorted.dup.recal.bam.bai && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00089_OS_T/PRO-00089_OS_T.sorted.dup.recal.bam.bai.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/alignment/PRO-00089_OS_T.sorted.dup.recal.bam.bai.md5
sym_link_final_bam.pairs.1.PRO-00089_OS_T.Tumor.54989b539e979d263173c6baa56270b5.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_4_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_4_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_4_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_5_JOB_ID: sym_link_final_bam.pairs.0.PRO-00035_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.0.PRO-00035_OS_T.Normal
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.0.PRO-00035_OS_T.Normal.9f61af555b67a8dcf885d55974e54e0b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.0.PRO-00035_OS_T.Normal.9f61af555b67a8dcf885d55974e54e0b.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment/PRO-00035_BLOOD.sorted.dup.recal.bam && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment/PRO-00035_BLOOD.sorted.dup.recal.bam.md5
sym_link_final_bam.pairs.0.PRO-00035_OS_T.Normal.9f61af555b67a8dcf885d55974e54e0b.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_5_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_5_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_5_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_6_JOB_ID: sym_link_final_bam.pairs.1.PRO-00035_OS_T.Normal
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.1.PRO-00035_OS_T.Normal
JOB_DEPENDENCIES=$recalibration_6_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.1.PRO-00035_OS_T.Normal.98bbb72f3b545c55f25c39afd4d9246b.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.1.PRO-00035_OS_T.Normal.98bbb72f3b545c55f25c39afd4d9246b.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam.bai \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam.bai.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment/PRO-00035_BLOOD.sorted.dup.recal.bam.bai && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_BLOOD/PRO-00035_BLOOD.sorted.dup.recal.bam.bai.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_BLOOD/wgs/alignment/PRO-00035_BLOOD.sorted.dup.recal.bam.bai.md5
sym_link_final_bam.pairs.1.PRO-00035_OS_T.Normal.98bbb72f3b545c55f25c39afd4d9246b.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_6_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_6_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_6_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_7_JOB_ID: sym_link_final_bam.pairs.0.PRO-00035_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.0.PRO-00035_OS_T.Tumor
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.0.PRO-00035_OS_T.Tumor.f2038b9cc4e3aae8c348e27439042f3e.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.0.PRO-00035_OS_T.Tumor.f2038b9cc4e3aae8c348e27439042f3e.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment/PRO-00035_OS_T.sorted.dup.recal.bam && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment/PRO-00035_OS_T.sorted.dup.recal.bam.md5
sym_link_final_bam.pairs.0.PRO-00035_OS_T.Tumor.f2038b9cc4e3aae8c348e27439042f3e.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_7_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_7_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_7_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_final_bam_8_JOB_ID: sym_link_final_bam.pairs.1.PRO-00035_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_final_bam.pairs.1.PRO-00035_OS_T.Tumor
JOB_DEPENDENCIES=$recalibration_8_JOB_ID
JOB_DONE=job_output/sym_link_final_bam/sym_link_final_bam.pairs.1.PRO-00035_OS_T.Tumor.67cf3cc16bbbf6c160c113622158338f.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_final_bam.pairs.1.PRO-00035_OS_T.Tumor.67cf3cc16bbbf6c160c113622158338f.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam.bai \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam.bai.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam.bai \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment/PRO-00035_OS_T.sorted.dup.recal.bam.bai && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/alignment/PRO-00035_OS_T/PRO-00035_OS_T.sorted.dup.recal.bam.bai.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/alignment/PRO-00035_OS_T.sorted.dup.recal.bam.bai.md5
sym_link_final_bam.pairs.1.PRO-00035_OS_T.Tumor.67cf3cc16bbbf6c160c113622158338f.mugqic.done
chmod 755 $COMMAND
sym_link_final_bam_8_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_final_bam_8_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_final_bam_8_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sym_link_report
#-------------------------------------------------------------------------------
STEP=sym_link_report
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sym_link_report_1_JOB_ID: sym_link_fastq.report.0.PRO-00089_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.report.0.PRO-00089_OS_T.Tumor
JOB_DEPENDENCIES=$run_pair_multiqc_1_JOB_ID
JOB_DONE=job_output/sym_link_report/sym_link_fastq.report.0.PRO-00089_OS_T.Tumor.21149543609f3be204a6e8ff55dbaf1c.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.report.0.PRO-00089_OS_T.Tumor.21149543609f3be204a6e8ff55dbaf1c.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/metrics && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/metrics/dna/PRO-00089_OS_T.multiqc.html \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/metrics/PRO-00089_OS_T.multiqc.html
sym_link_fastq.report.0.PRO-00089_OS_T.Tumor.21149543609f3be204a6e8ff55dbaf1c.mugqic.done
chmod 755 $COMMAND
sym_link_report_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_report_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_report_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_report_2_JOB_ID: sym_link_fastq.report.0.PRO-00035_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_fastq.report.0.PRO-00035_OS_T.Tumor
JOB_DEPENDENCIES=$run_pair_multiqc_2_JOB_ID
JOB_DONE=job_output/sym_link_report/sym_link_fastq.report.0.PRO-00035_OS_T.Tumor.28b1c614808e4e79ca2388407bbab75d.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_fastq.report.0.PRO-00035_OS_T.Tumor.28b1c614808e4e79ca2388407bbab75d.mugqic.done' > $COMMAND
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/metrics && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/metrics/dna/PRO-00035_OS_T.multiqc.html \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/metrics/PRO-00035_OS_T.multiqc.html
sym_link_fastq.report.0.PRO-00035_OS_T.Tumor.28b1c614808e4e79ca2388407bbab75d.mugqic.done
chmod 755 $COMMAND
sym_link_report_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=03:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_report_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_report_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# STEP: sym_link_ensemble
#-------------------------------------------------------------------------------
STEP=sym_link_ensemble
mkdir -p $JOB_OUTPUT_DIR/$STEP

#-------------------------------------------------------------------------------
# JOB: sym_link_ensemble_1_JOB_ID: sym_link_ensemble.0.PRO-00089_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_ensemble.0.PRO-00089_OS_T.Tumor
JOB_DEPENDENCIES=$merge_gatk_variant_annotator_somatic_1_JOB_ID:$merge_gatk_variant_annotator_germline_1_JOB_ID
JOB_DONE=job_output/sym_link_ensemble/sym_link_ensemble.0.PRO-00089_OS_T.Tumor.65820c3502767736f6ac4714e94e3449.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_ensemble.0.PRO-00089_OS_T.Tumor.65820c3502767736f6ac4714e94e3449.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble/PRO-00089_OS_T.ensemble.somatic.vt.annot.vcf.gz.tbi && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00089_OS_T/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00089_OS_T/PRO-00089_OS_T/wgs/snv/ensemble/PRO-00089_OS_T.ensemble.germline.vt.annot.vcf.gz.tbi
sym_link_ensemble.0.PRO-00089_OS_T.Tumor.65820c3502767736f6ac4714e94e3449.mugqic.done
chmod 755 $COMMAND
sym_link_ensemble_1_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_ensemble_1_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_ensemble_1_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# JOB: sym_link_ensemble_2_JOB_ID: sym_link_ensemble.0.PRO-00035_OS_T.Tumor
#-------------------------------------------------------------------------------
JOB_NAME=sym_link_ensemble.0.PRO-00035_OS_T.Tumor
JOB_DEPENDENCIES=$merge_gatk_variant_annotator_somatic_2_JOB_ID:$merge_gatk_variant_annotator_germline_2_JOB_ID
JOB_DONE=job_output/sym_link_ensemble/sym_link_ensemble.0.PRO-00035_OS_T.Tumor.ea6a87d1d8cc3a657953722109c9bf34.mugqic.done
JOB_OUTPUT_RELATIVE_PATH=$STEP/${JOB_NAME}_$TIMESTAMP.o
JOB_OUTPUT=$JOB_OUTPUT_DIR/$JOB_OUTPUT_RELATIVE_PATH
COMMAND=$JOB_OUTPUT_DIR/$STEP/${JOB_NAME}_$TIMESTAMP.sh
cat << 'sym_link_ensemble.0.PRO-00035_OS_T.Tumor.ea6a87d1d8cc3a657953722109c9bf34.mugqic.done' > $COMMAND
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble/PRO-00035_OS_T.ensemble.somatic.vt.annot.vcf.gz.tbi && \
md5sum /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz \
  > /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz.md5 \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz.md5 && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz && \
mkdir -p /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble && \
ln -s -f \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/pairedVariants/ensemble/PRO-00035_OS_T/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz.tbi \
  /lustre06/project/6004736/alvann/from_narval/220318_EZHIP/WGS/clinical_seq_patients/out/01_genpipes_tumorpair/deliverables/PRO-00035_OS_T/PRO-00035_OS_T/wgs/snv/ensemble/PRO-00035_OS_T.ensemble.germline.vt.annot.vcf.gz.tbi
sym_link_ensemble.0.PRO-00035_OS_T.Tumor.ea6a87d1d8cc3a657953722109c9bf34.mugqic.done
chmod 755 $COMMAND
sym_link_ensemble_2_JOB_ID=$(echo "#! /bin/bash
echo '#######################################'
echo 'SLURM FAKE PROLOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
rm -f $JOB_DONE &&     $COMMAND
MUGQIC_STATE=\$PIPESTATUS
echo MUGQICexitStatus:\$MUGQIC_STATE

if [ \$MUGQIC_STATE -eq 0 ] ; then touch $JOB_DONE ; fi
echo '#######################################'
echo 'SLURM FAKE EPILOGUE (MUGQIC)'
date
scontrol show job \$SLURM_JOBID
sstat -j \$SLURM_JOBID.batch
echo '#######################################'
exit \$MUGQIC_STATE" | \
sbatch --mail-type=END,FAIL --mail-user=$JOB_MAIL -A $RAP_ID -D $OUTPUT_DIR -o $JOB_OUTPUT -J $JOB_NAME --time=24:00:00 --mem-per-cpu 3900M -c 1 -N 1    --depend=afterok:$JOB_DEPENDENCIES | grep "[0-9]" | cut -d\  -f4)
echo "$sym_link_ensemble_2_JOB_ID	$JOB_NAME	$JOB_DEPENDENCIES	$JOB_OUTPUT_RELATIVE_PATH" >> $JOB_LIST

echo "$sym_link_ensemble_2_JOB_ID	$JOB_NAME submitted"
sleep 0.1

#-------------------------------------------------------------------------------
# Call home with pipeline statistics
#-------------------------------------------------------------------------------
LOG_MD5=$(echo $USER-'10.80.49.3-TumorPair-PRO-00089_BLOOD.PRO-00089_BLOOD_1,PRO-00089_OS_T.PRO-00089_OS_T_1,PRO-00035_BLOOD.PRO-00035_BLOOD_1,PRO-00035_OS_T.PRO-00035_OS_T_1.PRO-00035_OS_T_2' | md5sum | awk '{ print $1 }')
if test -t 1; then ncolors=$(tput colors); if test -n "$ncolors" && test $ncolors -ge 8; then bold="$(tput bold)"; normal="$(tput sgr0)"; yellow="$(tput setaf 3)"; fi; fi
wget --quiet 'http://mugqic.hpc.mcgill.ca/cgi-bin/pipeline.cgi?hostname=narval3.narval.calcul.quebec&ip=10.80.49.3&pipeline=TumorPair&steps=picard_sam_to_fastq,skewer_trimming,bwa_mem_sambamba_sort_sam,sambamba_merge_sam_files,gatk_indel_realigner,sambamba_merge_realigned,sambamba_mark_duplicates,recalibration,conpair_concordance_contamination,metrics_dna_picard_metrics,metrics_dna_sample_qualimap,metrics_dna_fastqc,sequenza,manta_sv_calls,strelka2_paired_somatic,strelka2_paired_germline,strelka2_paired_germline_snpeff,purple,rawmpileup,paired_varscan2,merge_varscan2,paired_mutect2,merge_mutect2,vardict_paired,merge_filter_paired_vardict,ensemble_somatic,gatk_variant_annotator_somatic,merge_gatk_variant_annotator_somatic,ensemble_germline_loh,gatk_variant_annotator_germline,merge_gatk_variant_annotator_germline,cnvkit_batch,filter_ensemble_germline,filter_ensemble_somatic,report_cpsr,report_pcgr,run_pair_multiqc,sym_link_fastq_pair,sym_link_final_bam,sym_link_report,sym_link_ensemble&samples=4&md5=$LOG_MD5' -O /dev/null || echo "${bold}${yellow}Warning:${normal}${yellow} Genpipes ran successfully but was not send telemetry to mugqic.hpc.mcgill.ca. This error will not affect genpipes jobs you have submitted.${normal}"
